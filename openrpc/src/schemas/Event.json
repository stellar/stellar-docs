{
    "Event": {
        "type": "object",
        "properties": {
            "type": {
                "$ref": "#/components/schemas/EventType"
            },
            "ledger": {
                "description": "Sequence number of the ledger in which this event was emitted.",
                "$ref": "#/components/schemas/LedgerSequence"
            },
            "ledgerClosedAt": {
                "type": "string",
                "description": "[ISO-8601](https://www.iso.org/iso-8601-date-and-time-format.html) timestamp of the ledger closing time"
            },
            "contractId": {
                "description": "StrKey representation of the contract address that emitted this event.",
                "$ref": "#/components/schemas/ContractId"
            },
            "id": {
                "$ref": "#/components/schemas/EventId"
            },
            "pagingToken": {
                "description": "Duplicate of `id` field, but in the standard place for pagination tokens.",
                "$ref": "#/components/schemas/EventId"
            },
            "inSuccessfulContractCall": {
                "description": "If true the event was emitted during a successful contract call.",
                "type": "boolean"
            },
            "topic": {
                "type": "array",
                "description": "List containing the topic this event was emitted with.",
                "$ref": "#/components/schemas/TopicFilter"
            },
            "value": {
                "$ref": "#/components/schemas/EventValue"
            },
            "txHash": {
                "$ref": "#/components/schemas/TransactionHash",
                "description": "The transaction which triggered this event."
            }
        }
    },
    "EventType": {
        "title": "type",
        "description": "The type of event emission.",
        "type": "string",
        "enum": [ "contract", "diagnostic", "system" ]
    },
    "EventId": {
        "description": "Unique identifier for this event.\n\n- The event's unique id field is based on a [`toid` from Horizon](https://github.com/stellar/go/blob/master/toid/main.go) as used in Horizon's /effects endpoint.\n\n- https://github.com/stellar/go/blob/master/services/horizon/internal/db2/history/effect.go#L58\n\n- Specifically, it is a string containing:\n\n- bigint(32 bit ledger sequence + 20 bit txn number + 12 bit operation) + `<hyphen>` + number for the event within the operation.\n\n- For example: `1234-1`",
        "type": "string"
    },
    "EventValue": {
        "description": "The emitted body value of the event (serialized in a base64 string).",
        "type": "string"
    }
}
