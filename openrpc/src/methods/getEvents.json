{
    "name": "getEvents",
    "summary": "returns contract events",
    "description": "Clients can request a filtered list of events emitted by a given ledger range.\n\nSoroban-RPC will support querying within a maximum 24 hours of recent ledgers.\n\nNote, this could be used by the client to only prompt a refresh when there is a new ledger with relevant events. It should also be used by backend Dapp components to \"ingest\" events into their own database for querying and serving.\n\nIf making multiple requests, clients should deduplicate any events received, based on the event's unique id field. This prevents double-processing in the case of duplicate events being received.\n\nBy default soroban-rpc retains the most recent 24 hours of events.",
    "externalDocs": {
        "url": "https://developers.stellar.org/network/soroban-rpc/api-reference/methods/getEvents"
    },
    "paramStructure": "by-name",
    "params": [
        {
            "$ref": "#/components/contentDescriptors/StartLedger"
        },
        {
            "$ref": "#/components/contentDescriptors/EventFilters"
        },
        {
            "$ref": "#/components/contentDescriptors/Pagination"
        }
    ],
    "result": {
        "name": "getEventsResult",
        "schema": {
            "type": "object",
            "properties": {
                "latestLedger": {
                    "$ref": "#/components/schemas/LatestLedger"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/Event"
                    }
                }
            }
        }
    },
    "examples": [
        { "$ref": "#/components/examplePairingObjects/NativeTransferEventsExample" },
        { "$ref": "#/components/examplePairingObjects/AnyEventsExample" }
    ]
}

