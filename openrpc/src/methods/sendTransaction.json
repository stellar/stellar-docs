{
    "name": "sendTransaction",
    "summary": "submits a transaction",
    "description": "Submit a real transaction to the Stellar network. This is the only way to make changes on-chain.\n\n Unlike Horizon, this does not wait for transaction completion. It simply validates and enqueues the transaction. Clients should call `getTransaction` to learn about transaction success/failure.\n\nThis supports all transactions, not only smart contract-related transactions.",
    "externalDocs": {
        "url": "https://developers.stellar.org/network/soroban-rpc/api-reference/methods/sendTransaction"
    },
    "paramStructure": "by-name",
    "params": [
        {
            "$ref": "#/components/contentDescriptors/SignedTransaction"
        }
    ],
    "result": {
        "name": "sendTransactionResult",
        "summary": "Transaction status and network state.",
        "description": "Transaction status and network state. The result will include if the transaction was successfully enqueued, and information about the current ledger.",
        "schema": {
            "type": "object",
            "properties": {
                "hash": {
                    "$ref": "#/components/schemas/TransactionHash"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the transaction by hash.",
                    "enum": [
                        "PENDING",
                        "DUPLICATE",
                        "TRY_AGAIN_LATER",
                        "ERROR"
                    ]
                },
                "latestLedger": {
                    "$ref": "#/components/schemas/LatestLedger"
                },
                "latestLedgerCloseTime": {
                    "$ref": "#/components/schemas/LatestLedgerCloseTime"
                },
                "errorResultXdr": {
                    "type": "string",
                    "description": "(optional) If the transaction status is `ERROR`, this will be a base64 encoded string of the raw TransactionResult XDR struct containing details on why stellar-core rejected the transaction.",
                    "contentEncoding": "base64"
                },
                "diagnosticEventsXdr": {
                    "type": "array",
                    "description": "(optional) If the transaction status is `ERROR`, this field may be present with an array of base64 encoded strings. Each string will decode to a raw DiagnosticEvent XDR struct containing details on why stellar-core rejected the transaction.",
                    "contentEncoding": "base64",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [ "hash", "status", "latestLedger", "latestLedgerCloseTime" ]
        }
    },
    "examples": [
        { "$ref": "#/components/examplePairingObjects/PendingTransaction" },
        { "$ref": "#/components/examplePairingObjects/DuplicateTransaction" },
        { "$ref": "#/components/examplePairingObjects/ErrorTransaction" },
        { "$ref": "#/components/examplePairingObjects/TryAgainLaterTransaction" }
    ]
}
