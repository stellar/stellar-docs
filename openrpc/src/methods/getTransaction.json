{
    "name": "getTransaction",
    "summary": "returns transaction details",
    "description": "The getTransaction method provides details about the specified transaction. Clients are expected to periodically query this method to ascertain when a transaction has been successfully recorded on the blockchain. The soroban-rpc system maintains a restricted history of recently processed transactions, with the default retention window set at 1440 ledgers, approximately equivalent to a 2-hour timeframe. For private soroban-rpc instances, it is possible to modify the retention window value by adjusting the transaction-retention-window configuration setting. For comprehensive debugging needs that extend beyond the 2-hour timeframe, it is advisable to retrieve transaction information from Horizon, as it provides a lasting and persistent record.",
    "externalDocs": {
        "url": "https://developers.stellar.org/network/soroban-rpc/api-reference/methods/getTransaction"
    },
    "paramStructure": "by-name",
    "params": [
        {
            "$ref": "#/components/contentDescriptors/TransactionHash"
        }
    ],
    "result": {
        "name": "getTransactionResult",
        "schema": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The current status of the transaction by hash",
                    "enum": [
                        "SUCCESS",
                        "NOT_FOUND",
                        "FAILED"
                    ]
                },
                "latestLedger": {
                    "$ref": "#/components/schemas/LatestLedger"
                },
                "latestLedgerCloseTime": {
                    "$ref": "#/components/schemas/LatestLedgerCloseTime"
                },
                "oldestLedger": {
                    "$ref": "#/components/schemas/OldestLedger"
                },
                "oldestLedgerCloseTime": {
                    "$ref": "#/components/schemas/OldestLedgerCloseTime"
                },
                "ledger": {
                    "title": "ledger",
                    "description": "(optional) The sequence number of the ledger which included the transaction. This field is only present if `status` is `SUCCESS` or `FAILED`.",
                    "$ref": "#/components/schemas/LedgerSequence"
                },
                "createdAt": {
                    "title": "createdAt",
                    "description": "(optional) The unix timestamp of when the transaction was included in the ledger. This field is only present if `status` is `SUCCESS` or `FAILED`.",
                    "$ref": "#/components/schemas/LedgerCloseTime"
                },
                "applicationOrder": {
                    "type": "number",
                    "description": "(optional) The index of the transaction among all transactions included in the ledger. This field is only present if `status` is `SUCCESS` or `FAILED`."
                },
                "feeBump": {
                    "type": "boolean",
                    "description": "(optional) Indicates whether the transaction was fee bumped. This field is only present if `status` is `SUCCESS` or `FAILED`."
                },
                "envelopeXdr": {
                    "type": "string",
                    "description": "(optional) A base64 encoded string of the raw TransactionEnvelope XDR struct for this transaction."
                },
                "resultXdr": {
                    "type": "string",
                    "description": "(optional) A base64 encoded string of the raw TransactionResult XDR struct for this transaction. This field is only present if `status` is `SUCCESS` or `FAILED`."
                },
                "resultMetaXdr": {
                    "type": "string",
                    "description": "(optional) A base64 encoded string of the raw TransactionMeta XDR struct for this transaction."
                }
            },
            "required": [ "status", "latestLedger", "latestLedgerCloseTime", "oldestLedger", "oldestLedgerCloseTime" ]
        }
    },
    "examples": [
        { "$ref": "#/components/examplePairingObjects/SuccessfulTransaction" },
        { "$ref": "#/components/examplePairingObjects/NotFoundTransaction" },
        { "$ref": "#/components/examplePairingObjects/FailedTransaction" }
    ]
}
