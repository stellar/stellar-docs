{
    "EventFilters": {
        "type": "array",
        "maxItems": 5,
        "items": {
            "$ref": "#/components/schemas/EventFilter"
        }
    },
    "EventFilter": {
        "type": "object",
        "properties": {
            "type": {
                "$ref": "#/components/schemas/EventFilterType"
            },
            "contractIds": {
                "$ref": "#/components/schemas/ContractIds"
            },
            "topics": {
                "$ref": "#/components/schemas/TopicFilters"
            }
        },
        "required": []
    },
    "EventFilterType": {
        "title": "type",
        "type": "string",
        "description": "A comma separated list of event types (system, contract, or diagnostic) used to filter events. If omitted, all event types are included."
    },
    "TopicFilters": {
        "title": "topics",
        "type": "array",
        "description": "List of topic filters. If omitted, query for all events. If multiple filters are specified, events will be included if they match any of the filters. Maximum 5 filters are allowed per request.",
        "maxItems": 5,
        "items": {
            "$ref": "#/components/schemas/TopicFilter"
        }
    },
    "SegmentMatcher": {
        "title": "SegmentMatcher",
        "type": "string",
        "description": "A `SegmentMatcher` is one of the following:\n\n- For an exact segment match, a string containing a base64-encoded ScVal\n\n- For a wildcard single-segment match, the string \"*\", matches exactly one segment."
    },
    "TopicFilter": {
        "type": "array",
        "description": "A `TopicFilter` is `SegmentMatcher[]`\n\n- The list can be 1-4 `SegmentMatchers` long.",
        "minItems": 1,
        "maxItems": 4,
        "items": {
            "$ref": "#/components/schemas/SegmentMatcher"
        }
    }
}
