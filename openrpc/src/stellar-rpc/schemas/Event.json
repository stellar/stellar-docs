{
    "Event": {
        "type": "object",
        "properties": {
            "type": {
                "$ref": "#/components/schemas/EventType"
            },
            "ledger": {
                "description": "Sequence number of the ledger in which this event was emitted.",
                "$ref": "#/components/schemas/LedgerSequence"
            },
            "ledgerClosedAt": {
                "type": "string",
                "description": "[ISO-8601](https://www.iso.org/iso-8601-date-and-time-format.html) timestamp of the ledger closing time"
            },
            "contractId": {
                "description": "StrKey representation of the contract address that emitted this event.",
                "$ref": "#/components/schemas/ContractId"
            },
            "id": {
                "$ref": "#/components/schemas/EventId"
            },
            "transactionIndex": {
                "description": "The index of the transaction within the ledger this event occurred in.",
                "type": "number"
            },
            "operationIndex": {
                "description": "The index of the operation within the transaction this event occurred in.",
                "type": "number"
            },
            "inSuccessfulContractCall": {
                "description": "If true the event was emitted during a successful contract call.",
                "deprecated": true,
                "type": "boolean"
            },
            "topic": {
                "type": "array",
                "description": "The [ScVal](https://github.com/stellar/stellar-xdr/blob/v22.0/Stellar-contract.x#L214)s containing the topics this event was emitted with (as a base64 string).",
                "$ref": "#/components/schemas/TopicFilter"
            },
            "value": {
                "$ref": "#/components/schemas/EventValue"
            },
            "txHash": {
                "$ref": "#/components/schemas/TransactionHash",
                "description": "The transaction which triggered this event."
            }
        }
    },
    "EventType": {
        "title": "type",
        "description": "The type of event emission.",
        "type": "string",
        "enum": [ "contract", "system" ]
    },
    "EventId": {
        "description": "Unique identifier for this event, based on the [TOID](https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0035.md#specification) format. It combines a 19-character TOID and a 10-character, zero-padded event index, separated by a hyphen. \n\n- For example: `0000000000000123456-0000000001`",
        "type": "string"
    },
    "EventValue": {
        "description": "The data emitted by the event (an [ScVal](https://github.com/stellar/stellar-xdr/blob/v22.0/Stellar-contract.x#L214), serialized as a base64 string).",
        "type": "string"
    }
}
