diff --git a/node_modules/@metamask/open-rpc-docs-react/dist/ExamplePairing/ExamplePairing.js b/node_modules/@metamask/open-rpc-docs-react/dist/ExamplePairing/ExamplePairing.js
index 354ce73..08c0940 100644
--- a/node_modules/@metamask/open-rpc-docs-react/dist/ExamplePairing/ExamplePairing.js
+++ b/node_modules/@metamask/open-rpc-docs-react/dist/ExamplePairing/ExamplePairing.js
@@ -45,10 +45,40 @@ class ExamplePairing extends react_1.Component {
             }), {})
             : examplePairing.params.map(((p) => p.value));
         const methodCall = {
+            jsonrpc: "2.0",
+            id: 8675309,
             method: methodName,
             params,
         };
-        const jsCode = `await window.ethereum.request(${JSON.stringify(methodCall, null, "  ")});`;
+        if (Object.keys(params).length === 0) {
+            delete methodCall.params
+        }
+        const resultObj = {
+            jsonrpc: "2.0",
+            id: 8675309,
+            result: examplePairing.result.value
+        }
+        // const jsCode = `await window.ethereum.request(${JSON.stringify(methodCall, null, "  ")});`;
+        const serverUrl = methodName.indexOf('_') > -1
+            ? 'https://platform-server.exampleanchor.com'
+            : 'https://soroban-testnet.stellar.org'
+        const curlCode = `curl -X POST \\
+-H 'Content-Type: application/json' \\
+-d '${JSON.stringify(methodCall, null, 2)}' \\
+${serverUrl} | jq`
+        const jsCode = `let requestBody = ${JSON.stringify(methodCall, null, 2)}
+let res = await fetch('${serverUrl}', {
+  method: 'POST',
+  headers: {
+    'Content-Type': 'application/json',
+  },
+  body: JSON.stringify(requestBody),
+})
+let json = await res.json()
+console.log(json)`
+        const pythonCode = `import json, requests
+res = requests.post('${serverUrl}', json=${JSON.stringify(methodCall, null, 4)})
+print(json.dumps(res.json(), indent=4))`
         return (react_1.default.createElement("div", null,
             react_1.default.createElement("div", null,
                 react_1.default.createElement(MarkdownDescription_1.default, { uiSchema: uiSchema, source: examplePairing.description || "", className: "example-pairing-description" })),
@@ -56,18 +86,28 @@ class ExamplePairing extends react_1.Component {
                 react_1.default.createElement("div", null,
                     react_1.default.createElement("h3", null, "Request"),
                     react_1.default.createElement("div", null,
-                        components && components.CodeBlock && react_1.default.createElement(components.CodeBlock, { className: "language-js" }, jsCode),
+                        components && components.CodeBlock && components.Tabs && components.TabItem &&
+                            react_1.default.createElement(components.Tabs, { groupId: "rpc-examples" },
+                                react_1.default.createElement(components.TabItem, { value: "curl", label: "cURL" },
+                                    react_1.default.createElement(components.CodeBlock, { className: "language-bash" }, curlCode)),
+                                react_1.default.createElement(components.TabItem, { value: "js", label: "JavaScript" },
+                                    react_1.default.createElement(components.CodeBlock, { className: "language-js" }, jsCode)),
+                                react_1.default.createElement(components.TabItem, { value: "python", label: "Python" },
+                                    react_1.default.createElement(components.CodeBlock, { className: "language-python" }, pythonCode)),
+                                react_1.default.createElement(components.TabItem, { value: "json", label: "JSON" },
+                                    react_1.default.createElement(components.CodeBlock, { className: "language-json" }, JSON.stringify(methodCall, null, 2))),
+                            ),
                         !components?.CodeBlock &&
                             react_1.default.createElement("pre", null,
-                                react_1.default.createElement("code", null, jsCode))))),
+                                react_1.default.createElement("code", null, curlCode))))),
             react_1.default.createElement("div", null,
                 react_1.default.createElement("div", null,
                     react_1.default.createElement("h3", null, "Result"),
                     react_1.default.createElement("div", null,
-                        components && components.CodeBlock && react_1.default.createElement(components.CodeBlock, { className: "language-js" }, JSON.stringify(examplePairing.result.value, null, '  ')),
+                        components && components.CodeBlock && react_1.default.createElement(components.CodeBlock, { className: "language-json" }, JSON.stringify(resultObj, null, '  ')),
                         !components?.CodeBlock &&
                             react_1.default.createElement("pre", null,
-                                react_1.default.createElement("code", null, JSON.stringify(examplePairing.result.value))))))));
+                                react_1.default.createElement("code", null, JSON.stringify(resultObj, null, '  '))))))));
     }
 }
 exports.default = ExamplePairing;
diff --git a/node_modules/@metamask/open-rpc-docs-react/dist/Method/Method.d.ts b/node_modules/@metamask/open-rpc-docs-react/dist/Method/Method.d.ts
index b8b0f3d..9a49549 100644
--- a/node_modules/@metamask/open-rpc-docs-react/dist/Method/Method.d.ts
+++ b/node_modules/@metamask/open-rpc-docs-react/dist/Method/Method.d.ts
@@ -11,6 +11,14 @@ interface IProps {
             children: string;
             className?: string;
         }>;
+        Tabs?: React.FC<{
+            children: any;
+        }>;
+        TabItem?: React.FC<{
+            children: any;
+            label: string;
+            value: string;
+        }>;
     };
     onExamplePairingChange?: (examplePairing: ExamplePairingObject | undefined) => void;
     reactJsonOptions?: object;
diff --git a/node_modules/@metamask/open-rpc-docs-react/dist/Params/Params.js b/node_modules/@metamask/open-rpc-docs-react/dist/Params/Params.js
index 4b059a6..0ec9738 100644
--- a/node_modules/@metamask/open-rpc-docs-react/dist/Params/Params.js
+++ b/node_modules/@metamask/open-rpc-docs-react/dist/Params/Params.js
@@ -34,17 +34,20 @@ class Params extends react_1.Component {
         if (!params || params.length === 0) {
             return null;
         }
-        return (params.map((row, i) => react_1.default.createElement("section", null,
-            react_1.default.createElement("h3", null,
-                i + 1,
-                ". ",
-                row.name,
-                (row.required === undefined ||
-                    row.required === true) &&
-                    react_1.default.createElement("span", { className: "content-descriptor-summary" },
-                        react_1.default.createElement("i", null,
-                            react_1.default.createElement("small", null, " (required)")))),
-            react_1.default.createElement(ContentDescriptor_1.default, { key: row.name, contentDescriptor: row, uiSchema: uiSchema }))));
+        return (
+            [react_1.default.createElement("p", { key: "param-structure", className: "param-structure-requirement" }, "Please note that parameter structure within the request must contain named parameters as a by-name object, and not as positional arguments in a by-position array"),
+            ...params.map((row, i) => react_1.default.createElement("section", null,
+                react_1.default.createElement("h3", null,
+                    i + 1,
+                    ". ",
+                    row.name,
+                    (row.required === undefined ||
+                        row.required === true) &&
+                        react_1.default.createElement("span", { className: "content-descriptor-summary" },
+                            react_1.default.createElement("i", null,
+                                react_1.default.createElement("small", null, " (required)")))),
+                react_1.default.createElement(ContentDescriptor_1.default, { key: row.name, contentDescriptor: row, uiSchema: uiSchema })))]
+        );
     }
 }
 exports.default = Params;
