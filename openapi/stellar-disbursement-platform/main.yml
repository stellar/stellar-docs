swagger: '2.0'
info:
  title: Stellar Disbursement Platform API
  version: ''
  description: ''
paths:
  /login:
    post:
      responses:
        '201':
          description: Created
          headers: {}
          examples:
            application/json:
              token: >-
                eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoidXNlci1pZCIsImVtYWlsIjoiZW1haWxAZW1haWwuY29tIiwicm9sZXMiOlt7Im5hbWUiOiJTdXBlcnZpc29yIn1dfSwiZXhwIjoxNjc1OTYyOTQ3fQ.4Zj9yBXch-iuFYF-kc_EhHPxjpwp_egMOLbOv4bZKO1MFvcmEgZ5MlXH1_1fZfgUxaNBcMCdRM6MGSqKocwGnA
          schema:
            type: object
            properties:
              token:
                type: string
            example:
              token: >-
                eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoidXNlci1pZCIsImVtYWlsIjoiZW1haWxAZW1haWwuY29tIiwicm9sZXMiOlt7Im5hbWUiOiJTdXBlcnZpc29yIn1dfSwiZXhwIjoxNjc1OTYyOTQ3fQ.4Zj9yBXch-iuFYF-kc_EhHPxjpwp_egMOLbOv4bZKO1MFvcmEgZ5MlXH1_1fZfgUxaNBcMCdRM6MGSqKocwGnA
        '400':
          description: Bad Request
          headers: {}
          examples:
            application/json:
              error: Invalid credentials
              extras:
                status: 400
                message: Invalid username or password
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Invalid credentials
              extras:
                status: 400
                message: Invalid username or password
      summary: Log In
      operationId: Log In
      description: ''
      tags:
        - Authentication
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
            example:
              username: johndoe@mail.com
              password: mysecret
      produces:
        - application/json
  /refresh_token:
    post:
      responses:
        '201':
          description: Created
          headers: {}
          examples:
            application/json:
              token: >-
                eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoidXNlci1pZCIsImVtYWlsIjoiZW1haWxAZW1haWwuY29tIiwicm9sZXMiOlt7Im5hbWUiOiJTdXBlcnZpc29yIn1dfSwiZXhwIjoxNjc1OTYyOTQ3fQ.4Zj9yBXch-iuFYF-kc_EhHPxjpwp_egMOLbOv4bZKO1MFvcmEgZ5MlXH1_1fZfgUxaNBcMCdRM6MGSqKocwGnA
          schema:
            type: object
            properties:
              token:
                type: string
            example:
              token: >-
                eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoidXNlci1pZCIsImVtYWlsIjoiZW1haWxAZW1haWwuY29tIiwicm9sZXMiOlt7Im5hbWUiOiJTdXBlcnZpc29yIn1dfSwiZXhwIjoxNjc1OTYyOTQ3fQ.4Zj9yBXch-iuFYF-kc_EhHPxjpwp_egMOLbOv4bZKO1MFvcmEgZ5MlXH1_1fZfgUxaNBcMCdRM6MGSqKocwGnA
        '400':
          description: Bad Request
          headers: {}
          examples:
            application/json:
              error: Invalid token
              extras:
                status: 400
                message: Token is expired or invalid
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Invalid token
              extras:
                status: 400
                message: Token is expired or invalid
      summary: Refresh Token
      operationId: Refresh Token
      description: ''
      tags:
        - Authentication
      parameters: []
      produces:
        - application/json
      security:
        - BearerAuth: []
  /mfa:
    post:
      summary: Multi-factor authentication endpoint
      operationId: authenticateMFA
      tags:
        - Authentication
      parameters:
        - in: body
          name: body
          description: MFA request data
          required: true
          schema:
            type: object
            properties:
              mfa_code:
                type: string
                description: Multi-factor authentication code
              remember_me:
                type: boolean
                description: Boolean flag to remember the user
              recaptcha_token:
                type: string
                description: Token for reCAPTCHA validation
            required:
              - mfa_code
        - in: header
          name: Device-ID
          type: string
          required: false
          description: Identifier of the device
      responses:
        '200':
          description: Successful authentication
          schema:
            type: object
            properties:
              token:
                type: string
                description: Authentication token
        '400':
          $ref: '#/responses/BadRequestResponse'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
      produces:
        - application/json
  /forgot-password:
    post:
      summary: Forgot password endpoint
      operationId: forgotPassword
      tags:
        - Authentication
      parameters:
        - in: body
          name: body
          description: Forgot password request data
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                description: Email of the user
              recaptcha_token:
                type: string
                description: Token for reCAPTCHA validation
            required:
              - email
      responses:
        '200':
          description: Forgot password email sent successfully
          schema:
            $ref: '#/definitions/MessageResponse'
        '400':
          $ref: '#/responses/BadRequestResponse'
  /reset-password:
    post:
      summary: Reset password endpoint
      operationId: resetPassword
      tags:
        - Authentication
      parameters:
        - in: body
          name: body
          description: Reset password request data
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
                description: New password for the user
              reset_token:
                type: string
                description: Token used to identify a valid password reset request
            required:
              - password
              - reset_token
      responses:
        '200':
          description: Password reset successfully
        '400':
          $ref: '#/responses/BadRequestResponse'
      produces:
        - application/json
  /disbursements:
    get:
      responses:
        '200':
          description: "A list of Disbursement details"
          schema:
            $ref: '#/definitions/DisbursementPagination'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
      summary: List All Disbursements
      operationId: List All Disbursements
      description: ''
      tags:
        - Disbursements
      parameters:
        - name: page
          in: query
          description: The page requested.
          required: false
          type: number
          default: 1
        - name: page_limit
          in: query
          description: Define how many results will be returned in the response.
          required: false
          type: number
          default: 20
        - name: q
          in: query
          description: a search term used to query through the disbursements names.
          required: false
          type: string
        - name: status
          in: query
          description: exact match on the status of the disbursement.
          required: false
          x-example: DRAFT
          type: string
          enum:
            - DRAFT
            - READY
            - STARTED
            - PAUSED
            - COMPLETED
        - name: created_at_after
          in: query
          description: >-
            only return disbursements that are created after this date. Format:
            YYYY-MM-DD
          required: false
          x-example: '2006-01-02'
          type: string
        - name: created_at_before
          in: query
          description: >-
            only return disbursements that are created before this date. Format:
            YYYY-MM-DD
          required: false
          x-example: '2006-01-02'
          type: string
        - name: sort
          in: query
          description: field used to sort disbursements
          required: false
          type: string
          default: created_at
          enum:
            - name
            - created_at
        - name: direction
          in: query
          description: direction for sorting disbursements.
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      produces:
        - application/json
      security:
        - BearerAuth: []
    post:
      responses:
        '201':
          description: "A new disbursement"
          schema:
            $ref: '#/definitions/Disbursement'
        '400':
          description: Bad Request
          headers: {}
          examples:
            application/json:
              error: Bad request
              extras:
                status: 400
                message: Invalid country code provided
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Bad request
              extras:
                status: 400
                message: Invalid country code provided
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
      summary: Create Disbursements
      operationId: Create Disbursements
      description: ''
      tags:
        - Disbursements
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
              wallet_id:
                type: string
              asset_id:
                type: string
              country_code:
                type: string
            example:
              name: My New Disbursement name
              wallet_id: e2de8544-b7e2-40a9-ad40-411f70d5c4bf
              asset_id: e2de8544-b7e2-40a9-ad40-411f70d5c4bf
              country_code: ua
      produces:
        - application/json
      security:
        - BearerAuth: []
  /disbursements/{id}:
    get:
      responses:
        '200':
          description: "Disbursement details"
          schema:
            $ref: '#/definitions/Disbursement'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
      summary: Retrieve a Disbursement
      operationId: Retrieve a Disbursement
      description: ''
      tags:
        - Disbursements
      parameters:
        - name: id
          in: path
          description: ID of the `Disbursement`.
          required: true
          type: string
      produces:
        - application/json
      security:
        - BearerAuth: []
  /disbursements/{id}/receivers:
    get:
      responses:
        '200':
          description: "A list of Disbursement Receivers"
          schema:
            $ref: '#/definitions/DisbursementReceiverPagination'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
      summary: List All Disbursement Receivers
      operationId: List All Disbursement Receivers
      description: ''
      tags:
        - Disbursements
      parameters:
        - name: id
          in: path
          description: ID of the Disbursement
          required: true
          type: string
        - name: page
          in: query
          description: The page number to fetch.
          required: false
          type: number
        - name: page_limit
          in: query
          description: The number of records to return per page.
          required: false
          type: number
      produces:
        - application/json
      security:
        - BearerAuth: []
  /disbursements/{id}/instructions:
    post:
      responses:
        '201':
          description: Created
          headers: {}
          examples:
            application/json:
              message: File uploaded succesfully
          schema:
            type: object
            properties:
              message:
                type: string
            example:
              message: File uploaded succesfully
        '400':
          description: Bad Request
          headers: {}
          examples:
            application/json:
              error: Invalid file format *.xyz
              extras:
                foo: bar
                message: Not authorized
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  foo:
                    type: string
                  message:
                    type: string
            example:
              error: Invalid file format *.xyz
              extras:
                foo: bar
                message: Not authorized
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
      summary: Upload Disbursement Instructions
      operationId: Upload Disbursement Instructions
      description: Upload a CSV file with disbursement instructions.
      consumes:
        - multipart/form-data
      tags:
        - Disbursements
      parameters:
        - name: id
          in: path
          description: ID of the Disbursement
          required: true
          type: string
        - name: "file"
          in: "formData"
          description: "Disbursement instructions file to upload. The CSV file should be in the following format: `phone,id,amount,verification`"
          required: true
          type: "file"
      produces:
        - application/json
      security:
        - BearerAuth: []
    get:
      responses:
        '200':
          description: "Disbursement CSV file"
          headers:
            Content-Disposition:
              type: string
              description: "The filename of the returned CSV file."
            Content-Type:
              type: string
              description: "text/csv"
          examples:
            text/csv: ''
        '400':
          description: Bad Request
          headers: {}
          examples:
            application/json:
              error: Invalid request
              extras:
                foo: bar
                message: Invalid request parameters
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  foo:
                    type: string
                  message:
                    type: string
            example:
              error: Invalid request
              extras:
                foo: bar
                message: Invalid request parameters
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
      summary: Download Disbursement Instructions
      operationId: Download Disbursement Instructions
      description: ''
      tags:
        - Disbursements
      parameters:
        - name: id
          in: path
          description: ID of the Disbursement
          required: true
          type: string
      produces:
        - text/csv
      security:
        - BearerAuth: []
  /disbursements/{id}/status:
    patch:
      responses:
        '200':
          description: "Message Response"
          schema:
            $ref: '#/definitions/MessageResponse'
          examples:
            application/json:
              message: Disbursement started
        '400':
          description: Bad Request
          headers: {}
          examples:
            application/json:
              error: Bad request
              extras:
                status: 400
                message: Disbursement is not ready to be started
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Bad request
              extras:
                status: 400
                message: Disbursement is not ready to be started
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not found
              extras:
                status: 404
                message: Disbursement not found
      summary: Update a Disbursement Status
      operationId: Update a Disbursement Status
      description: ''
      tags:
        - Disbursements
      parameters:
        - name: id
          in: path
          description: ID of the disbursement
          required: true
          type: string
      produces:
        - application/json
      security:
        - BearerAuth: []
  /payments:
    get:
      responses:
        '200':
          description: "A paginated list of payments"
          schema:
            $ref: '#/definitions/PaymentPagination'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
      summary: List All Payments
      operationId: List All Payments
      description: ''
      tags:
        - Payments
      parameters:
        - name: page
          in: query
          description: The page requested.
          required: false
          type: number
          default: 1
        - name: page_limit
          in: query
          description: Define how many results will be returned in the response.
          required: false
          type: number
          default: 20
        - name: status
          in: query
          description: exact match on the status of the payment.
          required: false
          x-example: DRAFT
          type: string
          enum:
            - DRAFT
            - READY
            - PENDING
            - PAUSED
            - SUCCESS
            - FAILED
        - name: receiver_id
          in: query
          description: uuid that represents a receiver in the database
          required: false
          x-example: b6b667ad-6cc2-46cf-9be7-561daace7d48
          type: string
        - name: created_at_after
          in: query
          description: >-
            only return payments that are created after this date. Format:
            YYYY-MM-DD
          required: false
          x-example: '2006-01-02'
          type: string
        - name: created_at_before
          in: query
          description: >-
            only return payments that are created before this date. Format:
            YYYY-MM-DD
          required: false
          x-example: '2006-01-02'
          type: string
        - name: sort
          in: query
          description: field used to sort payments
          required: false
          type: string
          default: created_at
          enum:
            - created_at
        - name: direction
          in: query
          description: direction for sorting payments.
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      produces:
        - application/json
      security:
        - BearerAuth: []
  /payments/{id}:
    get:
      responses:
        '200':
          description: "Payment details"
          schema:
            $ref: '#/definitions/Payment'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
        '404':
          description: Not Found
          headers: {}
          examples:
            application/json:
              error: Not found
              extras:
                status: 404
                message: Payment not found
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: string
            example:
              error: Not found
              extras:
                status: 404
                message: Payment not found
      summary: Retrieve a Payment
      operationId: Retrieve a Payment
      description: ''
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          description: ID of the `Payment`.
          required: true
          type: string
      produces:
        - application/json
      security:
        - BearerAuth: []
  /receivers:
    get:
      responses:
        '200':
          description: "A paginated list of Receiver details"
          schema:
            $ref: '#/definitions/ReceiverPagination'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
      summary: List All Receivers
      operationId: List All Receivers
      description: ''
      tags:
        - Receivers
      parameters:
        - name: page
          in: query
          description: The page requested.
          required: false
          type: number
          default: 1
        - name: page_limit
          in: query
          description: Define how many results will be returned in the response.
          required: false
          type: number
          default: 20
        - name: q
          in: query
          description: >-
            a search term used to query through the receivers phone_number,
            email and ID.
          required: false
          type: string
        - name: status
          in: query
          description: exact match on the status of the receiver wallet.
          required: false
          x-example: DRAFT
          type: string
          enum:
            - DRAFT
            - READY
            - REGISTERED
            - FLAGGED
        - name: created_at_after
          in: query
          description: >-
            only return receivers that are created after this date. Format:
            YYYY-MM-DD
          required: false
          x-example: '2006-01-02'
          type: string
        - name: created_at_before
          in: query
          description: >-
            only return receivers that are created before this date. Format:
            YYYY-MM-DD
          required: false
          x-example: '2006-01-02'
          type: string
        - name: sort
          in: query
          description: field used to sort receivers
          required: false
          type: string
          default: created_at
          enum:
            - created_at
        - name: direction
          in: query
          description: direction for sorting receivers.
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      produces:
        - application/json
      security:
        - BearerAuth: []
  /receivers/{id}:
    get:
      responses:
        '200':
          description: "Receiver Details"
          schema:
            $ref: '#/definitions/Receiver'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
        '404':
          $ref: '#/responses/NotFoundResponse'

      summary: Retrieve a Receiver
      operationId: Retrieve a Receiver
      description: ''
      tags:
        - Receivers
      parameters:
        - name: id
          in: path
          description: ID of the `Receiver`.
          required: true
          type: string
      produces:
        - application/json
      security:
        - BearerAuth: []
    patch:
      responses:
        '200':
          description: "Updated Receiver Details"
          schema:
            $ref: '#/definitions/Receiver'
        '400':
          $ref: '#/responses/BadRequestResponse'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
        '404':
          $ref: '#/responses/NotFoundResponse'
      summary: Update the Receiver
      operationId: Update the Receiver
      description: ''
      tags:
        - Receivers
      parameters:
        - name: id
          in: path
          description: ID of the `Receiver`.
          required: true
          type: string
        - name: body
          in: body
          description: List of fields to patch for the receiver
          required: true
          schema:
            $ref: '#/definitions/PatchReceiverRequest'
      produces:
        - application/json
      security:
        - BearerAuth: []
  /statistics:
    get:
      responses:
        '200':
          description: 'General Statistics response'
          schema:
            $ref: '#/definitions/GeneralStatistics'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
      summary: Retrieve all Statistics
      operationId: Retrieve all Statistics
      description: 'All statistics, including disbursement and receiver wallet data'
      tags:
        - Statistics
      parameters: []
      produces:
        - application/json
      security:
        - BearerAuth: []
  /statistics/disbursements/{id}:
    get:
      responses:
        '200':
          description: 'Returns statistics for disbursement'
          schema:
            $ref: '#/definitions/DisbursementsStatistics'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
      summary: Retrieve Disbursement-specific Statistics
      operationId: Retrieve Disbursement-specific Statistics
      description: ''
      tags:
        - Statistics
      parameters:
        - name: id
          in: path
          description: ID of the `Disbursement`.
          required: true
          type: string
      produces:
        - application/json
      security:
        - BearerAuth: []
  /wallet-registration/start:
    get:
      summary: Load the PII Confirmation Webpage
      operationId: Load the PII Confirmation Webpage
      description: >-
        This is the endpoint the browser will reach with the first token, so the
        user can confirm their PII information and then launch the wallet through a deep link. 
        Requires a valid SEP-24 token in the request.
      tags:
        - Wallet-Registration
      produces:
        - text/html
      parameters:
        - name: token
          in: query
          description: The SEP-24 token used for authentication
          required: true
          type: string
        - name: transaction_id
          in: query
          description: The transaction id associated with the SEP-24 token
          required: true
          type: string
      responses:
        '200':
          description: Token is valid and the webpage will be loaded normally.
          schema:
            type: string
            description: HTML page content
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '400':
          $ref: '#/responses/BadRequestResponse'
  /wallet-registration/otp:
    post:
      summary: Send OTP to the provided phone number
      operationId: SendOTP
      description: >-
        This endpoint generates a 6-digit OTP and sends it via SMS to the 
        phone number provided in the request body. A valid SEP-24 token should be 
        included in the Authorization header of the request.
      tags:
        - Wallet-Registration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Object containing phone number
          required: true
          schema:
            type: object
            properties:
              phone_number:
                type: string
                description: Phone number to which the OTP will be sent
        - name: Authorization
          in: header
          description: "SEP-24 token for authorization (Format: 'Bearer {token}')"
          required: true
          type: string
      responses:
        '200':
          description: OTP sent successfully
          schema:
            $ref: '#/definitions/MessageResponse'
        '400':
          $ref: '#/responses/BadRequestResponse'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '429':
          description: >-
            An OTP was sent to the given user recently and hasn't expired yet.
            Only after expired it will be sent to the user again.
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  code:
                    type: string
                  details:
                    type: string
  /wallet-registration/verification:
    post:
      summary: Verify Receiver Registration
      operationId: VerifyReceiverRegistration
      description: >-
        This endpoint verifies the receiver's registration by validating the 
        OTP and other verification values provided in the request body. 
        A valid SEP-24 token should be included in the Authorization header of the request.
      tags:
        - Wallet-Registration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Verification data including phone number, OTP, verification value, and reCAPTCHA token
          required: true
          schema:
            $ref: '#/definitions/ReceiverRegistrationRequest'
        - name: Authorization
          in: header
          description: "SEP-24 token for authorization (Format: 'Bearer {token}')"
          required: true
          type: string
      responses:
        '200':
          description: Verification successful
          schema:
            type: object
            properties:
              message:
                type: string
                example: "ok"
        '400':
          $ref: '#/responses/BadRequestResponse'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
  /.well-known/stellar.toml:
    get:
      responses:
        '200':
          description: Token is valid and the webpage will be loaded normally.
          headers: {}
          examples:
            text/toml: >
              NETWORK_PASSPHRASE="Test SDF Network ; September 2015"

              SIGNING_KEY="GC4HAYCFQYQLJV5SE6FB3LGC37D6XGIXGMAXCXWNBLH7NWW2JH4OZLHQ"

              WEB_AUTH_ENDPOINT="https://localhost:8000/sep10_auth"
      summary: Stellar toml
      operationId: Stellar toml
      description: >-
        This is the endpoint where the wallet will gather the SEP-10 server url
        and SEP-10 signing public key.
      tags:
        - Anchor
      parameters: []
      produces:
        - text/toml
  /WEB_AUTH_ENDPOINT:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              transaction: >-
                AAAAAgAAAADIiRu2BrqqeOcP28PWCkD4D5Rjjsqh71HwvqFX+F4VXAAAAGQAAAAAAAAAAAAAAAEAAAAAXzrUcQAAAABfOtf1AAAAAAAAAAEAAAABAAAAAEEB8rhqNa70RYjaNnF1ARE2CbL50iR9HPXST/fImJN1AAAACgAAADB0aGlzaXNhdGVzdC5zYW5kYm94LmFuY2hvci5hbmNob3Jkb21haW4uY29tIGF1dGgAAAABAAAAQGdGOFlIQm1zaGpEWEY0L0VJUFZucGVlRkxVTDY2V0tKMVBPYXZuUVVBNjBoL09XaC91M2Vvdk54WFJtSTAvQ2UAAAAAAAAAAfheFVwAAABAheKE1HjGnUCNwPbX8mz7CqotShKbA+xM2Hbjl6X0TBpEprVOUVjA6lqMJ1j62vrxn1mF3eJzsLa9s9hRofG3Ag==
              network_passphrase: Test SDF Network ; September 2015
          schema:
            type: object
            properties:
              transaction:
                type: string
              network_passphrase:
                type: string
            example:
              transaction: >-
                AAAAAgAAAADIiRu2BrqqeOcP28PWCkD4D5Rjjsqh71HwvqFX+F4VXAAAAGQAAAAAAAAAAAAAAAEAAAAAXzrUcQAAAABfOtf1AAAAAAAAAAEAAAABAAAAAEEB8rhqNa70RYjaNnF1ARE2CbL50iR9HPXST/fImJN1AAAACgAAADB0aGlzaXNhdGVzdC5zYW5kYm94LmFuY2hvci5hbmNob3Jkb21haW4uY29tIGF1dGgAAAABAAAAQGdGOFlIQm1zaGpEWEY0L0VJUFZucGVlRkxVTDY2V0tKMVBPYXZuUVVBNjBoL09XaC91M2Vvdk54WFJtSTAvQ2UAAAAAAAAAAfheFVwAAABAheKE1HjGnUCNwPbX8mz7CqotShKbA+xM2Hbjl6X0TBpEprVOUVjA6lqMJ1j62vrxn1mF3eJzsLa9s9hRofG3Ag==
              network_passphrase: Test SDF Network ; September 2015
        '400':
          description: If some information was missing or invalid.
          headers: {}
          examples:
            application/json:
              error: Bad request.
              extras:
                account: account cannot be empty
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  account:
                    type: string
            example:
              error: Bad request.
              extras:
                account: account cannot be empty
      summary: GET SEP-10 Challenge Transaction
      operationId: GET SEP-10 Challenge Transaction
      description: >-
        The SEP-10 endpoint where the wallet will get the challenge transaction
        to be signed. More information
        [here](https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0010.md#challenge).


        This endpoint can change, but will be provided in the tomle file under
        the `WEB_AUTH_ENDPOINT` variable.
      tags:
        - Anchor
      parameters:
        - name: account
          in: query
          description: >-
            The Client Account, which can be a stellar account (G...) or muxed
            account (M...) that the Client wishes to authenticate with the
            Server..
          required: true
          type: string
        - name: memo
          in: query
          description: >-
            The memo to attach to the challenge transaction. Only permitted if a
            Stellar account (G...) is used. The memo must be of type id. Other
            memo types are not supported.
          required: false
          type: string
        - name: client_domain
          in: query
          description: a Client Domain. Need to be supplied by all Clients/Wallets.
          required: true
          type: string
      produces:
        - application/json
    post:
      responses:
        '200':
          description: SEP-10 handshake was successful.
          headers: {}
          examples:
            application/json:
              token: >-
                eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJHQTZVSVhYUEVXWUZJTE5VSVdBQzM3WTRRUEVaTVFWREpIREtWV0ZaSjJLQ1dVQklVNUlYWk5EQSIsImp0aSI6IjE0NGQzNjdiY2IwZTcyY2FiZmRiZGU2MGVhZTBhZDczM2NjNjVkMmE2NTg3MDgzZGFiM2Q2MTZmODg1MTkwMjQiLCJpc3MiOiJodHRwczovL2ZsYXBweS1iaXJkLWRhcHAuZmlyZWJhc2VhcHAuY29tLyIsImlhdCI6MTUzNDI1Nzk5NCwiZXhwIjoxNTM0MzQ0Mzk0fQ.8nbB83Z6vGBgC1X9r3N6oQCFTBzDiITAfCJasRft0z0
          schema:
            type: object
            properties:
              token:
                type: string
            example:
              token: >-
                eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJHQTZVSVhYUEVXWUZJTE5VSVdBQzM3WTRRUEVaTVFWREpIREtWV0ZaSjJLQ1dVQklVNUlYWk5EQSIsImp0aSI6IjE0NGQzNjdiY2IwZTcyY2FiZmRiZGU2MGVhZTBhZDczM2NjNjVkMmE2NTg3MDgzZGFiM2Q2MTZmODg1MTkwMjQiLCJpc3MiOiJodHRwczovL2ZsYXBweS1iaXJkLWRhcHAuZmlyZWJhc2VhcHAuY29tLyIsImlhdCI6MTUzNDI1Nzk5NCwiZXhwIjoxNTM0MzQ0Mzk0fQ.8nbB83Z6vGBgC1X9r3N6oQCFTBzDiITAfCJasRft0z0
        '401':
          description: Unauthorized
          headers: {}
          examples:
            application/json:
              error: The provided transaction is not valid
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: The provided transaction is not valid
      summary: POST SEP-10 Challenge Transaction
      operationId: POST SEP-10 Challenge Transaction
      description: >-
        The SEP-10 endpoint where the wallet will get the challenge transaction
        to be signed. More information
        [here](https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0010.md#challenge).


        This endpoint can change, but will be provided in the tomle file under
        the `WEB_AUTH_ENDPOINT` variable.
      tags:
        - Anchor
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              transaction:
                type: string
            example:
              transaction: >-
                AAAAAgAAAADIiRu2BrqqeOcP28PWCkD4D5Rjjsqh71HwvqFX+F4VXAAAAGQAAAAAAAAAAAAAAAEAAAAAXzrUcQAAAABfOtf1AAAAAAAAAAEAAAABAAAAAEEB8rhqNa70RYjaNnF1ARE2CbL50iR9HPXST/fImJN1AAAACgAAADB0aGlzaXNhdGVzdC5zYW5kYm94LmFuY2hvci5hbmNob3Jkb21haW4uY29tIGF1dGgAAAABAAAAQGdGOFlIQm1zaGpEWEY0L0VJUFZucGVlRkxVTDY2V0tKMVBPYXZuUVVBNjBoL09XaC91M2Vvdk54WFJtSTAvQ2UAAAAAAAAAAvheFVwAAABAheKE1HjGnUCNwPbX8mz7CqotShKbA+xM2Hbjl6X0TBpEprVOUVjA6lqMJ1j62vrxn1mF3eJzsLa9s9hRofG3AsiYk3UAAABArIrkvqmA0V9lIZcVyCUdja6CiwkPwsV8BfI4CZOyR1Oq7ysvNJWwY0G42dpxN9OP1qz4dum8apG2hqvxVWjkDQ==
      produces:
        - application/json
  /registration/wallet:
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              status: ok
          schema:
            type: object
            properties:
              status:
                type: string
            example:
              status: ok
        '400':
          description: The id, token, sign or phone_number provided are incorrect.
          headers: {}
          examples:
            application/json:
              error: Unauthorized.
              extras:
                code: '400_2'
                details: The id, token, sign or phone_number provided are incorrect.
          schema:
            type: object
            properties:
              error:
                type: string
              extras:
                type: object
                properties:
                  code:
                    type: string
                  details:
                    type: string
            example:
              error: Unauthorized.
              extras:
                code: '400_2'
                details: The id, token, sign or phone_number provided are incorrect.
        '401':
          description: The SEP-10 token is invalid.
          headers: {}
          examples:
            application/json:
              error: Unauthorized
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Unauthorized
      summary: Register the Stellar Account for the User
      operationId: Register the Stellar Account for the User
      description: >-
        This is the endpoint that will be used to register the Stellar public
        key with the SDP user. It will be using the data provided in the deep
        link, that should have the following format:
        `vibrantapp://stellar-disbursement-platform?id=1&token=123&sign=abc`.
      tags:
        - Anchor
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: number
              token:
                type: string
              sign:
                type: string
              phone_number:
                type: string
            example:
              id: 1
              token: 1234abcd
              sign: abcd1234
              phone_number: '+1415555555'
      produces:
        - application/json
      security:
        - BearerAuth: []
    get:
      responses:
        '200':
          description: >-
            The account containing the given public key has already been
            registered with the SDP.
          headers: {}
          examples:
            application/json:
              status: ok
          schema:
            type: object
            properties:
              status:
                type: string
            example:
              status: ok
        '401':
          description: The SEP-10 token is invalid.
          headers: {}
          examples:
            application/json:
              error: Unauthorized
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Unauthorized
        '404':
          description: >-
            The account containing the given public key has never been
            registered with the SDP.
          headers: {}
          examples:
            application/json:
              error: Not found.
          schema:
            type: object
            properties:
              error:
                type: string
            example:
              error: Not found.
      summary: Verify if Stellar Account is Registered
      operationId: Verify if Stellar Account is Registered
      description: >-
        This is the endpoint that will be used to verify if the Stellar public
        key is already registered with the SDP user.
      tags:
        - Anchor
      parameters: []
      produces:
        - application/json
      security:
        - BearerAuth: []
  /profile:
    get:
      responses:
        '200':
          description: 'Returns user profile'
          schema:
            $ref: '#/definitions/Profile'

      summary: Get Profile
      operationId: Get Profile
      description: ''
      tags:
        - Profile
      parameters: []
      produces:
        - application/json
      security:
        - BearerAuth: []
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              message: user profile updated successfully
          schema:
            $ref: '#/definitions/MessageResponse'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
      summary: Patch User Profile
      operationId: Patch User Profile
      description: >-
        Note that all fields are optional but at least one should be sent in the
        request.
      tags:
        - Profile
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              password:
                type: string
            example:
              first_name: FirstName
              last_name: LastName
              email: email@email.com
              password: mysecret
      produces:
        - application/json
      security:
        - BearerAuth: []
  /organization:
    get:
      responses:
        '200':
          description: 'Returns organization details'
          schema:
            $ref: '#/definitions/Organization'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
      summary: Get Organization Info
      operationId: Get Organization Info
      description: ''
      tags:
        - Organization
      parameters: []
      produces:
        - application/json
      security:
        - BearerAuth: []
    patch:
      responses:
        '200':
          description: OK
          examples:
            application/json:
              message: organization profile updated successfully
          schema:
            $ref: '#/definitions/MessageResponse'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
      summary: Patch Organization Profile
      operationId: Patch Organization Profile
      tags:
        - Organization
      parameters: []
      produces:
        - application/json
      security:
        - BearerAuth: []
  /organization/logo:
    get:
      summary: Retrieve Organization Logo
      description: Retrieves the logo of the organization
      operationId: GetOrganizationLogo
      tags:
        - Organization
      produces:
        - 'application/octet-stream'
      responses:
        '200':
          description: OK
          schema:
            type: string
            format: binary
  /countries:
    get:
      summary: Get a list of countries supported by this organization
      tags:
        - Organization
      responses:
        '200':
          description: A list of countries
          schema:
            type: array
            items:
              $ref: '#/definitions/Country'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
      produces:
        - application/json
  /assets:
    get:
      summary: Get a list of assets supported by this organization
      tags:
        - Organization
      responses:
        '200':
          description: A list of assets
          schema:
            type: array
            items:
              $ref: '#/definitions/Asset'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
      produces:
        - application/json
  /wallets:
    get:
      summary: Get a list of wallets supported by this organization
      tags:
        - Organization
      responses:
        '200':
          description: A list of wallets
          schema:
            type: array
            items:
              $ref: '#/definitions/Wallet'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
      produces:
        - application/json
  /users:
    get:
      responses:
        '200':
          description: "Returns a paginated list of User Details"
          schema:
            $ref: '#/definitions/Users'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
      summary: Get All Users
      operationId: Get All Users
      description: Returns all Users registered in the SDP.
      tags:
        - Users
      parameters: []
      produces:
        - application/json
      security:
        - BearerAuth: []
    post:
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/User'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
      summary: Create User
      operationId: Create User
      description: Creates the authentication user and sends the invitation e-mail.
      tags:
        - Users
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              roles:
                type: array
                items:
                  type: string
              email:
                type: string
            example:
              first_name: John
              last_name: Doe
              roles:
                - business
              email: email@email.com
      produces:
        - application/json
      security:
        - BearerAuth: []
  /users/activation:
    patch:
      responses:
        '200':
          description: Created
          examples:
            application/json:
              message: user activation was updated successfully
          schema:
            $ref: '#/definitions/User'
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
      summary: Patch User Activation
      operationId: Patch User Activation
      description: Patchs the authentication user's activation in the SDP.
      tags:
        - Users
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              user_id:
                type: string
              is_active:
                type: boolean
            example:
              user_id: 5ca230c9-da95-4bd1-b2a2-aa5d0df65efd
              is_active: false
      produces:
        - application/json
      security:
        - BearerAuth: []
  /users/roles:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              roles:
                - developer
                - financial_controller
                - business
                - owner
          schema:
            type: object
            properties:
              roles:
                type: array
                items:
                  type: string
            example:
              roles:
                - developer
                - financial_controller
                - business
                - owner
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
      summary: Get All Roles
      operationId: Get All Roles
      description: Returns all roles that exists in the SDP.
      tags:
        - Users
      parameters: []
      produces:
        - application/json
      security:
        - BearerAuth: []
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/json:
              message: user roles were updated successfully
          schema:
            type: object
            properties:
              message:
                type: string
            example:
              message: user roles were updated successfully
        '401':
          $ref: '#/responses/UnauthorizedResponse'
        '403':
          $ref: '#/responses/ForbiddenResponse'
      summary: Patch User Role
      operationId: Patch User Role
      description: Patchs the authentication user's roles.
      tags:
        - Users
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              user_id:
                type: string
              roles:
                type: array
                items:
                  type: string
            example:
              user_id: 5ca230c9-da95-4bd1-b2a2-aa5d0df65efd
              roles:
                - developer
      produces:
        - application/json
      security:
        - BearerAuth: []
definitions:
  Amount:
    type: "object"
    properties:
      asset_code:
        type: "string"
      asset_issuer:
        type: "string"
      received_amount:
        type: "string"
  Asset:
    type: object
    properties:
      id:
        type: string
      code:
        type: string
      issuer:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      deleted_at:
        type: string
        format: date-time
  Country:
    type: object
    properties:
      code:
        type: string
      name:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  Disbursement:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      country:
        $ref: '#/definitions/Country'
      wallet:
        $ref: '#/definitions/Wallet'
      asset:
        $ref: '#/definitions/Asset'
      status:
        $ref: '#/definitions/DisbursementStatus'
      verification_field:
        $ref: '#/definitions/VerificationField'
      status_history:
        $ref: '#/definitions/DisbursementStatusHistory'
      file_name:
        type: string
      file_content:
        type: string
        format: byte
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time

  DisbursementPagination:
    type: "object"
    properties:
      pagination:
        $ref: '#/definitions/Pagination'
      data:
        type: "array"
        items:
          $ref: '#/definitions/Disbursement'

  DisbursementReceiver:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
      phone_number:
        type: string
      external_id:
        type: string
      receiver_wallet:
        $ref: '#/definitions/ReceiverWallet'
      payment:
        $ref: '#/definitions/Payment'
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time

  DisbursementReceiverPagination:
    type: "object"
    properties:
      pagination:
        $ref: '#/definitions/Pagination'
      data:
        type: "array"
        items:
          $ref: '#/definitions/DisbursementReceiver'


  DisbursementsStatistics:
    type: object
    properties:
      payment_counters:
        $ref: '#/definitions/PaymentCounters'
      payment_amounts_by_asset:
        type: array
        items:
          $ref: '#/definitions/PaymentAmountsByAsset'
      receiver_wallets_counters:
        $ref: '#/definitions/ReceiverWalletsCounters'
      total_receivers:
        type: integer
        description: Total number of receivers
        format: int64

  DisbursementStatus:
    type: string
    enum:
      - DRAFT
      - READY
      - STARTED
      - PAUSED
      - COMPLETED

  DisbursementStatusHistory:
    type: array
    items:
      $ref: '#/definitions/DisbursementStatusHistoryEntry'

  DisbursementStatusHistoryEntry:
    type: object
    properties:
      user_id:
        type: string
      status:
        $ref: '#/definitions/DisbursementStatus'
      timestamp:
        type: string
        format: date-time

  GeneralStatistics:
    type: object
    properties:
      total_disbursements:
        type: integer
        description: Total number of disbursements
        format: int64
      payment_counters:
        $ref: '#/definitions/PaymentCounters'
      payment_amounts_by_asset:
        type: array
        items:
          $ref: '#/definitions/PaymentAmountsByAsset'
      receiver_wallets_counters:
        $ref: '#/definitions/ReceiverWalletsCounters'
      total_receivers:
        type: integer
        description: Total number of receivers
        format: int64

  MessageResponse:
    type: object
    properties:
      message:
        type: string
    required:
      - message

  Organization:
    type: object
    properties:
      name:
        type: string
      logo_url:
        type: string
      distribution_account_public_key:
        type: string
      timezone_utc_offset:
        type: string
    example:
      name: My Organization Name
      logo_url: https://localhost:8000/organization/logo?token=mytoken
      distribution_account_public_key: G...
      timezone_utc_offset: '-03:00'
  Pagination:
    type: "object"
    properties:
      next:
        type: "string"
      prev:
        type: "string"
      pages:
        type: "integer"
      total:
        type: "integer"

  Payment:
    type: object
    properties:
      id:
        type: string
      amount:
        type: string
      stellar_transaction_id:
        type: string
      stellar_operation_id:
        type: string
      status:
        $ref: '#/definitions/PaymentStatus'
      status_history:
        $ref: '#/definitions/PaymentStatusHistory'
      disbursement:
        $ref: '#/definitions/Disbursement'
      asset:
        $ref: '#/definitions/Asset'
      receiver_wallet:
        $ref: '#/definitions/ReceiverWallet'
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time

  PaymentPagination:
    type: "object"
    properties:
      pagination:
        $ref: '#/definitions/Pagination'
      data:
        type: "array"
        items:
          $ref: '#/definitions/Payment'
  PaymentStatus:
    type: string
    enum:
      - DRAFT
      - READY
      - PENDING
      - PAUSED
      - SUCCESS
      - FAILED

  PaymentStatusHistory:
    type: array
    items:
      $ref: '#/definitions/PaymentStatusHistoryEntry'

  PaymentStatusHistoryEntry:
    type: object
    properties:
      status:
        $ref: '#/definitions/PaymentStatus'
      status_message:
        type: string
      timestamp:
        type: string
        format: date-time

  PaymentCounters:
    type: object
    properties:
      draft:
        type: integer
        format: int64
      ready:
        type: integer
        format: int64
      pending:
        type: integer
        format: int64
      paused:
        type: integer
        format: int64
      success:
        type: integer
        format: int64
      failed:
        type: integer
        format: int64
      total:
        type: integer
        format: int64
  PaymentAmountsByAsset:
    type: object
    properties:
      asset_code:
        type: string
      payment_amounts:
        $ref: '#/definitions/PaymentAmounts'
  PaymentAmounts:
    type: object
    properties:
      draft:
        type: string
      ready:
        type: string
      pending:
        type: string
      paused:
        type: string
      success:
        type: string
      failed:
        type: string
      average:
        type: string
      total:
        type: string

  Profile:
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      roles:
        type: array
        items:
          type: string
      organization_name:
        type: string
    example:
      first_name: FirstName
      last_name: LastName
      email: email@email.com
      roles:
        - developer
      organization_name: My Organization Name
  Receiver:
    type: "object"
    properties:
      id:
        type: "string"
      phone_number:
        type: "string"
      external_id:
        type: "string"
      email:
        type: "string"
      created_at:
        type: "string"
      total_payments:
        type: "string"
      successful_payments:
        type: "string"
      failed_payments:
        type: "string"
      remaining_payments:
        type: "string"
      registered_wallets:
        type: "string"
      received_amounts:
        type: "array"
        items:
          $ref: '#/definitions/Amount'
      wallets:
        type: "array"
        items:
          $ref: '#/definitions/ReceiverWallet'

  ReceiverLite:
    type: "object"
    properties:
      id:
        type: "string"

  ReceiverPagination:
    type: "object"
    properties:
      pagination:
        $ref: '#/definitions/Pagination'
      data:
        type: "array"
        items:
          $ref: '#/definitions/Receiver'

  ReceiverWallet:
    type: "object"
    properties:
      id:
        type: "string"
      receiver:
        $ref: '#/definitions/ReceiverLite'
      wallet:
        $ref: '#/definitions/WalletLite'
      stellar_address:
        type: "string"
      stellar_memo:
        type: "string"
      stellar_memo_type:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
      invited_at:
        type: "string"
      last_sms_sent:
        type: "string"
      total_payments:
        type: "string"
      payments_received:
        type: "string"
      failed_payments:
        type: "string"
      remaining_payments:
        type: "string"
      received_amounts:
        type: "array"
        items:
          $ref: '#/definitions/Amount'
      status:
        $ref: '#/definitions/ReceiversWalletStatus'
      status_history:
        type: "array"
        items:
          $ref: '#/definitions/ReceiversWalletStatusHistoryEntry'

  ReceiverWalletsCounters:
    type: object
    properties:
      draft:
        type: integer
        format: int64
      ready:
        type: integer
        format: int64
      registered:
        type: integer
        format: int64
      flagged:
        type: integer
        format: int64
      total:
        type: integer
        format: int64

  ReceiversWalletStatus:
    type: "string"
    enum: [ "DRAFT", "READY", "REGISTERED", "FLAGGED" ]

  ReceiversWalletStatusHistoryEntry:
    type: "object"
    properties:
      status:
        $ref: '#/definitions/ReceiversWalletStatus'
      timestamp:
        type: "string"
        format: "date-time"

  Users:
    type: array
    items:
      $ref: '#/definitions/User'
  User:
    type: object
    properties:
      id:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      roles:
        type: array
        items:
          type: string
      is_active:
        type: boolean
    required:
      - id
      - first_name
      - last_name
      - email
      - roles
      - is_active
    example:
      - id: 7a4c6555-1f73-49b3-a211-f95bd2b8ec90
        first_name: John
        last_name: Doe
        email: email@email.com
        roles:
          - developer
        is_active: true
      - id: 5f4df1dd-c84f-482a-84ad-541ffd46e75a
        first_name: Jane
        last_name: Doe
        email: email@email.com
        roles:
          - financial_controller
        is_active: false
  VerificationField:
    type: string
    enum:
      - DATE_OF_BIRTH
      - PIN
      - NATIONAL_ID_NUMBER
  Wallet:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      homepage:
        type: string
      sep_10_client_domain:
        type: string
      deep_link_schema:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time

  WalletLite:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      homepage:
        type: "string"

  ReceiverRegistrationRequest:
    type: object
    properties:
      phone_number:
        type: string
        description: Phone number used in registration
      otp:
        type: string
        description: One-Time Password received for verification
      verification:
        type: string
        description: Verification value provided by the user
      verification_type:
        type: string
        description: Type of verification value
        enum: [ DATE_OF_BIRTH, PIN, NATIONAL_ID_NUMBER ]
      recaptcha_token:
        type: string
        description: Token received from Google reCAPTCHA
  PatchReceiverRequest:
    type: object
    properties:
      date_of_birth:
        type: string
        description: Date of birth of the receiver
      pin:
        type: string
        description: Personal identification number of the receiver
      national_id:
        type: string
        description: National ID of the receiver
      email:
        type: string
        description: Email of the receiver
      external_id:
        type: string
        description: External ID of the receiver
    example:
      date_of_birth: "1980-01-01"
      pin: "1234"
      national_id: "123456789"
      email: "john@example.com"
      external_id: "external123"
responses:
  UnauthorizedResponse:
    description: Unauthorized
    headers: { }
    examples:
      application/json:
        error: Not authorized
        extras:
          status: 401
          message: Not authorized
    schema:
      type: object
      properties:
        error:
          type: string
        extras:
          type: object
          properties:
            status:
              type: number
            message:
              type: string
      example:
        error: Not authorized
        extras:
          status: 401
          message: Not authorized
  ForbiddenResponse:
    description: Forbidden
    headers: { }
    examples:
      application/json:
        error: Forbidden
    schema:
      type: object
      properties:
        error:
          type: string
      example:
        error: Forbidden
  BadRequestResponse:
    description: Bad Request
    schema:
      type: object
      properties:
        message:
          type: string
          description: Details about the error
  NotFoundResponse:
    description: Not Found
    headers: {}
    examples:
      application/json:
        error: Not found
        extras:
          status: 404
          message: Resource not found
    schema:
      type: object
      properties:
        error:
          type: string
        extras:
          type: object
          properties:
            status:
              type: number
            message:
              type: string
securityDefinitions:
  BearerAuth:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    description: "JWT used for authorization"
tags:
  - name: Authentication
    description: Endpoints related to authentication.
  - name: Disbursements
    description: Endpoints related to disbursements.
  - name: Payments
    description: Endpoints related to payments.
  - name: Receivers
    description: >-
      Endpoints related to receivers. The receiver is the user that is
      going to receive the disbursement.
  - name: Statistics
    description: >-
      Endpoints related to statistics that provide general aggregated data, as
      well as disbursement-specific aggregated data.
  - name: Anchor
    description: >-
      The Registration endpoints are the ones needed to register 
      receivers with the SDP.

  - name: Wallet-Registration
    description: >-
      These endpoints will be used by the PII confirmation webpage during wallet registration
  - name: Profile
    description: Endpoints related to user profiles.
  - name: Users
    description: >-
      Defines all the endpoints regarding users of the SDP.