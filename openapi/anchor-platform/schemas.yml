openapi: 3.0.0
info:
  version: "2.0.0"
  title: Component Schemas
  description: |
    This document specifies the schemas used for all APIs.
tags:
  - name: "Component Schemas"
    description: "Component Schemas"
paths: { }
components:
  schemas:
    PutCustomerRequest:
      type: object
      properties:
        id:
          description: The ID of the customer as returned in the response of a previous PUT request.
          type: string
        account:
          description: The Stellar or Muxed Account authenticated with the Platform via SEP-10.
          type: string
        memo:
          description: The memo value identifying a customer with a shared account, where the shared account is `account`.
          type: string
        memo_type:
          description: The type of memo used to identify a customer with a shared account.
          type: string
          enum:
            - id
            - hash
            - text
        type:
          description: |
            The type of action the customer is being KYCd for. 
            See the [Type Specification](https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0012.md#type-specification) documented in SEP-12 for more info.
            For SEP-31 you can define your own types in the assets configuration.
            For SEP-24 pre-defined value `sep24-customer` is used.
          type: string
        first_name:
          type: string
        last_name:
          type: string
        additional_name:
          type: string
        address_country_code:
          type: string
        state_or_province:
          type: string
        city:
          type: string
        postal_code:
          type: string
        address:
          type: string
        mobile_number:
          type: string
        email_address:
          type: string
        birth_date:
          type: string
          format: date
        birth_place:
          type: string
        birth_country_code:
          type: string
        bank_account_number:
          type: string
        bank_account_type:
          type: string
        bank_number:
          type: string
        bank_phone_number:
          type: string
        bank_branch_number:
          type: string
        clabe_number:
          type: string
        cbu_alias:
          type: string
        crypto_address:
          type: string
        crypto_memo:
          type: string
        tax_id:
          type: string
        tax_id_name:
          type: string
        occupation:
          type: string
        employer_name:
          type: string
        employer_address:
          type: string
        language_code:
          type: string
        id_type:
          type: string
        id_country_code:
          type: string
        id_issue_date:
          type: string
          format: date
        id_expiration_date:
          type: string
          format: date
        id_number:
          type: string
        ip_address:
          type: string
        sex:
          type: string
        referral_id:
          type: string
        mobile_number_verification:
          type: string
        email_address_verification:
          type: string
    PutCustomerMultipartRequest:
      type: object
      properties:
        id:
          description: The ID of the customer as returned in the response of a previous PUT request.
          type: string
        account:
          description: The Stellar or Muxed Account authenticated with the Platform via SEP-10.
          type: string
        memo:
          description: The memo value identifying a customer with a shared account, where the shared account is `account`.
          type: string
        memo_type:
          description: The type of memo used to identify a customer with a shared account.
          type: string
          enum:
            - id
            - hash
            - text
        type:
          description: |
            The type of action the customer is being KYCd for. 
            See the [Type Specification](https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0012.md#type-specification) documented in SEP-12 for more info.
            For SEP-31 you can define your own types in the assets configuration.
            For SEP-24 pre-defined value `sep24-customer` is used.
          type: string
        first_name:
          type: string
        last_name:
          type: string
        additional_name:
          type: string
        address_country_code:
          type: string
        state_or_province:
          type: string
        city:
          type: string
        postal_code:
          type: string
        address:
          type: string
        mobile_number:
          type: string
        email_address:
          type: string
        birth_date:
          type: string
          format: date
        birth_place:
          type: string
        birth_country_code:
          type: string
        bank_account_number:
          type: string
        bank_account_type:
          type: string
        bank_number:
          type: string
        bank_phone_number:
          type: string
        bank_branch_number:
          type: string
        clabe_number:
          type: string
        cbu_alias:
          type: string
        crypto_address:
          type: string
        crypto_memo:
          type: string
        tax_id:
          type: string
        tax_id_name:
          type: string
        occupation:
          type: string
        employer_name:
          type: string
        employer_address:
          type: string
        language_code:
          type: string
        id_type:
          type: string
        id_country_code:
          type: string
        id_issue_date:
          type: string
          format: date
        id_expiration_date:
          type: string
          format: date
        id_number:
          type: string
        photo_id_front:
          type: file
          format: binary
        photo_id_back:
          type: file
          format: binary
        notary_approval_of_photo_id:
          type: file
          format: binary
        ip_address:
          type: string
        photo_proof_residence:
          type: file
          format: binary
        sex:
          type: string
        photo_proof_of_income:
          type: file
          format: binary
        proof_of_liveness:
          type: file
          format: binary
        referral_id:
          type: string
        mobile_number_verification:
          type: string
        email_address_verification:
          type: string

    PutCustomerResponse:
      type: object
      properties:
        id:
          type: string

    PutCustomerCallbackRequest:
      type: object
      properties:
        id:
          description: The ID of the customer as returned in the response of a previous PUT request.
          type: string
        account:
          description: The Stellar or Muxed Account authenticated with the Platform via SEP-10.
          type: string
        memo:
          description: The memo value identifying a customer with a shared account, where the shared account is `account`.
          type: string
        memo_type:
          description: The type of memo used to identify a customer with a shared account.
          type: string
          enum:
            - id
            - hash
            - text
        url:
          description: A callback URL that the SEP-12 server will POST to when the status of the customer changes.
          type: string

    GetCustomerResponse:
      type: object
      required: [ status ]
      properties:
        id:
          type: string
        status:
          type: string
          enum: [ ACCEPTED PROCESSING NEEDS_INFO REJECTED ]
        fields:
          type: object
          required: [ type, description ]
          properties:
            type:
              type: string
              enum: [ string, binary, number, date ]
            description:
              type: string
            choices:
              type: array
              items:
                type: string
            optional:
              type: boolean
        provided_fields:
          type: object
          required: [ type, description ]
          properties:
            type:
              type: string
              enum: [ string, binary, number, date ]
            description:
              type: string
            choices:
              type: array
              items:
                type: string
            optional:
              type: boolean
            status:
              type: string
              enum: [ ACCEPTED, PROCESSING, REJECTED, VERIFICATION_REQUIRED ]
            error:
              type: string
        message:
          type: string


    FeeResponse:
      type: object
      properties:
        fee:
          $ref: '#/components/schemas/Amount'

    RateResponse:
      type: object
      properties:
        rate:
          type: object
          properties:
            id:
              type: string
              description: ID of the firm quote. NOT USED when `type=indicative`.
            expires_at:
              type: string
              format: date-time
              description: Expiration for the quote. NOT USED when `type=indicative`.
            price:
              type: string
              description: The conversion price offered by the anchor for one unit of `buy_asset` in terms of `sell_asset`, without including fees. In traditional finance, `buy_asset` would be referred to as the base asset and `sell_asset` as the counter asset. The formula `sell_amount - fee = price * buy_amount` must hold true ([ref](https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0038.md#price-formulas)).
            sell_amount:
              type: string
              description: The amount of `sell_asset` the anchor will exchange for `buy_asset`. It could be different from the `sell_amount` provided in the request, depending on how fees are applied by the Anchor.
            buy_amount:
              type: string
              description: The amount of `buy_asset` the anchor will provide with `sell_asset`. It could be different from the `buy_amount` provided in the request, depending on how fees are applied by the Anchor.
            fee:
              $ref: '#/components/schemas/RateFeeResponse'
          required:
            - price
            - sell_amount
            - buy_amount

    RateFeeResponse:
      type: object
      description: An object describing the fees added on top of the rate provided via the `price` attribute.
      properties:
        total:
          type: string
          description: The total fee to be applied.
        asset:
          type: string
          description: The asset the fee will be charged in. Must be represented in [Asset Identification Format](https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0038.md#asset-identification-format).
        details:
          type: array
          items:
            $ref: '#/components/schemas/RateFeeDetailResponse'
      required:
        - total
        - asset

    RateFeeDetailResponse:
      type: object
      properties:
        name:
          type: string
          description: The name of the fee, for example `ACH fee`, `Brazilian conciliation fee`, `Service fee`, etc.
        description:
          type: string
          description: A text describing the fee.
        amount:
          type: string
          description: The amount of asset applied. If `fee.details` is provided, `sum(fee.details.amount)` should be equals `fee.total`.
      required:
        - name
        - amount

    TransactionSEP31:
      type: object
      required: [ id, sep, kind, status, started_at ]
      properties:
        id:
          type: string
        sep:
          type: string
          enum: [ "31" ]
        kind:
          type: string
          enum: [
            #SEP31
            "receive"
          ]
        status:
          $ref: '#/components/schemas/StatusSEP31'
        amount_expected:
          $ref: '#/components/schemas/Amount'
        amount_in:
          $ref: '#/components/schemas/Amount'
        amount_out:
          $ref: '#/components/schemas/Amount'
        amount_fee:
          $ref: '#/components/schemas/Amount'
        quote_id:
          type: string
        started_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        transfer_received_at:
          type: string
          format: date-time
        message:
          type: string
        refunds:
          $ref: '#/components/schemas/Refunds'
        stellar_transactions:
          type: array
          items:
            $ref: '#/components/schemas/StellarTransaction'
        external_transaction_id:
          type: string
        client_domain:
          type: string
        client_name:
          type: string
        customers:
          type: object
          description: |
            The Identification info of the sending and receiving customers. If they were created through [SEP-12](https://stellar.org/protocol/sep-12),
            this object should contain the SEP-12 customer `id`. Otherwise, the `account` address of the customer.
          properties:
            sender:
              $ref: '#/components/schemas/StellarId'
            receiver:
              $ref: '#/components/schemas/StellarId'
        creator:
          $ref: '#/components/schemas/StellarId'

    TransactionSEP24:
      type: object
      required: [ id, sep, kind, status, amount_expected, destination_account, started_at ]
      properties:
        id:
          type: string
        sep:
          type: string
          enum: [ "24" ]
        kind:
          type: string
          enum: [
            # SEP24
            "deposit",
            "withdrawal",
          ]
        status:
          $ref: '#/components/schemas/StatusSEP24'
        amount_expected:
          $ref: '#/components/schemas/Amount'
        amount_in:
          $ref: '#/components/schemas/Amount'
        amount_out:
          $ref: '#/components/schemas/Amount'
        amount_fee:
          $ref: '#/components/schemas/Amount'
        quote_id:
          type: string
        started_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        transfer_received_at:
          type: string
          format: date-time
        message:
          type: string
        refunds:
          $ref: '#/components/schemas/Refunds'
        stellar_transactions:
          type: array
          items:
            $ref: '#/components/schemas/StellarTransaction'
        source_account:
          type: string
        destination_account:
          type: string
        external_transaction_id:
          type: string
        memo:
          type: string
        memo_type:
          $ref: '#/components/schemas/MemoType'
        refund_memo:
          description: if provided, this memo should be used for refund transactions
          type: string
        refund_memo_type:
          $ref: '#/components/schemas/MemoType'
        client_domain:
          type: string
        client_name:
          type: string

    TransactionSEP6:
      type: object
      required: [  id, sep, kind, status, started_at ]
      properties:
        id:
          type: string
        sep:
          type: string
          enum: [ "6" ]
        kind:
          type: string
          enum: [
            # SEP6
            "deposit",
            "deposit-exchange",
            "withdrawal",
            "withdrawal-exchange"
          ]
        status:
          $ref: '#/components/schemas/StatusSEP6'
        type:
          type: string
        amount_expected:
          $ref: '#/components/schemas/Amount'
        amount_in:
          $ref: '#/components/schemas/Amount'
        amount_out:
          $ref: '#/components/schemas/Amount'
        amount_fee:
          $ref: '#/components/schemas/Amount'
        quote_id:
          type: string
        started_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        transfer_received_at:
          type: string
          format: date-time
        message:
          type: string
        refunds:
          $ref: '#/components/schemas/Refunds'
        stellar_transactions:
          type: array
          items:
            $ref: '#/components/schemas/StellarTransaction'
        source_account:
          type: string
        destination_account:
          type: string
        external_transaction_id:
          type: string
        memo:
          type: string
        memo_type:
          $ref: '#/components/schemas/MemoType'
        refund_memo:
          description: if provided, this memo should be used for refund transactions
          type: string
        refund_memo_type:
          $ref: '#/components/schemas/MemoType'
        client_domain:
          type: string
        client_name:
          type: string
        customers:
          type: object
          description: |
            The Identification info of the sending and receiving customers. If they were created through [SEP-12](https://stellar.org/protocol/sep-12),
            this object should contain the SEP-12 customer `id`. Otherwise, the `account` address of the customer.
          properties:
            sender:
              $ref: '#/components/schemas/StellarId'
            receiver:
              $ref: '#/components/schemas/StellarId'

    MemoType:
      type: string
      description: The memo type of the transaction in the Stellar network. Should be present if memo is not null.
      enum: [ text id hash ]

    StatusSEPGeneric:
      type: string
      description: Statuses common for all SEP transactions
      enum: [
        # Shared
        incomplete,
        completed,
        refunded,
        expired,
        error,
        pending_stellar,
        pending_external
      ]

    StatusSEP24Test:
      description: Possible status value for SEP-24 transactions
      allOf:
        - $ref: '#/components/schemas/StatusSEPGeneric'
        - type: string
          description: Unique SEP-24 statuses
          enum: [
            pending_user_transfer_start,
            pending_user_transfer_complete,
            pending_anchor,
            pending_trust,
            pending_user,
            no_market,
            too_small,
            too_large,
          ]

    StatusSEP31Test:
      description: Possible status value for SEP-31 transactions
      allOf:
        - $ref: '#/components/schemas/StatusSEPGeneric'
        - type: string
          description: Unique SEP-31 statuses
          enum: [
            pending_sender,
            pending_receiver,
            pending_transaction_info_update,
            pending_customer_info_update
          ]

    StatusSEPAll:
      type: string
      description:  Possible status values for all transactions
      enum: [
        # Shared
        incomplete,
        completed,
        refunded,
        expired,
        error,
        pending_stellar,
        pending_external,
        # SEP24
        pending_user_transfer_start,
        pending_user_transfer_complete,
        pending_anchor,
        pending_trust,
        pending_user,
        no_market,
        too_small,
        too_large,
        # SEP31
        pending_sender,
        pending_receiver,
        pending_transaction_info_update,
        pending_customer_info_update
      ]

    StatusSEP6:
      type: string
      description: Possible status value for SEP-6 transactions
      enum: [
        # Shared
        incomplete,
        completed,
        refunded,
        expired,
        error,
        pending_stellar,
        pending_external,
        # SEP-6
        pending_customer_info_update,
        pending_user_transfer_start,
        pending_user_transfer_complete,
        pending_anchor,
        pending_trust,
        pending_user,
        no_market,
        too_small,
        too_large
      ]

    StatusSEP24:
      type: string
      description: Possible status value for SEP-24 transactions
      enum: [
        # Shared
        incomplete,
        completed,
        refunded,
        expired,
        error,
        pending_stellar,
        pending_external,
        # SEP24
        pending_user_transfer_start,
        pending_user_transfer_complete,
        pending_anchor,
        pending_trust,
        pending_user,
        no_market,
        too_small,
        too_large,
      ]

    StatusSEP31:
      type: string
      description: Possible status value for SEP-31 transactions
      enum: [
        # Shared
        incomplete,
        completed,
        refunded,
        expired,
        error,
        pending_stellar,
        pending_external,
        # SEP31
        pending_sender,
        pending_receiver,
        pending_transaction_info_update,
        pending_customer_info_update
      ]

    TransactionListSEP6:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: './schemas.yml#/components/schemas/TransactionSEP6'

    TransactionListSEP24:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: './schemas.yml#/components/schemas/TransactionSEP24'

    TransactionListSEP31:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: './schemas.yml#/components/schemas/TransactionSEP31'

    Amount:
      type: object
      required:
        - amount
        - asset
      properties:
        amount:
          type: string
        asset:
          type: string
    Refunds:
      type: object
      properties:
        amount_refunded:
          $ref: '#/components/schemas/Amount'
        amount_fee:
          $ref: '#/components/schemas/Amount'
        payments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              id_type:
                type: string
                enum:
                  - stellar
                  - external
              amount:
                $ref: '#/components/schemas/Amount'
              fee:
                $ref: '#/components/schemas/Amount'
              requested_at:
                type: string
                format: date-time
              refunded_at:
                type: string
                format: date-time

    StellarId:
      type: object
      description: |
        StellarId's are objects that identify end-users and SEP-31 Sending Anchors, but not SEP-31 Receiving Anchors.

        For a SEP-12 customer, the `id` field should be sufficient to fully identify the customer in the business' Backend.
        
        For a SEP-31 Sending Anchor, the `account` and `memo` fields should be used.

        For a SEP-6 Anchor, the `account` and `memo` fields should be used.
      properties:
        id:
          type: string
          description: The `id` of the customer registered through SEP-12.
        account:
          type: string
          description: Either the Stellar account or Muxed account address of the on-chain entity.
        memo:
          type: string
          description: The memo value identifying a customer with a shared account, where the shared account is `account`.
    StellarTransaction:
      type: object
      required:
        - id
        - created_at
        - envelope
        - payments
      properties:
        id:
          type: string
          description: The ID of the transaction in the Stellar network.
        memo:
          type: string
          description: The memo of the transaction in the Stellar network.
        memo_type:
          type: string
          description: The memo type of the transaction in the Stellar network. Should be present if memo is not null.
          enum:
            - text
            - hash
            - id
        created_at:
          type: string
          format: date-time
          description: The time the transaction was registered in the Stellar network.
        envelope:
          type: string
          description: The transaction envelope, containing all the transaction information.
        payments:
          type: array
          items:
            type: object
            required:
              - id
              - payment_type
              - source_account
              - destination_account
              - amount
            properties:
              id:
                type: string
                description: The ID of the payment in the Stellar Network.
              payment_type:
                type: string
                description: The type of payment in the Stellar Network.
                enum:
                  - payment
                  - path_payment
                default: payment
              source_account:
                type: string
                description: The account being debited in the Stellar Network.
              destination_account:
                type: string
                description: The account being credited in the Stellar Network.
              amount:
                $ref: '#/components/schemas/Amount'
    Error:
      type: object
      properties:
        error:
          type: string
        id:
          type: string
      required:
        - error

    Event:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - transaction_created
            - transaction_status_changed
            - transaction_error
            - quote_created
            - customer_updated
          description: |
            The transaction event type. Can be one of the following:
            - `transaction_created` - a transaction was created through the SEP endpoints. The payload is in the `transaction` field.
            - `transaction_status_changed` - the status of a transaction has changed. The payload is in the `transaction` field.
            - `transaction_error` - error processing the transaction. The payload is in the `transaction` field.
            - `quote_created` - a quote was created via the SEP38 API. The payload is in the `quote` field.
        timestamp:
          type: string
          format: date-time
        payload:
          type: object
          properties:
            transaction:
              oneOf:
                - $ref: './schemas.yml#/components/schemas/TransactionSEP24'
                - $ref: './schemas.yml#/components/schemas/TransactionSEP31'
            quote:
              $ref: '#/components/schemas/Quote'
            customer:
              $ref: '#/components/schemas/Customer'
      required: [ id, type, payload, timestamp ]
    Quote:
      type: object
      properties:
        id:
          type: string
        sell_amount:
          type: string
        sell_asset:
          type: string
        buy_amount:
          type: string
        buy_asset:
          type: string
        expires_at:
          type: string
          format: date-time
        price:
          type: string
        total_price:
          type: string
        creator:
          $ref: '#/components/schemas/StellarId'
        transaction_id:
          type: string
        created_at:
          type: string
          format: date-time
    Customer:
      type: object
      properties:
        id:
          type: string
    CustodyError:
      type: object
      required:
        - error
      properties:
        error:
          type: string
    SendPaymentResponse:
      type: object
      properties:
        id:
          type: string
          description: External TX ID from custody service.
    GenerateUniqueAddressResponse:
      type: object
      properties:
        address:
          description: Deposit address to which the client should send funds.
          type: string
        memo:
          description: Memo value, that should be added to payment by the client.
          type: string
        memoType:
          description: Type of memo, that should be added to payment by the client.
          type: string
          enum:
            - id
            - hash
            - text
