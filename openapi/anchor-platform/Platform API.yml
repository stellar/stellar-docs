openapi: 3.0.0
info:
  version: "2.0.0"
  title: Platform API
tags:
  - name: "Transactions"
    description: "Transactions initiated by client applications via SEP APIs"
  - name: "Quotes"
    description: "Firm quotes provided to client applications via SEP APIs"
paths:
  /transactions:
    patch:
      tags:
        - "Transactions"
        - SEP-24
        - SEP-31
      summary: Update Transactions Info
      operationId: patchTransactions
      description:
        Accepts one or more objects containing updated information on transactions. Note that requests containing
        invalid data for any transaction will result in a 400 Bad Request and no transactions will be updated. 
        Importantly, this operation is NOT atomic. If one update fails, all previous updates would be applied, 
        all subsequent updates would be discarded, and an error would be raised.
      responses:
        '200':
          description: Transaction(s) updated.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: './schemas.yml#/components/schemas/TransactionListSEP24'
                  - $ref: './schemas.yml#/components/schemas/TransactionListSEP31'
        '400':
          description: 'Invalid request body. The error returned pertains to the transaction first determined to be invalid.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  id:
                    type: string
                    description: The `id` of the transaction first determined to be invalid.
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: './schemas.yml#/components/schemas/PatchTransactionSEP24'
                - $ref: './schemas.yml#/components/schemas/PatchTransactionSEP31'
    get:
      tags:
        - "Transactions"
        - SEP-24
        - SEP-31
      summary: Retrieve a List of Transactions
      operationId: getTransactions
      description:
        Allows to query list of transactions for desired SEP. This api supports pagination, and it's possible (and recommended) to make multiple requests to query transactions. 
        The last page is reached when the number of elements returned by the endpoint is smaller than provided `page_size`.
      parameters:
        - in: query
          name: sep
          required: true
          schema:
            type: string
            enum: [ 24, 31 ]
          description:
            Lookup transactions belonging to this SEP.
        - in: query
          name: order_by
          schema:
            type: string
            enum: [ created_at, transfer_received_at ]
            default: created_at
          description:
            Specifies field that transactions will be ordered by. Note, that secondary sort is transaction id in ascending value.
            
            I.e. when timestamps for 2 or more transactions is identical, they will be sorted by id.
        - in: query
          name: order
          schema:
            type: string
            enum: [ asc, desc ]
            default: asc
          description:
            Specifies order. Note, that when the field is null, all transactions with null value will be last, regardless of soring order (NULLS LAST).
            
            For example, transfer time may not be specified for some transactions, resulting into `transfer_received_at` being null. If so, transactions with non-null values will be sorted and returned first, followed by all transactions with null timestamps.
        - in: query
          name: statuses
          schema:
            type: array
            items:
              $ref: './schemas.yml#/components/schemas/StatusSEPAll'
          description: Filters transactions for specified array of statuses. If not provided, filtering is disabled (default behavior)
        - in: query
          name: page_size
          schema:
            type: integer
            default: 20
          description:
            Size of a single search page. Must be positive.
        - in: query
          name: page_number
          schema:
            type: integer
            default: 0
          description:
            Page number to use for continuous search. Page count beings at 0.
      responses:
        '200':
          description: "Transaction found."
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: './schemas.yml#/components/schemas/TransactionListSEP24'
                  - $ref: './schemas.yml#/components/schemas/TransactionListSEP31'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: './schemas.yml#/components/schemas/Error'
        '404':
          description: "Transaction not found."
          content:
            application/json:
              schema:
                $ref: './schemas.yml#/components/schemas/Error'
  /transactions/{id}:
    get:
      tags:
        - "Transactions"
        - SEP-24
        - SEP-31
      summary: Retrieve a Transaction
      operationId: getTransaction
      description:
        Provides the information necessary for the business to determine the state of the transaction identified by
        `id`, decide if any action must be taken to continue processing the transaction, and act on the decision.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Transaction found."
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: './schemas.yml#/components/schemas/TransactionSEP24'
                  - $ref: './schemas.yml#/components/schemas/TransactionSEP31'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: './schemas.yml#/components/schemas/Error'
        '404':
          description: "Transaction not found."
          content:
            application/json:
              schema:
                $ref: './schemas.yml#/components/schemas/Error'

# CHANGELOG
## v2.0.0: Simplified the Event by merging the QuoteEvent and Transaction Event and embedding the detail in the `transaction` and `quote` field. Removed unused schemas.
