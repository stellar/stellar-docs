paths:
  /transactions/{transaction_hash}:
    get:
      tags:
        - Transactions
      summary: Retrieve a Transaction
      description: The single transaction endpoint provides information on a specific transaction.
      operationId: RetrieveATransaction
      parameters:
        - $ref: '../parameters.yml#/components/parameters/HashParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "../schemas/transactionTransactionSchema.yml#/components/schemas/Transaction"
              examples:
                RetrieveATransaction:
                  $ref: "../examples/responses/Transactions/RetrieveATransaction.yml#/components/examples/RetrieveATransaction"
  /transactions/{transaction_hash}/operations:
    get:
      tags:
        - Transactions
      summary: Retrieve a Transaction's Operations
      description: This endpoint returns Successful operations for a specific transaction.
      operationId: RetrieveATransactionsOperations
      parameters:
        - $ref: '../parameters.yml#/components/parameters/HashParam'
        - $ref: '../parameters.yml#/components/parameters/CursorParam'
        - $ref: '../parameters.yml#/components/parameters/OrderParam'
        - $ref: '../parameters.yml#/components/parameters/LimitParam'
        - $ref: '../parameters.yml#/components/parameters/IncludeFailedParam'
        - $ref: '../parameters.yml#/components/parameters/JoinParam'

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  -  $ref: "../schemas/linksSchema.yml#/components/schemas/Links"
                  -  $ref: "../schemas/operationSchema.yml#/components/schemas/Operation"
              examples:
                RetrieveATransactionsOperations:
                  $ref: "../examples/responses/Transactions/RetrieveATransactionsOperations.yml#/components/examples/RetrieveATransactionsOperations"
  /transactions/{transaction_hash}/effects:
    get:
      tags:
        - Transactions
      summary: Retrieve a Transaction's Effects
      description: This endpoint returns the effects of a specific transaction.
      operationId: RetrieveATransactionsEffects
      parameters:
        - $ref: '../parameters.yml#/components/parameters/HashParam'
        - $ref: '../parameters.yml#/components/parameters/CursorParam'
        - $ref: '../parameters.yml#/components/parameters/OrderParam'
        - $ref: '../parameters.yml#/components/parameters/LimitParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  -  $ref: "../schemas/linksSchema.yml#/components/schemas/Links"
                  -  $ref: "../schemas/effectsSchema.yml#/components/schemas/Effect"
              examples:
                RetrieveATransactionsEffects:
                  $ref: "../examples/responses/Transactions/RetrieveATransactionsEffects.yml#/components/examples/RetrieveATransactionsEffects"
  /transactions/{transaction_hash}/payments:
    get:
      tags:
        - Payments
      summary: Retrieve a Transaction's Payments
      description: This endpoint returns the payments of a specific transaction.
      operationId: RetrieveATransactionsPayments
      parameters:
        - $ref: "../parameters.yml#/components/parameters/HashParam"
        - $ref: "../parameters.yml#/components/parameters/CursorParam"
        - $ref: "../parameters.yml#/components/parameters/OrderParam"
        - $ref: "../parameters.yml#/components/parameters/LimitParam"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../schemas/linksSchema.yml#/components/schemas/Links"
                  - $ref: "../schemas/paymentSchema.yml#/components/schemas/Payment"
              examples:
                RetrieveATransactionsPayments:
                  $ref: "../examples/responses/Transactions/RetrieveATransactionsPayments.yml#/components/examples/RetrieveATransactionsPayments"
  /transactions:
    get:
      tags:
        - Transactions
      summary: List All Transactions
      description: "This endpoint lists all Successful transactions and can be used in streaming mode. Streaming mode allows you to listen for new transactions as they are added to the Stellar ledger. If called in streaming mode, Horizon will start at the earliest known transaction unless a cursor is set, in which case it will start from that cursor. By setting the cursor value to now, you can stream transactions created since your request time."
      operationId: ListAllTransactions
      parameters:
        - $ref: '../parameters.yml#/components/parameters/CursorParam'
        - $ref: '../parameters.yml#/components/parameters/OrderParam'
        - $ref: '../parameters.yml#/components/parameters/LimitParam'
        - $ref: '../parameters.yml#/components/parameters/IncludeFailedParam'
      x-supports-streaming: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  -  $ref: "../schemas/linksSchema.yml#/components/schemas/Links"
                  -  $ref: "../schemas/transactionSchema.yml#/components/schemas/Transaction"
              examples:
                ListAllTransactions:
                  $ref: "../examples/responses/Transactions/ListAllTransactions.yml#/components/examples/ListAllTransactions"
    post:
      tags:
        - Transactions
      summary: Submit a Transaction
      description: "This endpoint actually submits a transaction to the Stellar network. It only takes a single, required parameter: the signed transaction. Refer to the Transactions page for details on how to craft a proper one. If you submit a transaction that has already been included in a ledger, this endpoint will return the same response as wouldâ€™ve been returned for the original transaction submission. This allows for safe resubmission of transactions in error scenarios, as highlighted in the error-handling guide."
      operationId: SubmitATransaction
      parameters:
        - in: query
          name: tx
          schema:
            type: string
            description: The base64-encoded XDR of the transaction.
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "../schemas/transactionSchema.yml#/components/schemas/SubmitTransaction"
              examples:
                SubmitaTransaction:
                  $ref: "../examples/responses/Transactions/SubmitaTransaction.yml#/components/examples/SubmitaTransaction"
  /transactions_async:
    post:
      summary: Submit a Transaction Asynchronously
      description: "This endpoint submits transactions to the Stellar network asynchronously. It is designed to allow users to submit transactions without blocking them while waiting for a response from Horizon. At the same time, it also provides clear response status codes from stellar-core to help understand the status of the submitted transaction. You can then use Horizon's [GET transaction endpoint](https://developers.stellar.org/docs/data/horizon/api-reference/resources/retrieve-a-transaction) to wait for the transaction to be included in a ledger and ingested by Horizon."
      operationId: SubmitAsyncTransaction
      tags:
        - Transactions
      parameters:
        - in: query
          name: tx
          schema:
            type: string
            description: The base64-encoded XDR of the transaction.
          required: true
      responses:
        '201':
          description: Transaction has been received by core and is in pending status.
          content:
            application/json:
              schema:
                $ref: "../schemas/asyncTransactionSubmissionSchema.yml#/components/schemas/AsyncTransactionSubmissionResponse"
              examples:
                TransactionPending:
                  summary: Transaction Pending
                  value:
                    tx_status: "PENDING"
                    hash: "6cbb7f714bd08cea7c30cab7818a35c510cbbfc0a6aa06172a1e94146ecf0165"
        '400':
          description: Transaction is malformed; ERROR status from core.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "../schemas/asyncTransactionSubmissionSchema.yml#/components/schemas/AsyncTransactionSubmissionResponse"
                  - $ref: "../schemas/asyncTransactionSubmissionSchema.yml#/components/schemas/Problem"
              examples:
                TransactionMalformed:
                  summary: Transaction Malformed
                  value:
                    type: "transaction_malformed"
                    title: "Transaction Malformed"
                    status: 400
                    detail: "Horizon could not decode the transaction envelope in this request. A transaction should be an XDR TransactionEnvelope struct encoded using base64. The envelope read from this request is echoed in the `extras.envelope_xdr` field of this response for your convenience."
                    extras:
                      envelope_xdr: ""
                TransactionError:
                  summary: ERROR Status from core
                  value:
                    errorResultXdr: "AAAAAAAAAGT////7AAAAAA=="
                    tx_status: "ERROR"
                    hash: "6cbb7f714bd08cea7c30cab7818a35c510cbbfc0a6aa06172a1e94146ecf0165"
        '403':
          description: Transaction submission has been disabled for Horizon.
          content:
            application/json:
              schema:
                $ref: "../schemas/asyncTransactionSubmissionSchema.yml#/components/schemas/Problem"
              examples:
                TransactionSubmissionDisabled:
                  summary: Transaction Submission Disabled
                  value:
                    type: "transaction_submission_disabled"
                    title: "Transaction Submission Disabled"
                    status: 403
                    detail: "Transaction submission has been disabled for Horizon. To enable it again, remove env variable DISABLE_TX_SUB."
                    extras:
                      envelope_xdr: ""
        '409':
          description: Transaction is a duplicate of a previously submitted transaction.
          content:
            application/json:
              schema:
                $ref: "../schemas/asyncTransactionSubmissionSchema.yml#/components/schemas/AsyncTransactionSubmissionResponse"
              examples:
                TransactionDuplicate:
                  summary: Transaction Duplicate
                  value:
                    tx_status: "DUPLICATE"
                    hash: "6cbb7f714bd08cea7c30cab7818a35c510cbbfc0a6aa06172a1e94146ecf0165"
        '500':
          description: Transaction submission failure, exception or invalid status from core.
          content:
            application/json:
              schema:
                $ref: "../schemas/asyncTransactionSubmissionSchema.yml#/components/schemas/Problem"
              examples:
                TransactionFailed:
                  summary: Transaction Submission Failed
                  value:
                    type: "transaction_submission_failed"
                    title: "Transaction Submission Failed"
                    status: 500
                    detail: "Could not submit transaction to stellar-core. The `extras.error` field on this response contains further details. Descriptions of each code can be found at: https://developers.stellar.org/api/errors/http-status-codes/horizon-specific/transaction-submission-async/transaction_submission_failed"
                    extras:
                      envelope_xdr: ""
                      error: "Error details here"
                TransactionException:
                  summary: Transaction Submission Exception
                  value:
                    type: "transaction_submission_exception"
                    title: "Transaction Submission Exception"
                    status: 500
                    detail: "Received exception from stellar-core. The `extras.error` field on this response contains further details. Descriptions of each code can be found at: https://developers.stellar.org/api/errors/http-status-codes/horizon-specific/transaction-submission-async/transaction_submission_exception"
                    extras:
                      envelope_xdr: ""
                      error: "Exception details here"
                TransactionInvalidStatus:
                  summary: Transaction Submission Invalid Status
                  value:
                    type: "transaction_submission_invalid_status"
                    title: "Transaction Submission Invalid Status"
                    status: 500
                    detail: "Received invalid status from stellar-core. The `extras.error` field on this response contains further details.  Descriptions of each code can be found at: https://developers.stellar.org/api/errors/http-status-codes/horizon-specific/transaction-submission-async/transaction_submission_invalid_status"
                    extras:
                      envelope_xdr: ""
                      error: "Error details here"
        '503':
          description: History DB is stale; core is unavailable for transaction submission.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "../schemas/asyncTransactionSubmissionSchema.yml#/components/schemas/AsyncTransactionSubmissionResponse"
                  - $ref: "../schemas/asyncTransactionSubmissionSchema.yml#/components/schemas/Problem"
              examples:
                HistoryDBStale:
                  summary: Historical DB Is Too Stale
                  value:
                    type: "stale_history"
                    title: "Historical DB Is Too Stale"
                    status: 503
                    detail: "This horizon instance is configured to reject client requests when it can determine that the history database is lagging too far behind the connected instance of Stellar-Core or read replica. It's also possible that Stellar-Core is out of sync. Please try again later."
                    extras:
                      envelope_xdr: ""
                TransactionTryAgainLater:
                  summary: TRY_AGAIN_LATER Status from core
                  value:
                    tx_status: "TRY_AGAIN_LATER"
                    hash: "6cbb7f714bd08cea7c30cab7818a35c510cbbfc0a6aa06172a1e94146ecf0165"
