paths:
  /trade_aggregations:
    get:
      tags:
        - Trade Aggregations
      summary: List Trade Aggregations
      description: |
        This endpoint displays trade data based on filters set in the arguments.

        This is done by dividing a given time range into segments and aggregating statistics, for a given asset pair (base, counter) over each of these segments.

        The duration of the segments is specified with the `resolution` parameter. The start and end of the time range are given by `startTime` and `endTime` respectively, which are both rounded to the nearest multiple of `resolution` since epoch.

        The individual segments are also aligned with multiples of `resolution` since epoch. If you want to change this alignment, the segments can be `offset` by specifying the offset parameter.
      operationId: ListTradeAggregations
      parameters:
        - $ref: '../parameters.yml#/components/parameters/StartTimeParam'
        - $ref: '../parameters.yml#/components/parameters/EndTimeParam'
        - $ref: '../parameters.yml#/components/parameters/ResolutionParam'
        - $ref: '../parameters.yml#/components/parameters/OffsetParam'
        - $ref: '../parameters.yml#/components/parameters/BaseAssetTypeRequiredParam'
        - $ref: '../parameters.yml#/components/parameters/BaseAssetIssuerParam'
        - $ref: '../parameters.yml#/components/parameters/BaseAssetCodeParam'
        - $ref: '../parameters.yml#/components/parameters/CounterAssetTypeRequiredParam'
        - $ref: '../parameters.yml#/components/parameters/CounterAssetIssuerParam'
        - $ref: '../parameters.yml#/components/parameters/CounterAssetCodeParam'
        - $ref: '../parameters.yml#/components/parameters/OrderParam'
        - $ref: '../parameters.yml#/components/parameters/LimitParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "../schemas/tradeAggregationSchema.yml#/components/schemas/TradeAggregation"
              examples:
                ListTradeAggregations:
                  $ref: "../examples/responses/TradeAggregations/ListTradeAggregations.yml#/components/examples/ListTradeAggregations"
      x-codeSamples:
        - lang: Shell
          source: |
            curl https://horizon.stellar.org/trade_aggregations?\
            base_asset_type=native&\
            counter_asset_code=EURT&\
            counter_asset_issuer=GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S&\
            counter_asset_type=credit_alphanum4&\
            resolution=3600000&\
            start_time=1582156800000&\
            end_time=1582178400000
        - lang: JavaScript
          label: "@stellar/stellar-sdk"
          source: |
            var StellarSdk = require("@stellar/stellar-sdk");
            var server = new StellarSdk.Horizon.Server(
              "https://horizon-testnet.stellar.org",
            );

            var base = new StellarSdk.Asset.native();
            var counter = new StellarSdk.Asset(
              "EURT",
              "GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S",
            );
            var startTime = 1582156800000;
            var endTime = 1582178400000;
            var resolution = 3600000;
            var offset = 0;

            server
              .tradeAggregation(base, counter, startTime, endTime, resolution, offset)
              .call()
              .then(function (resp) {
                console.log(resp);
              })
              .catch(function (err) {
                console.error(err);
              });
