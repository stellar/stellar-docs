components:
  parameters:
    AccountParam:
      name: account
      in: query
      required: false
      description: "A Stellar account ID, to only include liquidity pools in which this account is participating in (i.e. holds pool shares to)."
    AccountIDParam:
      name: account_id
      in: path
      required: true
      description: This account’s public key encoded in a base32 string representation.
      schema:
        type: string
        example: GDMQQNJM4UL7QIA66P7R2PZHMQINWZBM77BEBMHLFXD5JEUAHGJ7R4JZ
    AssetCodeParam:
      name: asset_code
      in: query
      required: false
      description: The code of the asset you would like to filter by.
    AssetIssuerParam:
        name: asset_issuer
        in: query
        required: false
        description: The Stellar address of the issuer for the asset you would like to filter by.
    AssetParam:
      name: asset
      in: query
      required: false
      description: An issued asset represented as “Code:IssuerAccountID”. Every account in the response will have a trustline for the given asset.
    BaseAssetCodeParam:
      name: base_asset_code
      in: query
      required: false
      description: The code for the base asset. Required if the `base_asset_type` is not `native`.
      schema:
        type: string
        example: USD
    BaseAssetIssuerParam:
      name: base_asset_issuer
      in: query
      required: false
      description: The Stellar address of the base asset’s issuer. Required if the `base_asset_type` is not `native`.
      schema:
        type: string
        example: GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX
    BaseAssetTypeParam:
      name: base_asset_type
      in: query
      required: false
      description: The type for the base asset. Either `native`, `credit_alphanum4`, or `credit_alphanum12`.
      schema:
        type: string
        enum:
          - native
          - credit_alphanum4
          - credit_alphanum12
    BaseAssetTypeRequiredParam:
      name: base_asset_type
      in: query
      required: true
      description: The type for the base asset. Either `native`, `credit_alphanum4`, or `credit_alphanum12`.
      schema:
        type: string
        enum:
          - native
          - credit_alphanum4
          - credit_alphanum12
    BuyingAssetCodeParam:
      name: buying_asset_code
      in: query
      required: false
      description: The code for the asset being bought (counter asset). Required if the `buying_asset_type` is not `native`.
      schema:
        type: string
        example: EUR
    BuyingAssetIssuerParam:
      name: buying_asset_issuer
      in: query
      required: false
      description: The Stellar address of the issuer of the asset being bought (counter asset). Required if the `buying_asset_type` is not `native`.
      schema:
        type: string
        example: GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX
    BuyingAssetTypeParam:
      name: buying_asset_type
      in: query
      required: false
      description: The type for the asset being bought (counter asset). Either `native`, `credit_alphanum4`, or `credit_alphanum12`.
      schema:
        type: string
        enum:
          - native
          - credit_alphanum4
          - credit_alphanum12
    ClaimableBalanceIdParam:
      name: claimable_balance_id
      in: path
      required: true
      description: A unique identifier for this claimable balance.
      schema:
        type: string
    ClaimantParam:
      name: claimant
      in: query
      required: false
      description: Account ID of the destination address. Only include claimable balances which can be claimed by the given account ID.
    CounterAssetCodeParam:
      name: counter_asset_code
      in: query
      required: false
      description: The code for the counter asset. Required if the `counter_asset_type` is not `native`.
      schema:
        type: string
        example: USD
    CounterAssetIssuerParam:
      name: counter_asset_issuer
      in: query
      required: false
      description: The Stellar address of the counter asset’s issuer. Required if the `counter_asset_type` is not `native`.
      schema:
        type: string
        example: GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX
    CounterAssetTypeParam:
      name: counter_asset_type
      in: query
      required: false
      description: The type for the counter asset. Either native, credit_alphanum4, or credit_alphanum12.
      schema:
        type: string
        enum:
          - native
          - credit_alphanum4
          - credit_alphanum12
    CounterAssetTypeRequiredParam:
      name: counter_asset_type
      in: query
      required: true
      description: The type for the counter asset. Either `native`, `credit_alphanum4`, or `credit_alphanum12`.
      schema:
        type: string
        enum:
          - native
          - credit_alphanum4
          - credit_alphanum12
    CursorParam:
      name: cursor
      in: query
      required: false
      description: A number that points to a specific location in a collection of responses and is pulled from the paging_token value of a record.
      schema:
        type: integer
        example: 6606617478959105
    DataParam:
      name: key
      in: path
      required: true
      description: The key name for this data.
      schema:
        type: string
        example: config.memo_required
    DestinationAccountParam:
      name: destination_account
      in: query
      required: false
      description: The Stellar address of the receiver. Any returned path must end with an asset that the recipient can receive. Using either `source_account` or `source_assets` as an argument is required for strict send path payments.
      schema:
        type: string
        example: GDMQQNJM4UL7QIA66P7R2PZHMQINWZBM77BEBMHLFXD5JEUAHGJ7R4JZ
    DestinationAmountParam:
      name: destination_amount
      in: query
      required: true
      description: The amount of the destination asset that should be received.
      schema:
        type: string
        example: "5"
    DestinationAssetCodeParam:
      name: destination_asset_code
      in: query
      required: false
      description: The code for the destination asset. Required if the `destination_asset_type` is not `native`.
      schema:
        type: string
        example: USD
    DestinationAssetIssuerParam:
      name: destination_asset_issuer
      in: query
      required: false
      description: The Stellar address of the issuer of the destination asset. Required if the `destination_asset_type` is not `native`.
      schema:
        type: string
        example: GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX
    DestinationAssetsParam:
      name: destination_assets
      in: query
      required: false
      description: "A comma-separated list of assets that the recipient can receive. Any returned path must end with an asset in this list. Each asset is formatted as `CODE:ISSUER_ACCOUNT`. For example: `USD:GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX`. Using either `source_account` or `source_assets` as an argument is required for strict send path payments."
      schema:
        type: string
        example: CNY:GAREELUB43IRHWEASCFBLKHURCGMHE5IF6XSE7EXDLACYHGRHM43RFOX
    DestinationAssetTypeParam:
      name: destination_asset_type
      in: query
      required: true
      description: The type for the destination asset. Either `native`, `credit_alphanum4`, or `credit_alphanum12`.
      schema:
        type: string
        enum:
          - native
          - credit_alphanum4
          - credit_alphanum12
    EndTimeParam:
      name: end_time
      in: query
      required: false
      description: The upper time boundary represented as milliseconds since epoch.
      schema:
        type: integer
        format: long
    HashParam:
      name: transaction_hash
      in: path
      required: true
      description: Transactions are commands that modify the ledger state and consist of one or more operations.
      schema:
        type: string
        example: 5ebd5c0af4385500b53dd63b0ef5f6e8feef1a7e1c86989be3cdcce825f3c0cc
    IdParam:
      name: id
      in: path
      required: true
      description: The ID number for this operation.
      schema:
        type: string
        example: 121692259040116737
    IncludeFailedParam:
      name: include_failed
      in: query
      required: false
      description: Set to true to include failed operations in results. Options include true and false.
      schema:
        type: boolean
        enum:
          - true
          - false
    JoinParam:
      name: join
      in: query
      required: false
      description: Set to transactions to include the transactions which created each of the operations in the response.
    LimitParam:
      name: limit
      in: query
      required: false
      description: The maximum number of records returned. The limit can range from 1 to 200 - an upper limit that is hardcoded in Horizon for performance reasons. If this argument isn’t designated, it defaults to 10.
      schema:
        type: integer
        example: 10
    OrderBookLimitParam:
      name: limit
      in: query
      required: false
      description: The maximum number of records returned. The limit can range from 1 to 200 — an upper limit that is hardcoded in Horizon for performance reasons. If this argument isn’t designated, it defaults to 20 for order books.
      schema:
        type: integer
        example: 20
    LiquidityPoolParam:
      name: liqudity_pool
      in: query
      required: false
      description: With this parameter, the results will include only accounts which have trustlines to the specified liquidity pool.
    LiquidityPoolParamId:
      name: liquidity_pool_id
      in: path
      required: true
      description: A unique identifier for this liquidity pool.
    OfferIdParam:
      name: offer_id
      in: query
      required: false
      description: The offer ID. Used to filter for trades originating from a specific offer.
    OfferIDParam:
      name: offer_id
      in: path
      required: true
      description: A unique identifier for this offer.
    OffsetParam:
      name: offset
      in: query
      required: false
      description: Segments can be offset using this parameter. Expressed in milliseconds. Can only be used if the resolution is greater than 1 hour. Value must be in whole hours, less than the provided resolution, and less than 24 hours.
      schema:
        type: number
        format: long
    OrderParam:
      name: order
      in: query
      required: false
      description: A designation of the order in which records should appear. Options include `asc` (ascending) or `desc` (descending). If this argument isn’t set, it defaults to `asc`.
      schema:
        type: string
        enum:
          - asc
          - desc
    ReserveParam:
      name: reserves
      in: query
      required: false
      description: Comma-separated list of assets in canonical form (Code:IssuerAccountID), to only include liquidity pools which have reserves matching all listed assets.
    ResolutionParam:
      name: resolution
      in: query
      required: false
      description: The segment duration represented as milliseconds. Supported values are 1 minute (60000), 5 minutes (300000), 15 minutes (900000), 1 hour (3600000), 1 day (86400000) and 1 week (604800000).
      schema:
        type: integer
        format: long
        oneOf:
          - const: 60000
            description: 1 minute
          - const: 300000
            description: 5 minutes
          - const: 900000
            description: 15 minutes
          - const: 3600000
            description: 1 hour
          - const: 86400000
            description: 1 day
          - const: 604800000
            description: 1 week
    SellerParam:
      name: seller
      in: query
      required: false
      description: The account ID of the offer creator.
    SellingAssetCodeParam:
      name: selling_asset_code
      in: query
      required: false
      description: The code for the asset being sold (base asset). Required if the `selling_asset_type` is not `native`.
      schema:
        type: string
        example: USD
    SellingAssetIssuerParam:
      name: selling_asset_issuer
      in: query
      required: false
      description: The Stellar address of the issuer of the asset being sold (base asset). Required if the `selling_asset_type` is not `native`.
      schema:
        type: string
        example: GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX
    SellingAssetTypeParam:
      name: selling_asset_type
      in: query
      required: false
      description: The type for the selling asset. Either native, credit_alphanum4, or credit_alphanum12.
      schema:
        type: string
        enum:
          - native
          - credit_alphanum4
          - credit_alphanum12
    SellingAssetTypeRequiredParam:
      name: selling_asset_type
      in: query
      required: true
      description: The type for the asset being sold (base asset). Either `native`, `credit_alphanum4`, or `credit_alphanum12`.
      schema:
        type: string
        enum:
          - native
          - credit_alphanum4
          - credit_alphanum12
    SequenceParam:
      name: sequence
      in: path
      required: true
      description: The sequence number of a specific ledger.
      schema:
        type: integer
        example: 0
    SignerParam:
      name: signer
      in: query
      required: false
      description: Account ID of the signer. Every account in the response will have the given account ID as a signer.
      schema:
        type: string
        example: GDMQQNJM4UL7QIA66P7R2PZHMQINWZBM77BEBMHLFXD5JEUAHGJ7R4JZ
    SourceAccountParam:
      name: source_account
      in: query
      required: false
      description: The Stellar address of the sender. Any returned path must start with an asset that the sender holds. Using either `source_account` or `source_assets` as an argument is required for strict receive path payments.
      schema:
        type: string
        example: GDMQQNJM4UL7QIA66P7R2PZHMQINWZBM77BEBMHLFXD5JEUAHGJ7R4JZ
    SourceAmountParam:
      name: source_amount
      in: query
      required: true
      description: The amount of the source asset that should be sent.
      schema:
        type: string
        example: "5"
    SourceAssetsParam:
      name: source_assets
      in: query
      required: false
      description: "A comma-separated list of assets available to the sender. Any returned path must start with an asset in this list. Each asset is formatted as `CODE:ISSUER_ACCOUNT`. For example: `USD:GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX`. Using either `source_account` or `source_assets` as an argument is required for strict receive path payments."
      schema:
        type: string
        example: CNY:GAREELUB43IRHWEASCFBLKHURCGMHE5IF6XSE7EXDLACYHGRHM43RFOX
    SourceAssetCodeParam:
      name: source_asset_code
      in: query
      required: false
      description: The code for the source asset. Required if the `source_asset_type` is not `native`.
      schema:
        type: string
        example: USD
    SourceAssetIssuerParam:
      name: source_asset_issuer
      in: query
      required: false
      description: The Stellar address of the issuer of the source asset. Required if the `source_asset_type` is not `native`.
      schema:
        type: string
        example: GDMQQNJM4UL7QIA66P7R2PZHMQINWZBM77BEBMHLFXD5JEUAHGJ7R4JZ
    SourceAssetTypeParam:
      name: source_asset_type
      in: query
      required: true
      description: The type for the source asset. Either `native`, `credit_alphanum4`, or `credit_alphanum12`.
      schema:
        type: string
        enum:
          - native
          - credit_alphanum4
          - credit_alphanum12
    SponsorParam:
      name: sponser
      in: query
      required: false
      description: Account ID of the sponsor. Every account in the response will either be sponsored by the given account ID or have a subentry (trustline, offer, or data entry) which is sponsored by the given account ID.
      schema:
        type: string
        example: GDMQQNJM4UL7QIA66P7R2PZHMQINWZBM77BEBMHLFXD5JEUAHGJ7R4JZ
    StartTimeParam:
      name: start_time
      in: query
      required: false
      description: The lower time boundary represented as milliseconds since epoch.
      schema:
        type: integer
        format: long
    TradeTypeParam:
      name: trade_type
      in: query
      required: false
      description: Can be set to all, orderbook, or liquidity_pools to filter only trades executed across a given mechanism.
      schema:
        type: string
        enum:
          - all
          - orderbook
          - liquidity_pools
