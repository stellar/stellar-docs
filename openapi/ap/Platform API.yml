openapi: 3.0.0
info:
  version: "2.0.0"
  title: Platform API
tags:
  - name: "Transactions"
    description: "Transactions initiated by client applications via SEP APIs"
  - name: "Quotes"
    description: "Firm quotes provided to client applications via SEP APIs"
paths:
  /transactions:
    get:
      tags:
        - "Transactions"
      summary: List all Transactions
      operationId: getTransactions
      description: |
        Provides the information necessary for the business to determine the state of each transaction, decide if any 
        action must be taken to continue processing each transaction, and act on those decisions.
      parameters:
        - in: query
          name: sep
          description: The SEP number for the protocol used to initiate this transaction.
          required: false
          schema:
            type: integer
            enum: [ 24, 31 ]
        - in: query
          name: order
          description: Either ascending or descending by `order_by` value.
          required: false
          schema:
            type: string
            enum: [ "asc", "desc" ]
            default: "desc"
        - in: query
          name: order_by
          description: The data to be used for ordering transactions.
          schema:
            type: string
            enum: [ "started_at", "completed_at", "transfer_received_at" ]
            default: "started_at"
        - in: query
          name: cursor
          description:
            The cursor used for pagination. Each response will include a `cursor` value that can be used to
            view the next page, assuming all other parameters kept the same.
          required: false
          schema:
            type: string
        - in: query
          name: after
          description: Timestamp for which all `order_by` values will be after (exclusive), in UTC.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: before
          description: Timestamp for which all `order_by` values will be before (exclusive), in UTC.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: status
          description: Status of the transaction.
          required: false
          schema:
            type: string
            enum: [
              "pending_sender",
              "pending_stellar",
              "pending_customer_info_update",
              "pending_receiver",
              "pending_external",
              "completed",
              "expired",
              "error"
            ]
      responses:
        '200':
          description: valid request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: './schemas.yml#/components/schemas/AllTransactionsSEP24'
                  - $ref: './schemas.yml#/components/schemas/AllTransactionSEP31'
        '400':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                  - error
    patch:
      tags:
        - "Transactions"
      summary: Accept updated information on transactions
      operationId: patchTransactions
      description:
        Accepts one or more objects containing updated information on transactions. Note that requests containing
        invalid data for any transaction will result in a 400 Bad Request and no transactions will be updated. 
        Importantly, this operation is NOT atomic. If one update fails, all previous updates would be applied, 
        all subsequent updates would be discarded, and an error would be raised. Note that this endpoint accepts a 
        subset of transaction information defined in the `MutableTransaction` schema.
      responses:
        '200':
          description: Transaction(s) updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      $ref: './schemas.yml#/components/schemas/MutableTransaction'
        '400':
          description: 'Invalid request body. The error returned pertains to the transaction first determined to be invalid.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  id:
                    type: string
                    description: The `id` of the transaction first determined to be invalid.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                records:
                  type: array
                  items:
                    $ref: './schemas.yml#/components/schemas/PatchTransactionRequest'
  /transactions/{id}:
    get:
      tags:
        - "Transactions"
      summary: Retreive a Transaction
      operationId: getTransaction
      description:
        Provides the information necessary for the business to determine the state of the transaction identified by
        `id`, decide if any action must be taken to continue processing the transaction, and act on the decision.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Transaction found."
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: './schemas.yml#/components/schemas/TransactionSEP24'
                  - $ref: './schemas.yml#/components/schemas/TransactionSEP31'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: './schemas.yml#/components/schemas/Error'
        '404':
          description: "Transaction not found."
          content:
            application/json:
              schema:
                $ref: './schemas.yml#/components/schemas/Error'
  /exchange/quotes:
    get:
      tags:
        - Quotes
      summary: List all Quotes
      operationId: getQuotes
      description:
        Only relevant for SEP-38 (used by SEP-31). Fetches the quotes that were created by client applications using
        SEP-38's `POST /quote` endpoint.
      parameters:
        - in: query
          name: order
          description: Either ascending or descending by `order_by` value.
          required: false
          schema:
            type: string
            enum: [ "asc", "desc" ]
            default: "desc"
        - in: query
          name: order_by
          description: The data to be used for ordering transactions.
          required: false
          schema:
            type: string
            enum: [ "created_at", "expires_at", "used_at" ]
            default: "created_at"
        - in: query
          name: cursor
          description:
            Cursor used for pagination. Each response will include a `cursor` value that can be used to view
            the next page, assuming all other parameters kept the same.
          required: false
          schema:
            type: string
        - in: query
          name: after
          description: Timestamp for which all `order_by` values will be after (exclusive), in UTC.
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: before
          description: Timestamp for which all `order_by` values will be before (exclusive), in UTC.
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      $ref: './schemas.yml#/components/schemas/Quote'
                  cursor:
                    type: string
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: './schemas.yml#/components/schemas/Error'
  /exchange/quotes/{id}:
    get:
      tags:
        - Quotes
      summary: Retrieve a Quote
      operationId: getQuote
      description:
        Only relevant for SEP-38 (used by SEP-31). Fetches the quote that was created by a client application using
        SEP-38's `POST /quote` endpoint.
      parameters:
        - in: path
          name: id
          description: The ID returned as a result of creating the quote via SEP-38's `POST /quote` endpoint.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: './schemas.yml#/components/schemas/Quote'
        '404':
          description: "Not Found."
          content:
            application/json:
              schema:
                $ref: './schemas.yml#/components/schemas/Error'

# CHANGELOG
## v2.0.0: Simplified the Event by merging the QuoteEvent and Transaction Event and embedding the detail in the `transaction` and `quote` field. Removed unused schemas.
