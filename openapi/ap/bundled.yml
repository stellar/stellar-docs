openapi: 3.0.0
info:
  version: 2.0.0
  title: Platform API
tags:
  - name: Transactions
    description: Transactions initiated by client applications via SEP APIs
  - name: Quotes
    description: Firm quotes provided to client applications via SEP APIs
paths:
  /transactions:
    patch:
      tags:
        - Transactions
        - SEP-24
        - SEP-31
      summary: Update Transactions Info
      operationId: patchTransactions
      description: Accepts one or more objects containing updated information on transactions. Note that requests containing invalid data for any transaction will result in a 400 Bad Request and no transactions will be updated. Importantly, this operation is NOT atomic. If one update fails, all previous updates would be applied, all subsequent updates would be discarded, and an error would be raised.
      responses:
        '200':
          description: Transaction(s) updated.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AllTransactionsSEP24'
                  - $ref: '#/components/schemas/AllTransactionsSEP31'
        '400':
          description: Invalid request body. The error returned pertains to the transaction first determined to be invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  id:
                    type: string
                    description: The `id` of the transaction first determined to be invalid.
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PatchTransactionSEP24'
                - $ref: '#/components/schemas/PatchTransactionSEP31'
  /transactions/{id}:
    get:
      tags:
        - Transactions
        - SEP-24
        - SEP-31
      summary: Retreive a Transaction
      operationId: getTransaction
      description: Provides the information necessary for the business to determine the state of the transaction identified by `id`, decide if any action must be taken to continue processing the transaction, and act on the decision.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction found.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TransactionSEP24'
                  - $ref: '#/components/schemas/TransactionSEP31'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Transaction not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Amount:
      type: object
      required:
        - amount
        - asset
      properties:
        amount:
          type: string
        asset:
          type: string
    StellarTransaction:
      type: object
      required:
        - id
        - created_at
        - envelope
        - payments
      properties:
        id:
          type: string
          description: The ID of the transaction in the Stellar network.
        memo:
          type: string
          description: The memo of the transaction in the Stellar network.
        memo_type:
          type: string
          description: The memo type of the transaction in the Stellar network. Should be present if memo is not null.
          enum:
            - text
            - hash
            - id
        created_at:
          type: string
          format: date-time
          description: The time the transaction was registered in the Stellar network.
        envelope:
          type: string
          description: The transaction envelope, containing all the transaction information.
        payments:
          type: array
          items:
            type: object
            required:
              - id
              - payment_type
              - source_account
              - destination_account
              - amount
            properties:
              id:
                type: string
                description: The ID of the payment in the Stellar Network.
              payment_type:
                type: string
                description: The type of payment in the Stellar Network.
                enum:
                  - payment
                  - path_payment
                default: payment
              source_account:
                type: string
                description: The account being debited in the Stellar Network.
              destination_account:
                type: string
                description: The account being credited in the Stellar Network.
              amount:
                $ref: '#/components/schemas/Amount'
    MemoType:
      type: string
      description: The memo type of the transaction in the Stellar network. Should be present if memo is not null.
      enum:
        - text id hash
    Refunds:
      type: object
      properties:
        amount_refunded:
          $ref: '#/components/schemas/Amount'
        amount_fee:
          $ref: '#/components/schemas/Amount'
        payments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              id_type:
                type: string
                enum:
                  - stellar
                  - external
              amount:
                $ref: '#/components/schemas/Amount'
              fee:
                $ref: '#/components/schemas/Amount'
              requested_at:
                type: string
                format: date-time
              refunded_at:
                type: string
                format: date-time
    MutableTransactionSEP24:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        sep:
          type: string
          enum:
            - '24'
        status:
          type: string
          enum:
            - incomplete
            - completed
            - refunded
            - expired
            - error
            - pending_stellar
            - pending_external
            - pending_user_transfer_start
            - pending_user_transfer_complete
            - pending_anchor
            - pending_trust
            - pending_user
            - no_market
            - too_small
            - too_large
        amount_in:
          $ref: '#/components/schemas/Amount'
        amount_out:
          $ref: '#/components/schemas/Amount'
        amount_fee:
          $ref: '#/components/schemas/Amount'
        started_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        transfer_received_at:
          type: string
          format: date-time
        external_transaction_id:
          type: string
        stellar_transactions:
          type: array
          items:
            $ref: '#/components/schemas/StellarTransaction'
        memo:
          type: string
        memo_type:
          $ref: '#/components/schemas/MemoType'
        message:
          type: string
        refunds:
          $ref: '#/components/schemas/Refunds'
    PatchTransactionSEP24:
      type: object
      properties:
        records:
          type: array
          items:
            type: object
            properties:
              transaction:
                $ref: '#/components/schemas/MutableTransactionSEP24'
    StellarId:
      type: object
      description: |
        StellarId's are objects that identify end-users and SEP-31 Sending Anchors, but not SEP-31 Receiving Anchors.

        For a SEP-12 customer, the `id` field should be sufficient to fully identify the customer in the business' Backend.

        For a SEP-31 Sending Anchor, the `account` field should be used.
      properties:
        id:
          type: string
          description: The `id` of the customer registered through SEP-12.
        account:
          type: string
          description: Either the Stellar account or Muxed account address of the on-chain entity.
    MutableTransactionSEP31:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        sep:
          type: string
          enum:
            - '31'
        status:
          type: string
          enum:
            - incomplete
            - completed
            - refunded
            - expired
            - error
            - pending_stellar
            - pending_external
            - pending_sender
            - pending_receiver
            - pending_transaction_info_update
            - pending_customer_info_update
        amount_in:
          $ref: '#/components/schemas/Amount'
        amount_out:
          $ref: '#/components/schemas/Amount'
        amount_fee:
          $ref: '#/components/schemas/Amount'
        started_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        transfer_received_at:
          type: string
          format: date-time
        external_transaction_id:
          type: string
        stellar_transactions:
          type: array
          items:
            $ref: '#/components/schemas/StellarTransaction'
        message:
          type: string
        customers:
          type: object
          description: |
            The Identification info of the sending and receiving customers. If they were created through [SEP-12](https://stellar.org/protocol/sep-12),
            this object should contain the SEP-12 customer `id`. Otherwise, the `account` address of the customer.
          properties:
            sender:
              $ref: '#/components/schemas/StellarId'
            receiver:
              $ref: '#/components/schemas/StellarId'
        creator:
          $ref: '#/components/schemas/StellarId'
        refunds:
          $ref: '#/components/schemas/Refunds'
    PatchTransactionSEP31:
      type: object
      properties:
        records:
          type: array
          items:
            type: object
            properties:
              transaction:
                $ref: '#/components/schemas/MutableTransactionSEP31'
    TransactionSEP24:
      type: object
      required:
        - id
        - sep
        - kind
        - status
        - amount_expected
        - destination_account
        - started_at
      properties:
        id:
          type: string
        sep:
          type: string
          enum:
            - '24'
        kind:
          type: string
          enum:
            - deposit
            - withdrawal
        status:
          type: string
          enum:
            - incomplete
            - completed
            - refunded
            - expired
            - error
            - pending_stellar
            - pending_external
            - pending_user_transfer_start
            - pending_user_transfer_complete
            - pending_anchor
            - pending_trust
            - pending_user
            - no_market
            - too_small
            - too_large
        amount_expected:
          $ref: '#/components/schemas/Amount'
        amount_in:
          $ref: '#/components/schemas/Amount'
        amount_out:
          $ref: '#/components/schemas/Amount'
        amount_fee:
          $ref: '#/components/schemas/Amount'
        started_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        transfer_received_at:
          type: string
          format: date-time
        message:
          type: string
        refunds:
          $ref: '#/components/schemas/Refunds'
        stellar_transactions:
          type: array
          items:
            $ref: '#/components/schemas/StellarTransaction'
        source_account:
          type: string
        destination_account:
          type: string
        external_transaction_id:
          type: string
        memo:
          type: string
        memo_type:
          $ref: '#/components/schemas/MemoType'
    AllTransactionsSEP24:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/TransactionSEP24'
    TransactionSEP31:
      type: object
      required:
        - id
        - sep
        - kind
        - status
        - started_at
      properties:
        id:
          type: string
        sep:
          type: string
          enum:
            - '31'
        kind:
          type: string
          enum:
            - receive
        status:
          type: string
          enum:
            - incomplete
            - completed
            - refunded
            - expired
            - error
            - pending_stellar
            - pending_external
            - pending_sender
            - pending_receiver
            - pending_transaction_info_update
            - pending_customer_info_update
        amount_expected:
          $ref: '#/components/schemas/Amount'
        amount_in:
          $ref: '#/components/schemas/Amount'
        amount_out:
          $ref: '#/components/schemas/Amount'
        amount_fee:
          $ref: '#/components/schemas/Amount'
        quote_id:
          type: string
        started_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        transfer_received_at:
          type: string
          format: date-time
        message:
          type: string
        refunds:
          $ref: '#/components/schemas/Refunds'
        stellar_transactions:
          type: array
          items:
            $ref: '#/components/schemas/StellarTransaction'
        external_transaction_id:
          type: string
        customers:
          type: object
          description: |
            The Identification info of the sending and receiving customers. If they were created through [SEP-12](https://stellar.org/protocol/sep-12),
            this object should contain the SEP-12 customer `id`. Otherwise, the `account` address of the customer.
          properties:
            sender:
              $ref: '#/components/schemas/StellarId'
            receiver:
              $ref: '#/components/schemas/StellarId'
        creator:
          $ref: '#/components/schemas/StellarId'
    AllTransactionsSEP31:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/TransactionSEP31'
    Error:
      type: object
      properties:
        error:
          type: string
        id:
          type: string
      required:
        - error
