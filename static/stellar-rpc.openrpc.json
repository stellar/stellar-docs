{
  "openrpc": "1.2.6",
  "info": {
    "title": "Stellar RPC",
    "description": "Stellar-RPC allows you to communicate directly with Soroban via a JSON RPC interface.",
    "termsOfService": "https://stellar.org/terms-of-service",
    "contact": {
      "name": "Stellar Development Foundation",
      "url": "https://stellar.org/connect",
      "email": "hello@stellar.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "20.1.0"
  },
  "servers": [
    {
      "name": "Testnet",
      "url": "https://soroban-testnet.stellar.org:443",
      "summary": "Publicly available RPC server maintained by SDF, operating on the Testnet test network.",
      "description": "Testnet is meant to be a stable network that runs a production (or near-production) version of the Stellar network."
    },
    {
      "name": "Futurenet",
      "url": "https://rpc-futurenet.stellar.org:443",
      "summary": "Publicly available RPC server maintained by SDF, operating on the Futurenet test network.",
      "description": "Futurenet is meant to be a bleeding-edge, experimental network that runs an early, test version of the Stellar network."
    }
  ],
  "methods": [
    {
      "name": "getEvents",
      "summary": "returns contract events",
      "description": "Clients can request a filtered list of events emitted by a given ledger range.\n\nStellar-RPC will support querying within a maximum 7 days of recent ledgers.\n\nNote, this could be used by the client to only prompt a refresh when there is a new ledger with relevant events. It should also be used by backend Dapp components to \"ingest\" events into their own database for querying and serving.\n\nIf making multiple requests, clients should deduplicate any events received, based on the event's unique id field. This prevents double-processing in the case of duplicate events being received.\n\nBy default stellar-rpc retains the most recent 24 hours of events.",
      "externalDocs": {
        "url": "https://developers.stellar.org/docs/data/apis/rpc/api-reference/methods/getEvents"
      },
      "paramStructure": "by-name",
      "params": [
        {
          "name": "startLedger",
          "summary": "ledger to begin searching from",
          "description": "Ledger sequence number to start fetching responses from (inclusive). This method will return an error if `startLedger` is less than the oldest ledger stored in this node, or greater than the latest ledger seen by this node. If a cursor is included in the request, `startLedger` must be omitted.",
          "required": false,
          "schema": {
            "title": "ledgerSequence",
            "description": "Sequence number of the ledger.",
            "type": "number"
          }
        },
        {
          "name": "endLedger",
          "summary": "ledger represents the end of search window",
          "description": "Ledger sequence number represents the end of search window (exclusive). If a cursor is included in the request, `endLedger` must be omitted.",
          "required": false,
          "schema": {
            "title": "ledgerSequence",
            "description": "Sequence number of the ledger.",
            "type": "number"
          }
        },
        {
          "name": "filters",
          "summary": "filters to narrow events search",
          "description": "List of filters for the returned events. Events matching any of the filters are included. To match a filter, an event must match both a contractId and a topic. Maximum 5 filters are allowed per request.",
          "schema": {
            "type": "array",
            "maxItems": 5,
            "items": {
              "type": "object",
              "required": [],
              "properties": {
                "type": {
                  "title": "type",
                  "type": "string",
                  "description": "A comma separated list of event types (system, contract, or diagnostic) used to filter events. If omitted, all event types are included."
                },
                "contractIds": {
                  "title": "contractIds",
                  "type": "array",
                  "description": "List of contract IDs to query for events. If omitted, return events for all contracts. Maximum 5 contract IDs are allowed per request.",
                  "maxItems": 5,
                  "items": {
                    "title": "contractId",
                    "description": "A StrKey representation of a contract address (`C...`). ([SEP-23](https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0023.md#specification)).",
                    "type": "string"
                  }
                },
                "topics": {
                  "title": "topics",
                  "type": "array",
                  "description": "List of topic filters. If omitted, query for all events. If multiple filters are specified, events will be included if they match any of the filters. Maximum 5 filters are allowed per request.",
                  "maxItems": 5,
                  "items": {
                    "type": "array",
                    "description": "A `TopicFilter` is `SegmentMatcher[]`\n\n- The list can be 1-4 `SegmentMatchers` long.",
                    "minItems": 1,
                    "maxItems": 4,
                    "items": {
                      "title": "SegmentMatcher",
                      "type": "string",
                      "description": "A `SegmentMatcher` is one of the following:\n\n- For an exact segment match, a string containing a base64-encoded ScVal\n\n- For a wildcard single-segment match, the string \"*\", matches exactly one segment."
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "pagination",
          "summary": "pagination options",
          "description": "Pagination in stellar-rpc is similar to pagination in Horizon. See [Pagination](https://developers.stellar.org/docs/data/rpc/api-reference/structure/pagination).",
          "required": false,
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "cursor": {
                "type": "string",
                "description": "An opaque string which acts as a paging token. To obtain the next page of results occurring after a given response set this value to the `cursor` field of the response."
              },
              "limit": {
                "type": "number",
                "description": "The maximum number of records returned. The limit for getEvents can range from 1 to 10000 - an upper limit that is hardcoded in Stellar-RPC for performance reasons. If this argument isn't designated, it defaults to 100."
              }
            }
          }
        },
        {
          "name": "xdrFormat",
          "summary": "chooses a response format for XDR fields: 'json' or 'base64'",
          "required": false,
          "description": "Lets the user choose the format in which the response should be returned - either as unpacked JSON or as base64-encoded XDR strings. Note that you should not rely on any schema for the JSON, as it will change when the underlying XDR changes.",
          "schema": {
            "title": "xdrFormat",
            "type": "string",
            "description": "Specifies whether XDR should be encoded as Base64 (default or 'base64') or JSON ('json')."
          }
        }
      ],
      "result": {
        "name": "getEventsResult",
        "schema": {
          "type": "object",
          "properties": {
            "latestLedger": {
              "title": "latestLedger",
              "description": "The sequence number of the latest ledger known to Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "events": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "title": "type",
                    "description": "The type of event emission.",
                    "type": "string",
                    "enum": [
                      "contract",
                      "diagnostic",
                      "system"
                    ]
                  },
                  "ledger": {
                    "title": "ledgerSequence",
                    "description": "Sequence number of the ledger in which this event was emitted.",
                    "type": "number"
                  },
                  "ledgerClosedAt": {
                    "type": "string",
                    "description": "[ISO-8601](https://www.iso.org/iso-8601-date-and-time-format.html) timestamp of the ledger closing time"
                  },
                  "contractId": {
                    "title": "contractId",
                    "description": "StrKey representation of the contract address that emitted this event.",
                    "type": "string"
                  },
                  "id": {
                    "description": "Unique identifier for this event.\n\n- The event's unique id field is based on a [`toid` from Horizon](https://github.com/stellar/go/blob/master/toid/main.go) as used in Horizon's /effects endpoint.\n\n- https://github.com/stellar/go/blob/master/services/horizon/internal/db2/history/effect.go#L58\n\n- Specifically, it is a string containing:\n\n- bigint(32 bit ledger sequence + 20 bit txn number + 12 bit operation) + `<hyphen>` + number for the event within the operation.\n\n- For example: `1234-1`",
                    "type": "string"
                  },
                  "pagingToken": {
                    "description": "Duplicate of `id` field. This field is deprecated, please use the `cursor` field at the top level of the getEvents response for pagination.",
                    "type": "string"
                  },
                  "inSuccessfulContractCall": {
                    "description": "If true the event was emitted during a successful contract call.",
                    "type": "boolean"
                  },
                  "topic": {
                    "type": "array",
                    "description": "The [ScVal](https://github.com/stellar/stellar-xdr/blob/v22.0/Stellar-contract.x#L214)s containing the topics this event was emitted with (as a base64 string).",
                    "minItems": 1,
                    "maxItems": 4,
                    "items": {
                      "title": "SegmentMatcher",
                      "type": "string",
                      "description": "A `SegmentMatcher` is one of the following:\n\n- For an exact segment match, a string containing a base64-encoded ScVal\n\n- For a wildcard single-segment match, the string \"*\", matches exactly one segment."
                    }
                  },
                  "value": {
                    "description": "The data emitted by the event (an [ScVal](https://github.com/stellar/stellar-xdr/blob/v22.0/Stellar-contract.x#L214), serialized as a base64 string).",
                    "type": "string"
                  },
                  "txHash": {
                    "title": "hash",
                    "type": "string",
                    "minLength": 64,
                    "maxLength": 64,
                    "pattern": "^[a-f\\d]{64}$",
                    "description": "The transaction which triggered this event."
                  }
                }
              }
            },
            "cursor": {
              "title": "cursor",
              "type": "string",
              "description": "A token which can be included in a subsequent request to obtain the next page of results."
            }
          }
        }
      },
      "examples": [
        {
          "name": "Native XLM Transfer Events",
          "description": "Example request to the `getEvents` method, filtering for `transfer` events for native Lumens, and limiting the number of returned events to 2.",
          "params": [
            {
              "name": "startLedger",
              "value": 1190000
            },
            {
              "name": "filters",
              "value": [
                {
                  "type": "contract",
                  "contractIds": [
                    "CDLZFC3SYJYDZT7K67VZ75HPJVIEUVNIXF47ZG2FB2RMQQVU2HHGCYSC"
                  ],
                  "topics": [
                    [
                      "AAAADwAAAAh0cmFuc2Zlcg==",
                      "*",
                      "*",
                      "*"
                    ]
                  ]
                }
              ]
            },
            {
              "name": "pagination",
              "value": {
                "limit": 2
              }
            }
          ],
          "result": {
            "name": "getEventsResult",
            "value": {
              "events": [
                {
                  "type": "contract",
                  "ledger": 1192402,
                  "ledgerClosedAt": "2024-04-19T06:19:00Z",
                  "contractId": "CDLZFC3SYJYDZT7K67VZ75HPJVIEUVNIXF47ZG2FB2RMQQVU2HHGCYSC",
                  "id": "0005121327593697280-0000000002",
                  "pagingToken": "0005121327593697280-0000000002",
                  "topic": [
                    "AAAADwAAAAh0cmFuc2Zlcg==",
                    "AAAAEgAAAAAAAAAA/ItF3cwsGhkee6lL5X6kicifdluxtsuDq9J/F0zou6Q=",
                    "AAAAEgAAAAAAAAAA2uSCoRk2StNEYAmWOhGXKQg0SLV6avaiN7TdV/uMozQ=",
                    "AAAADgAAAAZuYXRpdmUAAA=="
                  ],
                  "value": "AAAACgAAAAAAAAAAAAAAAAX14QA=",
                  "inSuccessfulContractCall": true,
                  "txHash": "bd8a6611a3b44ff7dce76a27fb32fa69c9f6eff3435ca5296f6035d5105617ed"
                },
                {
                  "type": "contract",
                  "ledger": 1192438,
                  "ledgerClosedAt": "2024-04-19T06:22:14Z",
                  "contractId": "CDLZFC3SYJYDZT7K67VZ75HPJVIEUVNIXF47ZG2FB2RMQQVU2HHGCYSC",
                  "id": "0005121482212511744-0000000002",
                  "pagingToken": "0005121482212511744-0000000002",
                  "topic": [
                    "AAAADwAAAAh0cmFuc2Zlcg==",
                    "AAAAEgAAAAAAAAAA/ItF3cwsGhkee6lL5X6kicifdluxtsuDq9J/F0zou6Q=",
                    "AAAAEgAAAAAAAAAA2uSCoRk2StNEYAmWOhGXKQg0SLV6avaiN7TdV/uMozQ=",
                    "AAAADgAAAAZuYXRpdmUAAA=="
                  ],
                  "value": "AAAACgAAAAAAAAAAAAAAAACYloA=",
                  "inSuccessfulContractCall": true,
                  "txHash": "3fa1787085a4aa585507751394d70494a02e71d347446095a763ecbfc647937c"
                }
              ],
              "latestLedger": 1197926,
              "cursor": "0005121482212511744-0000000002"
            }
          }
        },
        {
          "name": "All Events",
          "description": "Example request to the `getEvents` method, filtering for all events of all types for any and all contracts.",
          "params": [
            {
              "name": "startLedger",
              "value": 1190000
            },
            {
              "name": "pagination",
              "value": {
                "limit": 2
              }
            }
          ],
          "result": {
            "name": "getEventsResult",
            "value": {
              "events": [
                {
                  "type": "diagnostic",
                  "ledger": 1190017,
                  "ledgerClosedAt": "2024-04-19T02:50:17Z",
                  "contractId": "",
                  "id": "0005111084096696320-0000000000",
                  "pagingToken": "0005111084096696320-0000000000",
                  "topic": [
                    "AAAADwAAAAdmbl9jYWxsAA==",
                    "AAAADQAAACBVkqNeeMWaJ6fGFVD0NhNxSTQdXVfI6TONZODy5H/xvg==",
                    "AAAADwAAAAlzZXRfcHJpY2UAAAA="
                  ],
                  "value": "AAAAEAAAAAEAAAADAAAAEgAAAAAAAAAA858ZjeNabvXLtYtAqjhYbr6rR/MbcXLFLbxWY8fGUAgAAAAQAAAAAQAAABAAAAAKAAAAAAAAAABTWsrEVyIb1AAAAAoAAAAAAAAAAAP9XFVkfEupAAAACgAAAAAAAAAAAABa9LTrFrkAAAAKAAAAAAAAAAAAACq5DCLjjwAAAAoAAAAAAAAAAAAuBCdIqyAdAAAACgAAAAAAAAAAAABa9mXQ2hAAAAAKAAAAAAAAAAAAACbhkTWsHAAAAAoAAAAAAAAAAAALcW2qL4PCAAAACgAAAAAAAAAAAAI9JfSlL3wAAAAKAAAAAAAAAAAAADjldDj7agAAAAoAAAAAAAAAAAAElSMStjuiAAAACgAAAAAAAAAAAABa9B4QqpEAAAAKAAAAAAAAAAAAArrTgYuhhwAAAAoAAAAAAAAAAAAACXlZqfeBAAAACgAAAAAAAAAAAAJpfzLdSfEAAAAKAAAAAAAAAAAAAGBtabYd9QAAAAUAAAGO9ELDwA==",
                  "inSuccessfulContractCall": true,
                  "txHash": "3f81b00a78830bb0186539cceed5ac137aad0d6872dd998c533c2758fbda0a6c"
                },
                {
                  "type": "diagnostic",
                  "ledger": 1190017,
                  "ledgerClosedAt": "2024-04-19T02:50:17Z",
                  "contractId": "CBKZFI26PDCZUJ5HYYKVB5BWCNYUSNA5LVL4R2JTRVSOB4XEP7Y34OPN",
                  "id": "0005111084096696320-0000000001",
                  "pagingToken": "0005111084096696320-0000000001",
                  "topic": [
                    "AAAADwAAAAlmbl9yZXR1cm4AAAA=",
                    "AAAADwAAAAlzZXRfcHJpY2UAAAA="
                  ],
                  "value": "AAAAAQ==",
                  "inSuccessfulContractCall": true,
                  "txHash": "3f81b00a78830bb0186539cceed5ac137aad0d6872dd998c533c2758fbda0a6c"
                }
              ],
              "latestLedger": 1197964,
              "cursor": "0005111084096696320-0000000001"
            }
          }
        }
      ]
    },
    {
      "name": "getFeeStats",
      "summary": "returns statistics about charged inclusion fees",
      "description": "Statistics for charged inclusion fees. The inclusion fee statistics are calculated from the inclusion fees that were paid for the transactions to be included onto the ledger. For Soroban transactions and Stellar transactions, they each have their own inclusion fees and own surge pricing. Inclusion fees are used to prevent spam and prioritize transactions during network traffic surge.",
      "externalDocs": {
        "url": "https://developers.stellar.org/docs/data/apis/rpc/api-reference/methods/getFeeStats"
      },
      "paramStructure": "by-name",
      "params": [],
      "result": {
        "name": "getFeeStatsResult",
        "schema": {
          "type": "object",
          "properties": {
            "sorobanInclusionFee": {
              "type": "object",
              "description": "Inclusion fee distribution statistics for Soroban transactions",
              "properties": {
                "max": {
                  "description": "Maximum fee",
                  "type": "string"
                },
                "min": {
                  "description": "Minimum fee",
                  "type": "string"
                },
                "mode": {
                  "description": "Fee value which occurs the most often",
                  "type": "string"
                },
                "p10": {
                  "description": "10th nearest-rank fee percentile",
                  "type": "string"
                },
                "p20": {
                  "description": "20th nearest-rank fee percentile",
                  "type": "string"
                },
                "p30": {
                  "description": "30th nearest-rank fee percentile",
                  "type": "string"
                },
                "p40": {
                  "description": "40th nearest-rank fee percentile",
                  "type": "string"
                },
                "p50": {
                  "description": "50th nearest-rank fee percentile",
                  "type": "string"
                },
                "p60": {
                  "description": "60th nearest-rank fee percentile",
                  "type": "string"
                },
                "p70": {
                  "description": "70th nearest-rank fee percentile",
                  "type": "string"
                },
                "p80": {
                  "description": "80th nearest-rank fee percentile",
                  "type": "string"
                },
                "p90": {
                  "description": "90th nearest-rank fee percentile.",
                  "type": "string"
                },
                "p95": {
                  "description": "95th nearest-rank fee percentile.",
                  "type": "string"
                },
                "p99": {
                  "description": "99th nearest-rank fee percentile",
                  "type": "string"
                },
                "transactionCount": {
                  "description": "How many transactions are part of the distribution",
                  "type": "number"
                },
                "ledgerCount": {
                  "description": "How many consecutive ledgers form the distribution",
                  "type": "number"
                }
              }
            },
            "inclusionFee": {
              "type": "object",
              "description": "Fee distribution statistics for Stellar (i.e. non-Soroban) transactions. Statistics are normalized per operation.",
              "properties": {
                "max": {
                  "description": "Maximum fee",
                  "type": "string"
                },
                "min": {
                  "description": "Minimum fee",
                  "type": "string"
                },
                "mode": {
                  "description": "Fee value which occurs the most often",
                  "type": "string"
                },
                "p10": {
                  "description": "10th nearest-rank fee percentile",
                  "type": "string"
                },
                "p20": {
                  "description": "20th nearest-rank fee percentile",
                  "type": "string"
                },
                "p30": {
                  "description": "30th nearest-rank fee percentile",
                  "type": "string"
                },
                "p40": {
                  "description": "40th nearest-rank fee percentile",
                  "type": "string"
                },
                "p50": {
                  "description": "50th nearest-rank fee percentile",
                  "type": "string"
                },
                "p60": {
                  "description": "60th nearest-rank fee percentile",
                  "type": "string"
                },
                "p70": {
                  "description": "70th nearest-rank fee percentile",
                  "type": "string"
                },
                "p80": {
                  "description": "80th nearest-rank fee percentile",
                  "type": "string"
                },
                "p90": {
                  "description": "90th nearest-rank fee percentile.",
                  "type": "string"
                },
                "p95": {
                  "description": "95th nearest-rank fee percentile.",
                  "type": "string"
                },
                "p99": {
                  "description": "99th nearest-rank fee percentile",
                  "type": "string"
                },
                "transactionCount": {
                  "description": "How many transactions are part of the distribution",
                  "type": "number"
                },
                "ledgerCount": {
                  "description": "How many consecutive ledgers form the distribution",
                  "type": "number"
                }
              }
            },
            "latestLedger": {
              "title": "latestLedger",
              "description": "The sequence number of the latest ledger known to Stellar RPC at the time it handled the request.",
              "type": "number"
            }
          }
        }
      },
      "examples": [
        {
          "name": "Statistics about charged transaction fees.",
          "description": "Example request to the `getFeeStats` method",
          "params": [],
          "result": {
            "name": "getFeeStatsResult",
            "value": {
              "sorobanInclusionFee": {
                "max": "210",
                "min": "100",
                "mode": "100",
                "p10": "100",
                "p20": "100",
                "p30": "100",
                "p40": "100",
                "p50": "100",
                "p60": "100",
                "p70": "100",
                "p80": "100",
                "p90": "120",
                "p95": "190",
                "p99": "200",
                "transactionCount": "10",
                "ledgerCount": 50
              },
              "inclusionFee": {
                "max": "100",
                "min": "100",
                "mode": "100",
                "p10": "100",
                "p20": "100",
                "p30": "100",
                "p40": "100",
                "p50": "100",
                "p60": "100",
                "p70": "100",
                "p80": "100",
                "p90": "100",
                "p95": "100",
                "p99": "100",
                "transactionCount": "7",
                "ledgerCount": 10
              },
              "latestLedger": 4519945
            }
          }
        }
      ]
    },
    {
      "name": "getHealth",
      "summary": "returns node health",
      "description": "General node health check.",
      "externalDocs": {
        "url": "https://developers.stellar.org/docs/data/apis/rpc/api-reference/methods/getHealth"
      },
      "paramStructure": "by-name",
      "params": [],
      "result": {
        "name": "getHealthResult",
        "schema": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "\"healthy\""
            },
            "latestLedger": {
              "type": "number",
              "description": "Most recent known ledger sequence"
            },
            "oldestLedger": {
              "type": "number",
              "description": "Oldest ledger sequence kept in history"
            },
            "ledgerRetentionWindow": {
              "type": "number",
              "description": "Maximum retention window configured. A full window state can be determined via: ledgerRetentionWindow = latestLedger - oldestLedger + 1"
            }
          }
        }
      },
      "examples": [
        {
          "name": "Current node health",
          "description": "Example request to the `getHealth` method",
          "params": [],
          "result": {
            "name": "getHealthResult",
            "value": {
              "status": "healthy",
              "latestLedger": 51583040,
              "oldestLedger": 51565760,
              "ledgerRetentionWindow": 17281
            }
          }
        }
      ]
    },
    {
      "name": "getLatestLedger",
      "summary": "returns latest known ledger",
      "description": "For finding out the current latest known ledger of this node. This is a subset of the ledger info from Horizon.",
      "externalDocs": {
        "url": "https://developers.stellar.org/docs/data/apis/rpc/api-reference/methods/getLatestLedger"
      },
      "paramStructure": "by-name",
      "params": [],
      "result": {
        "name": "getLatestLedgerResult",
        "schema": {
          "type": "object",
          "properties": {
            "id": {
              "title": "id",
              "type": "string",
              "minLength": 64,
              "maxLength": 64,
              "pattern": "^[a-f\\d]{64}$",
              "description": "Hash identifier of the latest ledger (as a hex-encoded string) known to Stellar RPC at the time it handled the request."
            },
            "protocolVersion": {
              "title": "protocolVersion",
              "description": "Stellar Core protocol version associated with the latest ledger.",
              "type": "number"
            },
            "sequence": {
              "title": "latestLedger",
              "description": "The sequence number of the latest ledger known to Stellar RPC at the time it handled the request.",
              "type": "number"
            }
          }
        }
      },
      "examples": [
        {
          "name": "Details of the Current Ledger",
          "description": "Example request to the `getLatestLedger` method.",
          "params": [],
          "result": {
            "name": "getLatestLedgerResult",
            "value": {
              "id": "c73c5eac58a441d4eb733c35253ae85f783e018f7be5ef974258fed067aabb36",
              "protocolVersion": 20,
              "sequence": 2539605
            }
          }
        }
      ]
    },
    {
      "name": "getLedgerEntries",
      "summary": "returns ledger entries",
      "description": "For reading the current value of ledger entries directly.\n\nThis method enables querying live ledger state: accounts, trustlines, offers, data, claimable balances, and liquidity pools. It also provides direct access to inspect a contract's current state, its code, or any other ledger entry. This serves as a primary method to access your contract data which may not be available via events or `simulateTransaction`.\n\nTo fetch contract wasm byte-code, use the ContractCode ledger entry key.",
      "externalDocs": {
        "url": "https://developers.stellar.org/docs/data/apis/rpc/api-reference/methods/getLedgerEntries"
      },
      "paramStructure": "by-name",
      "params": [
        {
          "name": "keys",
          "summary": "array of ledger keys",
          "description": "Array containing the keys of the ledger entries you wish to retrieve. (an array of serialized base64 strings)",
          "required": true,
          "schema": {
            "description": "An array of LedgerKeys. The maximum number of ledger keys accepted is 200.",
            "type": "array",
            "items": {
              "type": "string",
              "description": "The [LedgerKey](https://github.com/stellar/stellar-xdr/blob/v22.0/Stellar-ledger-entries.x#L600) union corresponding to an existing ledger entry you want to retrieve (base64-encoded string)."
            }
          }
        },
        {
          "name": "xdrFormat",
          "summary": "chooses a response format for XDR fields: 'json' or 'base64'",
          "required": false,
          "description": "Lets the user choose the format in which the response should be returned - either as unpacked JSON or as base64-encoded XDR strings. Note that you should not rely on any schema for the JSON, as it will change when the underlying XDR changes.",
          "schema": {
            "title": "xdrFormat",
            "type": "string",
            "description": "Specifies whether XDR should be encoded as Base64 (default or 'base64') or JSON ('json')."
          }
        }
      ],
      "result": {
        "name": "getLedgerEntriesResult",
        "schema": {
          "type": "object",
          "required": [
            "latestLedger"
          ],
          "properties": {
            "latestLedger": {
              "title": "latestLedger",
              "description": "The sequence number of the latest ledger known to Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "entries": {
              "type": "array",
              "description": "Array of objects containing all found ledger entries",
              "items": {
                "type": "object",
                "description": "Object containing information about an existing ledger entry.",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The [LedgerKey](https://github.com/stellar/stellar-xdr/blob/v22.0/Stellar-ledger-entries.x#L600) corresponding to the ledger entry (base64 string)."
                  },
                  "xdr": {
                    "type": "string",
                    "description": "The key's current [LedgerEntryData](https://github.com/stellar/stellar-xdr/blob/v22.0/Stellar-ledger-entries.x#L564) value (base64 string)."
                  },
                  "lastModifiedLedgerSeq": {
                    "title": "ledgerSequence",
                    "description": "The ledger sequence number of the last time this entry was updated.",
                    "type": "number"
                  },
                  "liveUntilLedgerSeq": {
                    "title": "ledgerSequence",
                    "description": "The ledger sequence number of the ledger that the entry will be live until. May be zero if the entry is no longer live.",
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      },
      "examples": [
        {
          "name": "Retrieve a Contract's Counter Entry for an Address",
          "description": "Example request to the `getNetwork` method for a `Counter(Address)` ledger entry.",
          "params": [
            {
              "name": "keys",
              "summary": "ledger key for an address' counter entry",
              "description": "A ledger key that will request a ledger entry defined using a tuple variant enum in a contract: `Counter(Address)`",
              "value": [
                "AAAABgAAAAHMA/50/Q+w3Ni8UXWm/trxFBfAfl6De5kFttaMT0/ACwAAABAAAAABAAAAAgAAAA8AAAAHQ291bnRlcgAAAAASAAAAAAAAAAAg4dbAxsGAGICfBG3iT2cKGYQ6hK4sJWzZ6or1C5v6GAAAAAE="
              ]
            }
          ],
          "result": {
            "name": "getLedgerEntriesResult",
            "value": {
              "entries": [
                {
                  "key": "AAAAB+qfy4GuVKKfazvyk4R9P9fpo2n9HICsr+xqvVcTF+DC",
                  "xdr": "AAAABgAAAAAAAAABzAP+dP0PsNzYvFF1pv7a8RQXwH5eg3uZBbbWjE9PwAsAAAAQAAAAAQAAAAIAAAAPAAAAB0NvdW50ZXIAAAAAEgAAAAAAAAAAIOHWwMbBgBiAnwRt4k9nChmEOoSuLCVs2eqK9Qub+hgAAAABAAAAAwAAAAw=",
                  "lastModifiedLedgerSeq": 2552504
                }
              ],
              "latestLedger": 2552990
            }
          }
        },
        {
          "name": "Retrieve a Token's Balance Entry for Contract",
          "description": "Example request to the `getNetwork` method for a SAC balance ledger entry belonging to a contract.",
          "params": [
            {
              "name": "keys",
              "summary": "ledger key for a contract's native XLM balance",
              "description": "A ledger key that will request a ledger entry corresponding to a contract's balance on the native XLM Stellar Asset Contract.",
              "value": [
                "AAAABgAAAAHXkotywnA8z+r365/0701QSlWouXn8m0UOoshCtNHOYQAAABAAAAABAAAAAgAAAA8AAAAHQmFsYW5jZQAAAAASAAAAAcwD/nT9D7Dc2LxRdab+2vEUF8B+XoN7mQW21oxPT8ALAAAAAQ=="
              ]
            }
          ],
          "result": {
            "name": "getLedgerEntriesResult",
            "value": {
              "entries": [
                {
                  "key": "AAAABgAAAAHXkotywnA8z+r365/0701QSlWouXn8m0UOoshCtNHOYQAAABAAAAABAAAAAgAAAA8AAAAHQmFsYW5jZQAAAAASAAAAAcwD/nT9D7Dc2LxRdab+2vEUF8B+XoN7mQW21oxPT8ALAAAAAQ==",
                  "xdr": "AAAABgAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAAQAAAAAQAAAAIAAAAPAAAAB0JhbGFuY2UAAAAAEgAAAAHMA/50/Q+w3Ni8UXWm/trxFBfAfl6De5kFttaMT0/ACwAAAAEAAAARAAAAAQAAAAMAAAAPAAAABmFtb3VudAAAAAAACgAAAAAAAAAAAAAAAB3NZQAAAAAPAAAACmF1dGhvcml6ZWQAAAAAAAAAAAABAAAADwAAAAhjbGF3YmFjawAAAAAAAAAA",
                  "lastModifiedLedgerSeq": 2553612
                }
              ],
              "latestLedger": 2553713
            }
          }
        },
        {
          "name": "Retrieve Multiple Ledger Entries from Different Contracts.",
          "description": "Example request to the `getNetwork` method for a `Counter(Address)` ledger entry and a SAC balance ledger entry.",
          "params": [
            {
              "name": "keys",
              "summary": "ledger keys for multiple ledger entries",
              "description": "Two ledger keys: One for a counter entry, and one for a contract's native XLM balance.",
              "value": [
                "AAAABgAAAAHMA/50/Q+w3Ni8UXWm/trxFBfAfl6De5kFttaMT0/ACwAAABAAAAABAAAAAgAAAA8AAAAHQ291bnRlcgAAAAASAAAAAAAAAAAg4dbAxsGAGICfBG3iT2cKGYQ6hK4sJWzZ6or1C5v6GAAAAAE=",
                "AAAABgAAAAHXkotywnA8z+r365/0701QSlWouXn8m0UOoshCtNHOYQAAABAAAAABAAAAAgAAAA8AAAAHQmFsYW5jZQAAAAASAAAAAcwD/nT9D7Dc2LxRdab+2vEUF8B+XoN7mQW21oxPT8ALAAAAAQ=="
              ]
            }
          ],
          "result": {
            "name": "getLedgerEntriesResult",
            "value": {
              "entries": [
                {
                  "key": "AAAABgAAAAHMA/50/Q+w3Ni8UXWm/trxFBfAfl6De5kFttaMT0/ACwAAABAAAAABAAAAAgAAAA8AAAAHQ291bnRlcgAAAAASAAAAAAAAAAAg4dbAxsGAGICfBG3iT2cKGYQ6hK4sJWzZ6or1C5v6GAAAAAE=",
                  "xdr": "AAAABgAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAAQAAAAAQAAAAIAAAAPAAAAB0JhbGFuY2UAAAAAEgAAAAHMA/50/Q+w3Ni8UXWm/trxFBfAfl6De5kFttaMT0/ACwAAAAEAAAARAAAAAQAAAAMAAAAPAAAABmFtb3VudAAAAAAACgAAAAAAAAAAAAAAAB3NZQAAAAAPAAAACmF1dGhvcml6ZWQAAAAAAAAAAAABAAAADwAAAAhjbGF3YmFjawAAAAAAAAAA",
                  "lastModifiedLedgerSeq": 2553612
                },
                {
                  "key": "AAAABgAAAAHXkotywnA8z+r365/0701QSlWouXn8m0UOoshCtNHOYQAAABAAAAABAAAAAgAAAA8AAAAHQmFsYW5jZQAAAAASAAAAAcwD/nT9D7Dc2LxRdab+2vEUF8B+XoN7mQW21oxPT8ALAAAAAQ==",
                  "xdr": "AAAABgAAAAAAAAABzAP+dP0PsNzYvFF1pv7a8RQXwH5eg3uZBbbWjE9PwAsAAAAQAAAAAQAAAAIAAAAPAAAAB0NvdW50ZXIAAAAAEgAAAAAAAAAAIOHWwMbBgBiAnwRt4k9nChmEOoSuLCVs2eqK9Qub+hgAAAABAAAAAwAAAAw=",
                  "lastModifiedLedgerSeq": 2552504
                }
              ],
              "latestLedger": 2553767
            }
          }
        }
      ]
    },
    {
      "name": "getLedgers",
      "summary": "returns a list of ledgers with their details",
      "description": "The `getLedgers` method returns a detailed list of ledgers starting from the user specified starting point that you can paginate as long as the pages fall within the history retention of their corresponding RPC provider.",
      "externalDocs": {
        "url": "https://developers.stellar.org/docs/data/apis/rpc/api-reference/methods/getLedgers"
      },
      "paramStructure": "by-name",
      "params": [
        {
          "name": "startLedger",
          "summary": "ledger to begin searching from",
          "description": "Ledger sequence number to start fetching responses from (inclusive). This method will return an error if `startLedger` is less than the oldest ledger stored in this node, or greater than the latest ledger seen by this node. If a cursor is included in the request, `startLedger` must be omitted.",
          "required": false,
          "schema": {
            "title": "ledgerSequence",
            "description": "Sequence number of the ledger.",
            "type": "number"
          }
        },
        {
          "name": "pagination",
          "summary": "pagination options",
          "description": "Pagination in stellar-rpc is similar to pagination in Horizon. See [Pagination](https://developers.stellar.org/docs/data/rpc/api-reference/structure/pagination).",
          "required": false,
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "cursor": {
                "type": "string",
                "description": "An opaque string which acts as a paging token. To obtain the next page of results occurring after a given response set this value to the `cursor` field of the response."
              },
              "limit": {
                "type": "number",
                "description": "The maximum number of records returned. The limit for getEvents can range from 1 to 10000 - an upper limit that is hardcoded in Stellar-RPC for performance reasons. If this argument isn't designated, it defaults to 100."
              }
            }
          }
        },
        {
          "name": "xdrFormat",
          "summary": "chooses a response format for XDR fields: 'json' or 'base64'",
          "required": false,
          "description": "Lets the user choose the format in which the response should be returned - either as unpacked JSON or as base64-encoded XDR strings. Note that you should not rely on any schema for the JSON, as it will change when the underlying XDR changes.",
          "schema": {
            "title": "xdrFormat",
            "type": "string",
            "description": "Specifies whether XDR should be encoded as Base64 (default or 'base64') or JSON ('json')."
          }
        }
      ],
      "result": {
        "name": "getLedgersResult",
        "schema": {
          "type": "object",
          "properties": {
            "ledgers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hash": {
                    "type": "string",
                    "description": "The hash of the ledger header which was included in the chain"
                  },
                  "sequence": {
                    "title": "ledgerSequence",
                    "description": "The sequence number of the ledger (sometimes called the 'block height').",
                    "type": "number"
                  },
                  "ledgerCloseTime": {
                    "title": "ledgerCloseTime",
                    "description": "The timestamp at which the ledger was closed.",
                    "type": "string"
                  },
                  "headerXdr": {
                    "type": "string",
                    "description": "The [LedgerHeader](https://github.com/stellar/stellar-xdr/blob/v22.0/Stellar-ledger.x#L74) structure for this ledger (base64-encoded string)."
                  },
                  "metadataXdr": {
                    "type": "string",
                    "description": "The [LedgerCloseMeta](https://github.com/stellar/stellar-xdr/blob/v22.0/Stellar-ledger.x#L539) union for this ledger (base64-encoded string)."
                  }
                }
              }
            },
            "latestLedger": {
              "title": "latestLedger",
              "description": "The sequence number of the latest ledger known to Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "latestLedgerCloseTime": {
              "title": "latestLedgerCloseTime",
              "description": "The unix timestamp of the close time of the latest ledger known to Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "oldestLedger": {
              "title": "oldestLedger",
              "description": "The sequence number of the oldest ledger ingested by Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "oldestLedgerCloseTime": {
              "title": "oldestLedgerCloseTime",
              "description": "The unix timestamp of the close time of the oldest ledger ingested by Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "cursor": {
              "title": "cursor",
              "type": "string",
              "description": "A token which can be included in a subsequent request to obtain the next page of results."
            }
          }
        }
      },
      "examples": [
        {
          "name": "Successful getLedgers Request",
          "description": "Query a list of ledgers starting from the given startLedger.",
          "params": [
            {
              "name": "startLedger",
              "value": 36233
            },
            {
              "name": "pagination",
              "value": {
                "limit": 2
              }
            }
          ],
          "result": {
            "name": "getLedgersResult",
            "value": {
              "ledgers": [
                {
                  "hash": "434de11b427aa4b6f8cda259ac2111a6aa148d2ab6b4c7affe864e94a9f4bd80",
                  "sequence": 36233,
                  "ledgerCloseTime": "1734032457",
                  "headerXdr": "Q03hG0J6pLb4zaJZrCERpqoUjSq2tMev/oZOlKn0vYAAAAAWY6AkQmSfV+Rrnpq308LrTR1IZq7dUQr4HkNPlpDpw4/4WH/HGddpIrl1KZiCUKzFOi9sqkX+b56aTGNqhTRHtwAAAABnWzxJAAAAAAAAAAEAAAAAqCTNGLyddQZNKZpbW6ykO8OqLzJpOBU9jC+btctt8DMAAABAjksBzacOp2IR06utjCmZ0QR6kgidREHCceghZapmZdNrS1uBiBG8Zz5Eh7uxMga5IAHPVbkSgFgXzjwRk4i2At8/YZgEqS/bQFcZLcQ910jqd4rcUrxJjOgFJMAUuBEZkxHVMCvc1iIZj7nTD2d91KT24H9FpOIGJLSiTuwys+0AAI2JDeC2s6dkAAAAAAAIewDXaQAAAAAAAAAAAAAB3wAAAGQATEtAAAAAyESlcNBlpidDCvLHH8Nu1MWDHWwUXTfbvGKqvbvlzzrb2GJe+2UfU8rr8mWrJXRTcQhl5UYgKhOQUOWP1nWgbp4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
                  "metadataXdr": "AAAAAQAAAABDTeEbQnqktvjNolmsIRGmqhSNKra0x6/+hk6UqfS9gAAAABZjoCRCZJ9X5GuemrfTwutNHUhmrt1RCvgeQ0+WkOnDj/hYf8cZ12kiuXUpmIJQrMU6L2yqRf5vnppMY2qFNEe3AAAAAGdbPEkAAAAAAAAAAQAAAACoJM0YvJ11Bk0pmltbrKQ7w6ovMmk4FT2ML5u1y23wMwAAAECOSwHNpw6nYhHTq62MKZnRBHqSCJ1EQcJx6CFlqmZl02tLW4GIEbxnPkSHu7EyBrkgAc9VuRKAWBfOPBGTiLYC3z9hmASpL9tAVxktxD3XSOp3itxSvEmM6AUkwBS4ERmTEdUwK9zWIhmPudMPZ33UpPbgf0Wk4gYktKJO7DKz7QAAjYkN4Lazp2QAAAAAAAh7ANdpAAAAAAAAAAAAAAHfAAAAZABMS0AAAADIRKVw0GWmJ0MK8scfw27UxYMdbBRdN9u8Yqq9u+XPOtvYYl77ZR9TyuvyZasldFNxCGXlRiAqE5BQ5Y/WdaBungAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFjoCRCZJ9X5GuemrfTwutNHUhmrt1RCvgeQ0+WkOnDjwAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVBewAAAAAAAAAAA=="
                },
                {
                  "hash": "201f38ca43cfad09d00287ee70d77edc8c88a61e018683fd466e71688222a217",
                  "sequence": 36234,
                  "ledgerCloseTime": "1734032462",
                  "headerXdr": "IB84ykPPrQnQAofucNd+3IyIph4BhoP9Rm5xaIIiohcAAAAWQ03hG0J6pLb4zaJZrCERpqoUjSq2tMev/oZOlKn0vYB8UE9ZJ4uLDnIu/g7+08D/eYnJjrJD07fGpWaVoLi29wAAAABnWzxOAAAAAAAAAAEAAAAAtV0Qsrt9KE7VwDpHpeG1kMkPV4NVRxzEUHu+ggTSPIsAAABAN6Cc3KxXPM2WmFDtY/yPZM0aha2yhnHFBDaliMqO6BzVQMb9Zlq5DoGrLr/xoFOp8YJ3RjLedF8w/KfN3ogPBuzRjPABveSt1CvvmDdnwUpSXyUsjdjECdbpjuKxaZZR+NeVPfeYT06qs2v4JwBff4WWpIGwEXPcxq3tZKuekH8AAI2KDeC2s6dkAAAAAAAIewDaiQAAAAAAAAAAAAAB3wAAAGQATEtAAAAAyESlcNBlpidDCvLHH8Nu1MWDHWwUXTfbvGKqvbvlzzrb2GJe+2UfU8rr8mWrJXRTcQhl5UYgKhOQUOWP1nWgbp4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=",
                  "metadataXdr": "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"
                }
              ],
              "latestLedger": 36379,
              "latestLedgerCloseTime": 1734033188,
              "oldestLedger": 29312,
              "oldestLedgerCloseTime": 1733997822,
              "cursor": "36234"
            }
          }
        }
      ]
    },
    {
      "name": "getNetwork",
      "summary": "returns network config",
      "description": "General information about the currently configured network. This response will contain all the information needed to successfully submit transactions to the network this node serves.",
      "externalDocs": {
        "url": "https://developers.stellar.org/docs/data/apis/rpc/api-reference/methods/getNetwork"
      },
      "paramStructure": "by-name",
      "params": [],
      "result": {
        "name": "getNetworkResult",
        "schema": {
          "type": "object",
          "required": [
            "passphrase",
            "protocolVersion"
          ],
          "properties": {
            "passphrase": {
              "title": "networkPassphrase",
              "description": "Network passphrase configured for this Stellar RPC node.",
              "type": "string"
            },
            "protocolVersion": {
              "title": "protocolVersion",
              "description": "Stellar Core protocol version associated with the latest ledger.",
              "type": "number"
            },
            "friendbotUrl": {
              "type": "string",
              "description": "(optional) The URL of this network's \"friendbot\" faucet"
            }
          }
        }
      },
      "examples": [
        {
          "name": "Testnet Network Configuration",
          "description": "Example request to the `getNetwork` method for a node connected to the Stellar Testnet network.",
          "params": [],
          "result": {
            "name": "getNetworkResult",
            "value": {
              "friendbotUrl": "https://friendbot-testnet.stellar.org/",
              "passphrase": "Test SDF Network ; September 2015",
              "protocolVersion": 20
            }
          }
        },
        {
          "name": "Futurenet Network Configuration",
          "description": "Example request to the `getNetwork` method for a node connected to the Stellar Futurenet network.",
          "params": [],
          "result": {
            "name": "getNetworkResult",
            "value": {
              "friendbotUrl": "https://friendbot-futurenet.stellar.org/",
              "passphrase": "Test SDF Future Network ; October 2022",
              "protocolVersion": 20
            }
          }
        }
      ]
    },
    {
      "name": "getTransaction",
      "summary": "returns transaction details",
      "description": "The getTransaction method provides details about the specified transaction. Clients are expected to periodically query this method to ascertain when a transaction has been successfully recorded on the blockchain. The stellar-rpc system maintains a restricted history of recently processed transactions, with the default retention window set at 24 hours. For private soroban-rpc instances, it is possible to modify the retention window value by adjusting the transaction-retention-window configuration setting, but we do not recommend values longer than 7 days. For debugging needs that extend beyond this timeframe, it is advisable to index this data yourself, employ a third-party [indexer](https://developers.stellar.org/docs/tools/developer-tools/data-indexers), or query [Hubble](https://developers.stellar.org/docs/data/hubble) (our public BigQuery data set).",
      "externalDocs": {
        "url": "https://developers.stellar.org/docs/data/apis/rpc/api-reference/methods/getTransaction"
      },
      "paramStructure": "by-name",
      "params": [
        {
          "name": "hash",
          "summary": "transaction hash to query",
          "description": "Transaction hash to query as a hex-encoded string. This transaction hash should correspond to transaction that has been previously submitted to the network.",
          "required": true,
          "schema": {
            "title": "hash",
            "type": "string",
            "minLength": 64,
            "maxLength": 64,
            "pattern": "^[a-f\\d]{64}$",
            "description": "Transaction hash (as a hex-encoded string)"
          }
        },
        {
          "name": "xdrFormat",
          "summary": "chooses a response format for XDR fields: 'json' or 'base64'",
          "required": false,
          "description": "Lets the user choose the format in which the response should be returned - either as unpacked JSON or as base64-encoded XDR strings. Note that you should not rely on any schema for the JSON, as it will change when the underlying XDR changes.",
          "schema": {
            "title": "xdrFormat",
            "type": "string",
            "description": "Specifies whether XDR should be encoded as Base64 (default or 'base64') or JSON ('json')."
          }
        }
      ],
      "result": {
        "name": "getTransactionResult",
        "schema": {
          "type": "object",
          "required": [
            "status",
            "latestLedger",
            "latestLedgerCloseTime",
            "oldestLedger",
            "oldestLedgerCloseTime"
          ],
          "properties": {
            "status": {
              "type": "string",
              "description": "The current status of the transaction by hash",
              "enum": [
                "SUCCESS",
                "NOT_FOUND",
                "FAILED"
              ]
            },
            "latestLedger": {
              "title": "latestLedger",
              "description": "The sequence number of the latest ledger known to Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "latestLedgerCloseTime": {
              "title": "latestLedgerCloseTime",
              "description": "The unix timestamp of the close time of the latest ledger known to Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "oldestLedger": {
              "title": "oldestLedger",
              "description": "The sequence number of the oldest ledger ingested by Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "oldestLedgerCloseTime": {
              "title": "oldestLedgerCloseTime",
              "description": "The unix timestamp of the close time of the oldest ledger ingested by Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "ledger": {
              "title": "ledger",
              "description": "(optional) The sequence number of the ledger which included the transaction. This field is only present if `status` is `SUCCESS` or `FAILED`.",
              "type": "number"
            },
            "createdAt": {
              "title": "createdAt",
              "description": "(optional) The unix timestamp of when the transaction was included in the ledger. This field is only present if `status` is `SUCCESS` or `FAILED`.",
              "type": "number"
            },
            "applicationOrder": {
              "type": "number",
              "description": "(optional) The index of the transaction among all transactions included in the ledger. This field is only present if `status` is `SUCCESS` or `FAILED`."
            },
            "feeBump": {
              "type": "boolean",
              "description": "(optional) Indicates whether the transaction was fee bumped. This field is only present if `status` is `SUCCESS` or `FAILED`."
            },
            "envelopeXdr": {
              "type": "string",
              "description": "(optional) A base64 encoded string of the raw TransactionEnvelope XDR struct for this transaction."
            },
            "resultXdr": {
              "type": "string",
              "description": "(optional) A base64 encoded string of the raw TransactionResult XDR struct for this transaction. This field is only present if `status` is `SUCCESS` or `FAILED`."
            },
            "resultMetaXdr": {
              "type": "string",
              "description": "(optional) A base64 encoded string of the raw TransactionMeta XDR struct for this transaction."
            },
            "diagnosticEventsXdr": {
              "type": "array",
              "description": "(optional) A base64 encoded slice of xdr.DiagnosticEvent. This is only present if the `ENABLE_SOROBAN_DIAGNOSTIC_EVENTS` has been enabled on the RPC server.",
              "items": {
                "type": "string"
              }
            },
            "events": {
              "type": "object",
              "description": "Contains all events emitted during transaction execution.\n\n_Note: Available only on Protocol 23+ (currently testnet only)._",
              "properties": {
                "transactionEventsXdr": {
                  "type": "array",
                  "description": "An array of base64-encoded [xdr.TransactionEvent](https://github.com/stellar/stellar-xdr/blob/v23.0/Stellar-ledger.x#L503-L506). These include events such as fees being charged or refunded.",
                  "items": {
                    "type": "string"
                  }
                },
                "contractEventsXdr": {
                  "type": "array",
                  "description": "A nested array of base64-encoded [xdr.ContractEvent](https://github.com/stellar/stellar-xdr/blob/v23.0/Stellar-ledger.x#L371-L390). Each inner array represents the contract events emitted by a single operation within the transaction.",
                  "items": {
                    "type": "array",
                    "description": "Base64-encoded contract events emitted by a single operation within the transaction.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": [
        {
          "name": "Successful Transaction",
          "description": "Query for a transaction hash that returns `SUCCESS` from the RPC node.",
          "params": [
            {
              "name": "hash",
              "summary": "a recent transaction hash",
              "description": "Transaction hash that hit the network recently enough to still be visible through the RPC node.",
              "value": "32f7e5c3afd281fcaa99c0e990adf62f33e3bb341b1641a5c8b0b4a4dc55c487"
            }
          ],
          "result": {
            "name": "getTransactionResult",
            "value": {
              "latestLedger": 490314,
              "latestLedgerCloseTime": "1752722132",
              "oldestLedger": 369355,
              "oldestLedgerCloseTime": "1752115873",
              "status": "SUCCESS",
              "txHash": "32f7e5c3afd281fcaa99c0e990adf62f33e3bb341b1641a5c8b0b4a4dc55c487",
              "applicationOrder": 3,
              "feeBump": false,
              "envelopeXdr": "AAAAAgAAAADuBg+afmvWN9+nlruudR93UO1rDpTe8i6yxgPgBKoBVwExLQAAAA2lAAAfvQAAAAEAAAAAAAAAAAAAAABoeGmwAAAAAAAAAAEAAAABAAAAAO4GD5p+a9Y336eWu651H3dQ7WsOlN7yLrLGA+AEqgFXAAAAGAAAAAAAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAAJc2V0X3ByaWNlAAAAAAAAAgAAABAAAAABAAAACQAAAAoAAAAAAAAAAAAAaahaRp+AAAAACgAAAAAAAAAAAAB5y+SQiwAAAAAKAAAAAAAAAAAAAHFdMEkwAAAAAAoAAAAAAAAAAAAAQkvPyHAAAAAACgAAAAAAAAAAAAAE2U+ba4AAAAAKAAAAAAAAAAAAAAASetIWgAAAAAoAAAAAAAAAAAAAEFgo8D+AAAAACgAAAAAAAAAAAAACzFTXmwAAAAAKAAAAAAAAAAAEoxZECi8uAAAAAAUAAAGYFlw7QAAAAAEAAAAAAAAAAAAAAAGlJx5hXtZLUEEJA9akotOUWIv8dYiEoyuKQmACnKsp1gAAAAlzZXRfcHJpY2UAAAAAAAACAAAAEAAAAAEAAAAJAAAACgAAAAAAAAAAAABpqFpGn4AAAAAKAAAAAAAAAAAAAHnL5JCLAAAAAAoAAAAAAAAAAAAAcV0wSTAAAAAACgAAAAAAAAAAAABCS8/IcAAAAAAKAAAAAAAAAAAAAATZT5trgAAAAAoAAAAAAAAAAAAAABJ60haAAAAACgAAAAAAAAAAAAAQWCjwP4AAAAAKAAAAAAAAAAAAAALMVNebAAAAAAoAAAAAAAAAAASjFkQKLy4AAAAABQAAAZgWXDtAAAAAAAAAAAEAAAAAAAAAAQAAAAfaZ5h4OOy0NoTgqFsSMHHBZ2BWo+ttPZwC2FftqORNwwAAAAoAAAAGAAAAAaUnHmFe1ktQQQkD1qSi05RYi/x1iISjK4pCYAKcqynWAAAACQAAAZgWXDtAAAAAAAAAAAAAAAAAAAAABgAAAAGlJx5hXtZLUEEJA9akotOUWIv8dYiEoyuKQmACnKsp1gAAAAkAAAGYFlw7QAAAAAAAAAABAAAAAAAAAAYAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAAJAAABmBZcO0AAAAAAAAAAAgAAAAAAAAAGAAAAAaUnHmFe1ktQQQkD1qSi05RYi/x1iISjK4pCYAKcqynWAAAACQAAAZgWXDtAAAAAAAAAAAMAAAAAAAAABgAAAAGlJx5hXtZLUEEJA9akotOUWIv8dYiEoyuKQmACnKsp1gAAAAkAAAGYFlw7QAAAAAAAAAAEAAAAAAAAAAYAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAAJAAABmBZcO0AAAAAAAAAABQAAAAAAAAAGAAAAAaUnHmFe1ktQQQkD1qSi05RYi/x1iISjK4pCYAKcqynWAAAACQAAAZgWXDtAAAAAAAAAAAYAAAAAAAAABgAAAAGlJx5hXtZLUEEJA9akotOUWIv8dYiEoyuKQmACnKsp1gAAAAkAAAGYFlw7QAAAAAAAAAAHAAAAAAAAAAYAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAAJAAABmBZcO0AAAAAAAAAACAAAAAAAAAAGAAAAAaUnHmFe1ktQQQkD1qSi05RYi/x1iISjK4pCYAKcqynWAAAAFAAAAAEAmJaAAACcQAAAC7gAAAAAAJiWgAAAAAHMpdlgAAAAQI1Wv1nG8+GPa2KOs99Rc3DPDYwypIPeKBa9Po4AN/VLSkjpqhIf2Tvli73MZYQlVmxsF2dROm2LPlgFPep8ZA0=",
              "resultXdr": "AAAAAAAHNm8AAAAAAAAAAQAAAAAAAAAYAAAAABAjuTEVbQCbk5bRhjZsSNvqYe1R+oSFTzqCtsrEM/Z/AAAAAA==",
              "resultMetaXdr": "",
              "diagnosticEventsXdr": [
                "AAAAAQAAAAAAAAAAAAAAAgAAAAAAAAADAAAADwAAAAdmbl9jYWxsAAAAAA0AAAAgpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAAPAAAACXNldF9wcmljZQAAAAAAABAAAAABAAAAAgAAABAAAAABAAAACQAAAAoAAAAAAAAAAAAAaahaRp+AAAAACgAAAAAAAAAAAAB5y+SQiwAAAAAKAAAAAAAAAAAAAHFdMEkwAAAAAAoAAAAAAAAAAAAAQkvPyHAAAAAACgAAAAAAAAAAAAAE2U+ba4AAAAAKAAAAAAAAAAAAAAASetIWgAAAAAoAAAAAAAAAAAAAEFgo8D+AAAAACgAAAAAAAAAAAAACzFTXmwAAAAAKAAAAAAAAAAAEoxZECi8uAAAAAAUAAAGYFlw7QA==",
                "AAAAAQAAAAAAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAABAAAAAAAAAAMAAAAPAAAACXJlZmxlY3RvcgAAAAAAAA8AAAAGcHJpY2VzAAAAAAAPAAAABnVwZGF0ZQAAAAAAEAAAAAEAAAAJAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADRVVSAAAAAAoAAAAAAAAAAAAAaahaRp+AAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADR0JQAAAAAAoAAAAAAAAAAAAAecvkkIsAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADQ0hGAAAAAAoAAAAAAAAAAAAAcV0wSTAAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADQ0FEAAAAAAoAAAAAAAAAAAAAQkvPyHAAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADTVhOAAAAAAoAAAAAAAAAAAAABNlPm2uAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADQVJTAAAAAAoAAAAAAAAAAAAAABJ60haAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADQlJMAAAAAAoAAAAAAAAAAAAAEFgo8D+AAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADVEhCAAAAAAoAAAAAAAAAAAAAAsxU15sAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADWEFVAAAAAAoAAAAAAAAAAASjFkQKLy4A",
                "AAAAAQAAAAAAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAACAAAAAAAAAAIAAAAPAAAACWZuX3JldHVybgAAAAAAAA8AAAAJc2V0X3ByaWNlAAAAAAAAAQ==",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACnJlYWRfZW50cnkAAAAAAAUAAAAAAAAACw==",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAC3dyaXRlX2VudHJ5AAAAAAUAAAAAAAAACg==",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEGxlZGdlcl9yZWFkX2J5dGUAAAAFAAAAAAAAVzQ=",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEWxlZGdlcl93cml0ZV9ieXRlAAAAAAAABQAAAAAAAAcQ",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADXJlYWRfa2V5X2J5dGUAAAAAAAAFAAAAAAAAApQ=",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADndyaXRlX2tleV9ieXRlAAAAAAAFAAAAAAAAAAA=",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADnJlYWRfZGF0YV9ieXRlAAAAAAAFAAAAAAAAA7A=",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD3dyaXRlX2RhdGFfYnl0ZQAAAAAFAAAAAAAABxA=",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADnJlYWRfY29kZV9ieXRlAAAAAAAFAAAAAAAAU4Q=",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD3dyaXRlX2NvZGVfYnl0ZQAAAAAFAAAAAAAAAAA=",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACmVtaXRfZXZlbnQAAAAAAAUAAAAAAAAAAQ==",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD2VtaXRfZXZlbnRfYnl0ZQAAAAAFAAAAAAAAAvw=",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACGNwdV9pbnNuAAAABQAAAAAASJhK",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACG1lbV9ieXRlAAAABQAAAAAAIRky",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEWludm9rZV90aW1lX25zZWNzAAAAAAAABQAAAAAAFtYx",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD21heF9yd19rZXlfYnl0ZQAAAAAFAAAAAAAAAEA=",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEG1heF9yd19kYXRhX2J5dGUAAAAFAAAAAAAAA7A=",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEG1heF9yd19jb2RlX2J5dGUAAAAFAAAAAAAAU4Q=",
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAE21heF9lbWl0X2V2ZW50X2J5dGUAAAAABQAAAAAAAAL8"
              ],
              "events": {
                "transactionEventsXdr": [
                  "AAAAAAAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAADuBg+afmvWN9+nlruudR93UO1rDpTe8i6yxgPgBKoBVwAAAAoAAAAAAAAAAAAAAAAAmJbk",
                  "AAAAAQAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAADuBg+afmvWN9+nlruudR93UO1rDpTe8i6yxgPgBKoBVwAAAAr/////////////////bp+L"
                ],
                "contractEventsXdr": [
                  [
                    "AAAAAAAAAAGlJx5hXtZLUEEJA9akotOUWIv8dYiEoyuKQmACnKsp1gAAAAEAAAAAAAAAAwAAAA8AAAAJcmVmbGVjdG9yAAAAAAAADwAAAAZwcmljZXMAAAAAAA8AAAAGdXBkYXRlAAAAAAAQAAAAAQAAAAkAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANFVVIAAAAACgAAAAAAAAAAAABpqFpGn4AAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANHQlAAAAAACgAAAAAAAAAAAAB5y+SQiwAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANDSEYAAAAACgAAAAAAAAAAAABxXTBJMAAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANDQUQAAAAACgAAAAAAAAAAAABCS8/IcAAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANNWE4AAAAACgAAAAAAAAAAAAAE2U+ba4AAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANBUlMAAAAACgAAAAAAAAAAAAAAEnrSFoAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANCUkwAAAAACgAAAAAAAAAAAAAQWCjwP4AAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANUSEIAAAAACgAAAAAAAAAAAAACzFTXmwAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANYQVUAAAAACgAAAAAAAAAABKMWRAovLgA="
                  ]
                ]
              },
              "ledger": 490252,
              "createdAt": "1752721821"
            }
          }
        },
        {
          "name": "Not Found Transaction",
          "description": "Query for a transaction hash that returns `NOT_FOUND` from the RPC node.",
          "params": [
            {
              "name": "hash",
              "summary": "an old transaction hash",
              "description": "Transaction has that is old enough for the RPC node to have forgotten about it.",
              "value": "85f7aa8bfda425b98c0e53ffe56796ffd8865ec2fcc3ad71abf120801e2a14e5"
            }
          ],
          "result": {
            "name": "getTransactionResult",
            "value": {
              "status": "NOT_FOUND",
              "latestLedger": 2540099,
              "latestLedgerCloseTime": "1700086455",
              "oldestLedger": 2538660,
              "oldestLedgerCloseTime": "1700078913"
            }
          }
        },
        {
          "name": "Failed Transaction",
          "description": "Query for a transaction hash that returns `FAILED` from the RPC node.",
          "params": [
            {
              "name": "hash",
              "summary": "a failed transaction hash",
              "description": "Transaction hash that failed to be accepted into a ledger.",
              "value": "109cf6170666e15470fb622df4965051ecfea2fee97d8165d072a769ba098b54"
            }
          ],
          "result": {
            "name": "getTransactionResult",
            "value": {
              "latestLedger": 337311,
              "latestLedgerCloseTime": "1751955519",
              "oldestLedger": 337151,
              "oldestLedgerCloseTime": "1751954719",
              "status": "FAILED",
              "txHash": "109cf6170666e15470fb622df4965051ecfea2fee97d8165d072a769ba098b54",
              "applicationOrder": 1,
              "feeBump": false,
              "envelopeXdr": "AAAAAgAAAACPMpUG2Y35WQpR+NuXcgRGJwHPFSb+EdNtFjkCn+tdnQAAAGQAACVsAAAUvQAAAAEAAAAAAAAAAAAAAABobLYnAAAAAQAAAAdwc3A6MTIzAAAAAAEAAAABAAAAALyBL9daiYtaADzcZA8i3U28u/d5KV2Cu3cJTM1hY1NAAAAAAQAAAABiRvI6ZCsMe8e9H61jp3rdooHANhGow7zCN0hK0ncDTgAAAAJBVFVTRAAAAAAAAAAAAAAAZ8rWY3iaDnWNtfpvLpNaCEbKdDjrd2gQODOuKpmj1vMAAAAAALuu4AAAAAAAAAACn+tdnQAAAEDVTl0j8Hsq+XadkzDg6mu9mWjxorxcMThlsvwJTgNTTZmWhbZrUP3btXqQInLTsz39yTgXJRCudxh5c7K235IBYWNTQAAAAEAbI2IDD4atBlqwvn1fH5x3/agOr3ihF/VOSIdZJipgC+mXIYhD/mZxqlQk5QQC5jHAUYm0YWB7Z/sNuw71qVkC",
              "resultXdr": "AAAAAAAAAGT/////AAAAAQAAAAAAAAAB////+wAAAAA=",
              "resultMetaXdr": "AAAABAAAAAAAAAACAAAAAwAFJSgAAAAAAAAAAI8ylQbZjflZClH425dyBEYnAc8VJv4R020WOQKf612dAAAAF0Z0IZQAACVsAAAUvAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAMAAAAAAAUk7gAAAABobLTKAAAAAAAAAAEABSUoAAAAAAAAAACPMpUG2Y35WQpR+NuXcgRGJwHPFSb+EdNtFjkCn+tdnQAAABdGdCGUAAAlbAAAFL0AAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAADAAAAAAAFJSgAAAAAaGy17AAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAACPMpUG2Y35WQpR+NuXcgRGJwHPFSb+EdNtFjkCn+tdnQAAAAoAAAAAAAAAAAAAAAAAAABkAAAAAA==",
              "events": {
                "transactionEventsXdr": [
                  "AAAAAAAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAACPMpUG2Y35WQpR+NuXcgRGJwHPFSb+EdNtFjkCn+tdnQAAAAoAAAAAAAAAAAAAAAAAAABk"
                ]
              },
              "ledger": 337192,
              "createdAt": "1751954924"
            }
          }
        }
      ]
    },
    {
      "name": "getTransactions",
      "summary": "returns a list of transactions with their details",
      "description": "The `getTransactions` method return a detailed list of transactions starting from the user specified starting point that you can paginate as long as the pages fall within the history retention of their corresponding RPC provider.",
      "externalDocs": {
        "url": "https://developers.stellar.org/docs/data/apis/rpc/api-reference/methods/getTransactions"
      },
      "paramStructure": "by-name",
      "params": [
        {
          "name": "startLedger",
          "summary": "ledger to begin searching from",
          "description": "Ledger sequence number to start fetching responses from (inclusive). This method will return an error if `startLedger` is less than the oldest ledger stored in this node, or greater than the latest ledger seen by this node. If a cursor is included in the request, `startLedger` must be omitted.",
          "required": false,
          "schema": {
            "title": "ledgerSequence",
            "description": "Sequence number of the ledger.",
            "type": "number"
          }
        },
        {
          "name": "pagination",
          "summary": "pagination options",
          "description": "Pagination in stellar-rpc is similar to pagination in Horizon. See [Pagination](https://developers.stellar.org/docs/data/rpc/api-reference/structure/pagination).",
          "required": false,
          "schema": {
            "type": "object",
            "required": [],
            "properties": {
              "cursor": {
                "type": "string",
                "description": "An opaque string which acts as a paging token. To obtain the next page of results occurring after a given response set this value to the `cursor` field of the response."
              },
              "limit": {
                "type": "number",
                "description": "The maximum number of records returned. The limit for getEvents can range from 1 to 10000 - an upper limit that is hardcoded in Stellar-RPC for performance reasons. If this argument isn't designated, it defaults to 100."
              }
            }
          }
        },
        {
          "name": "xdrFormat",
          "summary": "chooses a response format for XDR fields: 'json' or 'base64'",
          "required": false,
          "description": "Lets the user choose the format in which the response should be returned - either as unpacked JSON or as base64-encoded XDR strings. Note that you should not rely on any schema for the JSON, as it will change when the underlying XDR changes.",
          "schema": {
            "title": "xdrFormat",
            "type": "string",
            "description": "Specifies whether XDR should be encoded as Base64 (default or 'base64') or JSON ('json')."
          }
        }
      ],
      "result": {
        "name": "getTransactionsResult",
        "schema": {
          "type": "object",
          "properties": {
            "transactions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Indicates whether the transaction was successful or not."
                  },
                  "applicationOrder": {
                    "type": "number",
                    "description": "The 1-based index of the transaction among all transactions included in the ledger."
                  },
                  "feeBump": {
                    "type": "boolean",
                    "description": "Indicates whether the transaction was fee bumped."
                  },
                  "envelopeXdr": {
                    "type": "string",
                    "description": "The [TransactionEnvelope](https://github.com/stellar/stellar-xdr/blob/v22.0/Stellar-transaction.x#L1009) structure for this transaction (base64-encoded string)."
                  },
                  "resultXdr": {
                    "type": "string",
                    "description": "The [TransactionResult](https://github.com/stellar/stellar-xdr/blob/v22.0/Stellar-transaction.x#L2088) structure for this transaction (base64-encoded string)."
                  },
                  "resultMetaXdr": {
                    "type": "string",
                    "description": "The [TransactionResultMeta](L446https://github.com/stellar/stellar-xdr/blob/v22.0/Stellar-ledger.x#L461) structure for this transaction (base64-encoded string)."
                  },
                  "diagnosticEventsXdr": {
                    "type": "array",
                    "description": "(optional) A base64 encoded slice of xdr.DiagnosticEvent. This is only present if the `ENABLE_SOROBAN_DIAGNOSTIC_EVENTS` has been enabled on the RPC server.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "events": {
                    "type": "object",
                    "description": "Contains all events emitted during transaction execution.\n\n_Note: Available only on Protocol 23+ (currently testnet only)._",
                    "properties": {
                      "transactionEventsXdr": {
                        "type": "array",
                        "description": "An array of base64-encoded [xdr.TransactionEvent](https://github.com/stellar/stellar-xdr/blob/v23.0/Stellar-ledger.x#L503-L506). These include events such as fees being charged or refunded.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "contractEventsXdr": {
                        "type": "array",
                        "description": "A nested array of base64-encoded [xdr.ContractEvent](https://github.com/stellar/stellar-xdr/blob/v23.0/Stellar-ledger.x#L371-L390). Each inner array represents the contract events emitted by a single operation within the transaction.",
                        "items": {
                          "type": "array",
                          "description": "Base64-encoded contract events emitted by a single operation within the transaction.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "ledger": {
                    "title": "ledger",
                    "description": "The sequence number of the ledger which included the transaction.",
                    "type": "number"
                  },
                  "createdAt": {
                    "title": "createdAt",
                    "description": "The unix timestamp of when the transaction was included in the ledger.",
                    "type": "number"
                  }
                }
              }
            },
            "latestLedger": {
              "title": "latestLedger",
              "description": "The sequence number of the latest ledger known to Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "latestLedgerCloseTimestamp": {
              "title": "latestLedgerCloseTime",
              "description": "The unix timestamp of the close time of the latest ledger known to Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "oldestLedger": {
              "title": "oldestLedger",
              "description": "The sequence number of the oldest ledger ingested by Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "oldestLedgerCloseTimestamp": {
              "title": "oldestLedgerCloseTime",
              "description": "The unix timestamp of the close time of the oldest ledger ingested by Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "cursor": {
              "title": "cursor",
              "type": "string",
              "description": "A token which can be included in a subsequent request to obtain the next page of results."
            }
          }
        }
      },
      "examples": [
        {
          "name": "Successful getTransactions Request",
          "description": "Query a list of transactions starting from the given startLedger.",
          "params": [
            {
              "name": "startLedger",
              "value": 337272
            },
            {
              "name": "pagination",
              "value": {
                "limit": 5
              }
            }
          ],
          "result": {
            "name": "getTransactionsResult",
            "value": {
              "transactions": [
                {
                  "status": "FAILED",
                  "txHash": "173d6022f8db9654f31c5aa53785385b913ed32baf8ee72f984b97a97bb0909b",
                  "applicationOrder": 1,
                  "feeBump": true,
                  "envelopeXdr": "AAAABQAAAAADKm0xr8jnLz7gKYk/CQg7DF6nkVnJNErPGZcXNDs4RwAAAAAB2j5AAAAAAgAAAAC/JkamGjlv1kc1tD/C4dJaB6vxgIfnQRZNEIndZH9mjAAAAAAAAEXVAAACNgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAABAAAAAAMqbTGvyOcvPuApiT8JCDsMXqeRWck0Ss8Zlxc0OzhHAAAAEAAAAACWzQF4RyG733Ul+cJlgJ6N6SBHVKLGfBpdDzTLMleEBQAAAAEAAAAAAyptMa/I5y8+4CmJPwkIOwxep5FZyTRKzxmXFzQ7OEcAAAAAAAAAAJbNAXhHIbvfdSX5wmWAno3pIEdUosZ8Gl0PNMsyV4QFAAAAAAAAAAAAAAABAAAAAJbNAXhHIbvfdSX5wmWAno3pIEdUosZ8Gl0PNMsyV4QFAAAABgAAAAFVU0RDAAAAAEI+fQXy7K+/7BkrIVo/G+lq7bjY5wJUq+NBPgIH3layf/////////8AAAABAAAAAJbNAXhHIbvfdSX5wmWAno3pIEdUosZ8Gl0PNMsyV4QFAAAAEQAAAAEAAAAAAyptMa/I5y8+4CmJPwkIOwxep5FZyTRKzxmXFzQ7OEcAAAABAAAAAJbNAXhHIbvfdSX5wmWAno3pIEdUosZ8Gl0PNMsyV4QFAAAAAVVTREMAAAAAQj59BfLsr7/sGSshWj8b6WrtuNjnAlSr40E+AgfeVrIAAAJMmJoCQAAAAAEAAAAAls0BeEchu991JfnCZYCejekgR1SixnwaXQ80yzJXhAUAAAABAAAAAAMqbTGvyOcvPuApiT8JCDsMXqeRWck0Ss8Zlxc0OzhHAAAAAVVTREMAAAAAQj59BfLsr7/sGSshWj8b6WrtuNjnAlSr40E+AgfeVrIAAAAAAJiWgAAAAAAAAAADNDs4RwAAAEBsY9JUoAwafnGojQcckXcOvght/skV5TLDkGYEZFgcoaofnRtEPJg1H9n6xI2rUPEldp6sTytYzSw+nAi/LbUMZH9mjAAAAEBVWIRriJF27OqY/hS5VOvO8Swbw4HjBiPzrffwZ5xq7RqYEpx4OOmbl94jj9Cdp93lyToIiH8jFJaSkQXPtGkPMleEBQAAAEB8ExSUA9xbTum5cKoarWfhgv3JX01GzddCsF/IhXgIb83AtTbIq6NrUjYHcgoID4JjiOMJcft0dUJa/EeEE7sEAAAAAAAAAAE0OzhHAAAAQPNXa7NgKAPG5/U0iJYvefDToAH9jgo8FYT7q3mYqAF0uZrlZaIYo/X18DSd36dHzRhvr1UuLYkstu2u9y3ScQY=",
                  "resultXdr": "AAAAAAAAArz////zu2AmCJI31SmmC6qXjcwfYgsaCyTb4enG267b6IADUC8AAAAAAAAAAP////8AAAAGAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAAAAAAAAAAABEAAAAAAAAAAAAAAAH////+AAAAAAAAAAH////+AAAAAAAAAAA=",
                  "resultMetaXdr": "AAAABAAAAAAAAAAEAAAAAwAFJXgAAAAAAAAAAAMqbTGvyOcvPuApiT8JCDsMXqeRWck0Ss8Zlxc0OzhHAAAALpDfahAAAAktAAAAAQAAAAEAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAABHAAAAAAAAAAMAAAAAAAAJLgAAAABoUyJqAAAAAAAAAAEABSV4AAAAAAAAAAADKm0xr8jnLz7gKYk/CQg7DF6nkVnJNErPGZcXNDs4RwAAAC6Q32oQAAAJLQAAAAEAAAABAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAARwAAAAAAAAADAAAAAAAACS4AAAAAaFMiagAAAAAAAAADAAUivAAAAAAAAAAAvyZGpho5b9ZHNbQ/wuHSWger8YCH50EWTRCJ3WR/ZowAAAAXSHbnnAAARdUAAAI1AAAAAQAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAwAAAAAABSK8AAAAAGhsqc4AAAAAAAAAAQAFJXgAAAAAAAAAAL8mRqYaOW/WRzW0P8Lh0loHq/GAh+dBFk0Qid1kf2aMAAAAF0h255wAAEXVAAACNgAAAAEAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAMAAAAAAAUleAAAAABobLd8AAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAHXkotywnA8z+r365/0701QSlWouXn8m0UOoshCtNHOYQAAAAEAAAAAAAAAAgAAAA8AAAADZmVlAAAAABIAAAAAAAAAAAMqbTGvyOcvPuApiT8JCDsMXqeRWck0Ss8Zlxc0OzhHAAAACgAAAAAAAAAAAAAAAAAAArwAAAAA",
                  "events": {
                    "transactionEventsXdr": [
                      "AAAAAAAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAAADKm0xr8jnLz7gKYk/CQg7DF6nkVnJNErPGZcXNDs4RwAAAAoAAAAAAAAAAAAAAAAAAAK8"
                    ]
                  },
                  "ledger": 337272,
                  "createdAt": 1751955324
                },
                {
                  "status": "SUCCESS",
                  "txHash": "973699dbd48afb3c81b796edce895aebe0023bbf250a6a2abd00086e5c94ab84",
                  "applicationOrder": 2,
                  "feeBump": false,
                  "envelopeXdr": "AAAAAgAAAACFivUlMyXwtcfYryl8RvpJ9Z5pRzP1+x7CbLyW3pnYDgAPQkAAAMdKAAABqAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAABB90WssODNIgi6BHveqzxTRmIpvAFRyVNM+Hm2GVuCcAAAAAAAAAADtlCZZ5vMl+JUtJJAOPYwB9hb3stEZIjMkJ2yf2ghFPAAAABdIdugAAAAAAAAAAALemdgOAAAAQE5e8FMYtuh/E8YR+eMTlnsJ3oj9Fr9KvhZnRW/bFXIeQybZwxYoQoVLjMAwHvAFqCGE/yFJOipMyPBVDvDxpA+GVuCcAAAAQLjToPzfn0kYZaepMnJbaFbMcG2f8OrD8NxOTK0peGXaIeuLsPTxRms6NuKedhzKqgCnpyMOwxm4u838aw2vdww=",
                  "resultXdr": "AAAAAAAAAGQAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA=",
                  "resultMetaXdr": "AAAABAAAAAAAAAACAAAAAwAFJXgAAAAAAAAAAIWK9SUzJfC1x9ivKXxG+kn1nmlHM/X7HsJsvJbemdgOAAAAACyz13AAAMdKAAABpwAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAMAAAAAAAUGFgAAAABobBpyAAAAAAAAAAEABSV4AAAAAAAAAACFivUlMyXwtcfYryl8RvpJ9Z5pRzP1+x7CbLyW3pnYDgAAAAAss9dwAADHSgAAAagAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAADAAAAAAAFJXgAAAAAaGy3fAAAAAAAAAABAAAAAAAAAAMAAAADAAUlbAAAAAAAAAAAEH3Rayw4M0iCLoEe96rPFNGYim8AVHJU0z4ebYZW4JwBol77S/sJ1AAAAF8AAADIAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAwAAAAAAAMdRAAAAAGhW2rkAAAAAAAAAAQAFJXgAAAAAAAAAABB90WssODNIgi6BHveqzxTRmIpvAFRyVNM+Hm2GVuCcAaJe5AOEIdQAAABfAAAAyAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAMAAAAAAADHUQAAAABoVtq5AAAAAAAAAAAABSV4AAAAAAAAAADtlCZZ5vMl+JUtJJAOPYwB9hb3stEZIjMkJ2yf2ghFPAAAABdIdugAAAUleAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAdeSi3LCcDzP6vfrn/TvTVBKVai5efybRQ6iyEK00c5hAAAAAQAAAAAAAAAEAAAADwAAAAh0cmFuc2ZlcgAAABIAAAAAAAAAABB90WssODNIgi6BHveqzxTRmIpvAFRyVNM+Hm2GVuCcAAAAEgAAAAAAAAAA7ZQmWebzJfiVLSSQDj2MAfYW97LRGSIzJCdsn9oIRTwAAAAOAAAABm5hdGl2ZQAAAAAACgAAAAAAAAAAAAAAF0h26AAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAHXkotywnA8z+r365/0701QSlWouXn8m0UOoshCtNHOYQAAAAEAAAAAAAAAAgAAAA8AAAADZmVlAAAAABIAAAAAAAAAAIWK9SUzJfC1x9ivKXxG+kn1nmlHM/X7HsJsvJbemdgOAAAACgAAAAAAAAAAAAAAAAAAAGQAAAAA",
                  "events": {
                    "transactionEventsXdr": [
                      "AAAAAAAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAACFivUlMyXwtcfYryl8RvpJ9Z5pRzP1+x7CbLyW3pnYDgAAAAoAAAAAAAAAAAAAAAAAAABk"
                    ],
                    "contractEventsXdr": [
                      [
                        "AAAAAAAAAAHXkotywnA8z+r365/0701QSlWouXn8m0UOoshCtNHOYQAAAAEAAAAAAAAABAAAAA8AAAAIdHJhbnNmZXIAAAASAAAAAAAAAAAQfdFrLDgzSIIugR73qs8U0ZiKbwBUclTTPh5thlbgnAAAABIAAAAAAAAAAO2UJlnm8yX4lS0kkA49jAH2Fvey0RkiMyQnbJ/aCEU8AAAADgAAAAZuYXRpdmUAAAAAAAoAAAAAAAAAAAAAABdIdugA"
                      ]
                    ]
                  },
                  "ledger": 337272,
                  "createdAt": 1751955324
                },
                {
                  "status": "SUCCESS",
                  "txHash": "755b48791d7b1b7c4f68675e78ba5167162133b0873949235e81006a21dd52cd",
                  "applicationOrder": 3,
                  "feeBump": false,
                  "envelopeXdr": "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",
                  "resultXdr": "AAAAAAALMtUAAAAAAAAAAQAAAAAAAAAYAAAAANnVLpUIC01nXOWYpLQG/4W2uDzPwAmGLu9KQjrgOClAAAAAAA==",
                  "resultMetaXdr": "",
                  "diagnosticEventsXdr": [
                    "AAAAAQAAAAAAAAAAAAAAAgAAAAAAAAADAAAADwAAAAdmbl9jYWxsAAAAAA0AAAAgsOykTnm3xa4Q+3XMXCz61+1H7mszs3rZADDw9dhTmJgAAAAPAAAACXNldF9wcmljZQAAAAAAABAAAAABAAAAAgAAABAAAAABAAAAEAAAAAoAAAAAAAAAAJYxZhBWnlZ3AAAACgAAAAAAAAAAA4svb21d+NMAAAAKAAAAAAAAAAAAAFrzF8WOngAAAAoAAAAAAAAAAAAAzlZJvDSrAAAACgAAAAAAAAAAADUZdnd4hHsAAAAKAAAAAAAAAAAAAFryNi8g1QAAAAoAAAAAAAAAAAAANFak+TXaAAAACgAAAAAAAAAAAAZXAiMM0PQAAAAKAAAAAAAAAAAAATClyfjScwAAAAoAAAAAAAAAAAAAEPEKMAkQAAAACgAAAAAAAAAAAAS7lEpZRkoAAAAKAAAAAAAAAAAAAFrzEHpAAAAAAAoAAAAAAAAAAAABboY05/qTAAAACgAAAAAAAAAAAAAWjvy21H4AAAAKAAAAAAAAAAAAAqUWLpOXrgAAAAoAAAAAAAAAAAAAarh2TTl4AAAABQAAAZforF6g",
                    "AAAAAQAAAAAAAAABsOykTnm3xa4Q+3XMXCz61+1H7mszs3rZADDw9dhTmJgAAAABAAAAAAAAAAMAAAAPAAAACXJlZmxlY3RvcgAAAAAAAA8AAAAGcHJpY2VzAAAAAAAPAAAABnVwZGF0ZQAAAAAAEAAAAAEAAAAQAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADQlRDAAAAAAoAAAAAAAAAAJYxZhBWnlZ3AAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADRVRIAAAAAAoAAAAAAAAAAAOLL29tXfjTAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAAEVVNEVAAAAAoAAAAAAAAAAAAAWvMXxY6eAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADWFJQAAAAAAoAAAAAAAAAAAAAzlZJvDSrAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADU09MAAAAAAoAAAAAAAAAAAA1GXZ3eIR7AAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAAEVVNEQwAAAAoAAAAAAAAAAAAAWvI2LyDVAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADQURBAAAAAAoAAAAAAAAAAAAANFak+TXaAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAAEQVZBWAAAAAoAAAAAAAAAAAAGVwIjDND0AAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADRE9UAAAAAAoAAAAAAAAAAAABMKXJ+NJzAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAAFTUFUSUMAAAAAAAAKAAAAAAAAAAAAABDxCjAJEAAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAFT3RoZXIAAAAAAAAPAAAABExJTksAAAAKAAAAAAAAAAAABLuUSllGSgAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAFT3RoZXIAAAAAAAAPAAAAA0RBSQAAAAAKAAAAAAAAAAAAAFrzEHpAAAAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAFT3RoZXIAAAAAAAAPAAAABEFUT00AAAAKAAAAAAAAAAAAAW6GNOf6kwAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAFT3RoZXIAAAAAAAAPAAAAA1hMTQAAAAAKAAAAAAAAAAAAABaO/LbUfgAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAFT3RoZXIAAAAAAAAPAAAAA1VOSQAAAAAKAAAAAAAAAAAAAqUWLpOXrgAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAFT3RoZXIAAAAAAAAPAAAABEVVUkMAAAAKAAAAAAAAAAAAAGq4dk05eA==",
                    "AAAAAQAAAAAAAAABsOykTnm3xa4Q+3XMXCz61+1H7mszs3rZADDw9dhTmJgAAAACAAAAAAAAAAIAAAAPAAAACWZuX3JldHVybgAAAAAAAA8AAAAJc2V0X3ByaWNlAAAAAAAAAQ==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACnJlYWRfZW50cnkAAAAAAAUAAAAAAAAAEg==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAC3dyaXRlX2VudHJ5AAAAAAUAAAAAAAAAEQ==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEGxlZGdlcl9yZWFkX2J5dGUAAAAFAAAAAAAAWOA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEWxlZGdlcl93cml0ZV9ieXRlAAAAAAAABQAAAAAAAAtc",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADXJlYWRfa2V5X2J5dGUAAAAAAAAFAAAAAAAABFQ=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADndyaXRlX2tleV9ieXRlAAAAAAAFAAAAAAAAAAA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADnJlYWRfZGF0YV9ieXRlAAAAAAAFAAAAAAAABVw=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD3dyaXRlX2RhdGFfYnl0ZQAAAAAFAAAAAAAAC1w=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADnJlYWRfY29kZV9ieXRlAAAAAAAFAAAAAAAAU4Q=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD3dyaXRlX2NvZGVfYnl0ZQAAAAAFAAAAAAAAAAA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACmVtaXRfZXZlbnQAAAAAAAUAAAAAAAAAAQ==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD2VtaXRfZXZlbnRfYnl0ZQAAAAAFAAAAAAAABPg=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACGNwdV9pbnNuAAAABQAAAAAAUVs1",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACG1lbV9ieXRlAAAABQAAAAAAI+WH",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEWludm9rZV90aW1lX25zZWNzAAAAAAAABQAAAAAAJjL5",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD21heF9yd19rZXlfYnl0ZQAAAAAFAAAAAAAAAEA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEG1heF9yd19kYXRhX2J5dGUAAAAFAAAAAAAABVw=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEG1heF9yd19jb2RlX2J5dGUAAAAFAAAAAAAAU4Q=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAE21heF9lbWl0X2V2ZW50X2J5dGUAAAAABQAAAAAAAAT4"
                  ],
                  "events": {
                    "transactionEventsXdr": [
                      "AAAAAAAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAABpUTPXPvN3+8v2Cl+6qDXlDqQ6ktoudhowSiMNBqhZngAAAAoAAAAAAAAAAAAAAAAAmJbk",
                      "AAAAAQAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAABpUTPXPvN3+8v2Cl+6qDXlDqQ6ktoudhowSiMNBqhZngAAAAr/////////////////cpvx"
                    ],
                    "contractEventsXdr": [
                      [
                        "AAAAAAAAAAGw7KROebfFrhD7dcxcLPrX7UfuazOzetkAMPD12FOYmAAAAAEAAAAAAAAAAwAAAA8AAAAJcmVmbGVjdG9yAAAAAAAADwAAAAZwcmljZXMAAAAAAA8AAAAGdXBkYXRlAAAAAAAQAAAAAQAAABAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANCVEMAAAAACgAAAAAAAAAAljFmEFaeVncAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANFVEgAAAAACgAAAAAAAAAAA4svb21d+NMAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAARVU0RUAAAACgAAAAAAAAAAAABa8xfFjp4AAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANYUlAAAAAACgAAAAAAAAAAAADOVkm8NKsAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANTT0wAAAAACgAAAAAAAAAAADUZdnd4hHsAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAARVU0RDAAAACgAAAAAAAAAAAABa8jYvINUAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANBREEAAAAACgAAAAAAAAAAAAA0VqT5NdoAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAARBVkFYAAAACgAAAAAAAAAAAAZXAiMM0PQAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANET1QAAAAACgAAAAAAAAAAAAEwpcn40nMAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAAVNQVRJQwAAAAAAAAoAAAAAAAAAAAAAEPEKMAkQAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAAETElOSwAAAAoAAAAAAAAAAAAEu5RKWUZKAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADREFJAAAAAAoAAAAAAAAAAAAAWvMQekAAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAAEQVRPTQAAAAoAAAAAAAAAAAABboY05/qTAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADWExNAAAAAAoAAAAAAAAAAAAAFo78ttR+AAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADVU5JAAAAAAoAAAAAAAAAAAACpRYuk5euAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAAERVVSQwAAAAoAAAAAAAAAAAAAarh2TTl4"
                      ]
                    ]
                  },
                  "ledger": 337272,
                  "createdAt": 1751955324
                },
                {
                  "status": "SUCCESS",
                  "txHash": "5686dc3df8ef0b7af08edcf9cc2eecca90fdbab99626117770e46e0042efddcb",
                  "applicationOrder": 4,
                  "feeBump": false,
                  "envelopeXdr": "AAAAAgAAAACWDRNrgN4HpWfA2B7H3QSMtt7GSK/J3/cH+i/Waf406QExLQAAAA1qAAAVxAAAAAEAAAAAAAAAAAAAAABobLeMAAAAAAAAAAEAAAABAAAAAJYNE2uA3gelZ8DYHsfdBIy23sZIr8nf9wf6L9Zp/jTpAAAAGAAAAAAAAAABKrf0Z9GS/LKu+hOOCq4fWWIWaS1ePWMaLC7oHiY6uD8AAAAJc2V0X3ByaWNlAAAAAAAAAgAAABAAAAABAAAABwAAAAoAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAAAAAAAAAAAFAjvQXUAAAAKAAAAAAAAAAAAAFry4TaWFwAAAAoAAAAAAAAAAAAAABlwHrujAAAACgAAAAAAAAAAAAAACkGhPLUAAAAKAAAAAAAAAAAAAAASRzQWKwAAAAoAAAAAAAAAAAAAYLyUqAn+AAAABQAAAZforF6gAAAAAQAAAAAAAAAAAAAAASq39GfRkvyyrvoTjgquH1liFmktXj1jGiwu6B4mOrg/AAAACXNldF9wcmljZQAAAAAAAAIAAAAQAAAAAQAAAAcAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAAAAAAAAAAABQI70F1AAAACgAAAAAAAAAAAABa8uE2lhcAAAAKAAAAAAAAAAAAAAAZcB67owAAAAoAAAAAAAAAAAAAAApBoTy1AAAACgAAAAAAAAAAAAAAEkc0FisAAAAKAAAAAAAAAAAAAGC8lKgJ/gAAAAUAAAGX6KxeoAAAAAAAAAABAAAAAAAAAAEAAAAH2meYeDjstDaE4KhbEjBxwWdgVqPrbT2cAthX7ajkTcMAAAAHAAAABgAAAAEqt/Rn0ZL8sq76E44Krh9ZYhZpLV49YxosLugeJjq4PwAAAAkAAAGX6KxeoAAAAAAAAAABAAAAAAAAAAYAAAABKrf0Z9GS/LKu+hOOCq4fWWIWaS1ePWMaLC7oHiY6uD8AAAAJAAABl+isXqAAAAAAAAAAAgAAAAAAAAAGAAAAASq39GfRkvyyrvoTjgquH1liFmktXj1jGiwu6B4mOrg/AAAACQAAAZforF6gAAAAAAAAAAMAAAAAAAAABgAAAAEqt/Rn0ZL8sq76E44Krh9ZYhZpLV49YxosLugeJjq4PwAAAAkAAAGX6KxeoAAAAAAAAAAEAAAAAAAAAAYAAAABKrf0Z9GS/LKu+hOOCq4fWWIWaS1ePWMaLC7oHiY6uD8AAAAJAAABl+isXqAAAAAAAAAABQAAAAAAAAAGAAAAASq39GfRkvyyrvoTjgquH1liFmktXj1jGiwu6B4mOrg/AAAACQAAAZforF6gAAAAAAAAAAYAAAAAAAAABgAAAAEqt/Rn0ZL8sq76E44Krh9ZYhZpLV49YxosLugeJjq4PwAAABQAAAABAIlUQAAAnEAAAAu4AAAAAACYloAAAAABzKXZYAAAAEAiyeOyFuBoelRjU2uOG6W0J9jAVHsbNazj9Mu4AVSVGIQQGG1UhoGHvx2vNk2J+MYaK51j/FKuFa8tUgxZ3TsD",
                  "resultXdr": "AAAAAAAFp24AAAAAAAAAAQAAAAAAAAAYAAAAABZiId17tj6HU0cnDSIf44RCQvx4Ze+9PZivYVpJrS/TAAAAAA==",
                  "resultMetaXdr": "",
                  "diagnosticEventsXdr": [
                    "AAAAAQAAAAAAAAAAAAAAAgAAAAAAAAADAAAADwAAAAdmbl9jYWxsAAAAAA0AAAAgKrf0Z9GS/LKu+hOOCq4fWWIWaS1ePWMaLC7oHiY6uD8AAAAPAAAACXNldF9wcmljZQAAAAAAABAAAAABAAAAAgAAABAAAAABAAAABwAAAAoAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAAAAAAAAAAAFAjvQXUAAAAKAAAAAAAAAAAAAFry4TaWFwAAAAoAAAAAAAAAAAAAABlwHrujAAAACgAAAAAAAAAAAAAACkGhPLUAAAAKAAAAAAAAAAAAAAASRzQWKwAAAAoAAAAAAAAAAAAAYLyUqAn+AAAABQAAAZforF6g",
                    "AAAAAQAAAAAAAAABKrf0Z9GS/LKu+hOOCq4fWWIWaS1ePWMaLC7oHiY6uD8AAAABAAAAAAAAAAMAAAAPAAAACXJlZmxlY3RvcgAAAAAAAA8AAAAGcHJpY2VzAAAAAAAPAAAABnVwZGF0ZQAAAAAAEAAAAAEAAAAHAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAdTdGVsbGFyAAAAABIAAAABLH5dkYL+BORXImsTnZP2P5eUUBSUtBUr2CqINF2cq2UAAAAKAAAAAAAAAAAAAAAAAAAAAAAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAHU3RlbGxhcgAAAAASAAAAAdJdJghrv2iW4dAAdbmlG96OM3bVGdmc0IfSxI0ETgXBAAAACgAAAAAAAAAAAAAAFAjvQXUAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAAB1N0ZWxsYXIAAAAAEgAAAAEDbEFmdDuNxRilcJzUG+9xW/JPAxvnRGCqcwC951njFQAAAAoAAAAAAAAAAAAAWvLhNpYXAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAdTdGVsbGFyAAAAABIAAAABpwrZOHKolMpzUngjpVN0fvP6eQACmnfUvchJrBqHThMAAAAKAAAAAAAAAAAAAAAZcB67owAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAHU3RlbGxhcgAAAAASAAAAATg8JlE3zvrN6cgQ9tBbokUCZ53xnrxXEdIBMQQPnCvqAAAACgAAAAAAAAAAAAAACkGhPLUAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAAB1N0ZWxsYXIAAAAAEgAAAAFBETE4jFssCsKOyU08hwHscIoSYhUEUkO0dhV8QRP9rQAAAAoAAAAAAAAAAAAAABJHNBYrAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAdTdGVsbGFyAAAAABIAAAABgoavkxQqSDdQ0Z3vRlwVqAiggskSD6a4g7Zql4s3jpYAAAAKAAAAAAAAAAAAAGC8lKgJ/g==",
                    "AAAAAQAAAAAAAAABKrf0Z9GS/LKu+hOOCq4fWWIWaS1ePWMaLC7oHiY6uD8AAAACAAAAAAAAAAIAAAAPAAAACWZuX3JldHVybgAAAAAAAA8AAAAJc2V0X3ByaWNlAAAAAAAAAQ==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACnJlYWRfZW50cnkAAAAAAAUAAAAAAAAACA==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAC3dyaXRlX2VudHJ5AAAAAAUAAAAAAAAABw==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEGxlZGdlcl9yZWFkX2J5dGUAAAAFAAAAAAAAWGA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEWxlZGdlcl93cml0ZV9ieXRlAAAAAAAABQAAAAAAAAcc",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADXJlYWRfa2V5X2J5dGUAAAAAAAAFAAAAAAAAAdQ=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADndyaXRlX2tleV9ieXRlAAAAAAAFAAAAAAAAAAA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADnJlYWRfZGF0YV9ieXRlAAAAAAAFAAAAAAAABNw=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD3dyaXRlX2RhdGFfYnl0ZQAAAAAFAAAAAAAABxw=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADnJlYWRfY29kZV9ieXRlAAAAAAAFAAAAAAAAU4Q=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD3dyaXRlX2NvZGVfYnl0ZQAAAAAFAAAAAAAAAAA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACmVtaXRfZXZlbnQAAAAAAAUAAAAAAAAAAQ==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD2VtaXRfZXZlbnRfYnl0ZQAAAAAFAAAAAAAAAzA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACGNwdV9pbnNuAAAABQAAAAAARc1c",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACG1lbV9ieXRlAAAABQAAAAAAIBuI",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEWludm9rZV90aW1lX25zZWNzAAAAAAAABQAAAAAAGWpZ",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD21heF9yd19rZXlfYnl0ZQAAAAAFAAAAAAAAAEA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEG1heF9yd19kYXRhX2J5dGUAAAAFAAAAAAAABNw=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEG1heF9yd19jb2RlX2J5dGUAAAAFAAAAAAAAU4Q=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAE21heF9lbWl0X2V2ZW50X2J5dGUAAAAABQAAAAAAAAMw"
                  ],
                  "events": {
                    "transactionEventsXdr": [
                      "AAAAAAAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAACWDRNrgN4HpWfA2B7H3QSMtt7GSK/J3/cH+i/Waf406QAAAAoAAAAAAAAAAAAAAAAAmJbk",
                      "AAAAAQAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAACWDRNrgN4HpWfA2B7H3QSMtt7GSK/J3/cH+i/Waf406QAAAAr/////////////////bRCK"
                    ],
                    "contractEventsXdr": [
                      [
                        "AAAAAAAAAAEqt/Rn0ZL8sq76E44Krh9ZYhZpLV49YxosLugeJjq4PwAAAAEAAAAAAAAAAwAAAA8AAAAJcmVmbGVjdG9yAAAAAAAADwAAAAZwcmljZXMAAAAAAA8AAAAGdXBkYXRlAAAAAAAQAAAAAQAAAAcAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAAB1N0ZWxsYXIAAAAAEgAAAAEsfl2Rgv4E5FciaxOdk/Y/l5RQFJS0FSvYKog0XZyrZQAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAdTdGVsbGFyAAAAABIAAAAB0l0mCGu/aJbh0AB1uaUb3o4zdtUZ2ZzQh9LEjQROBcEAAAAKAAAAAAAAAAAAAAAUCO9BdQAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAHU3RlbGxhcgAAAAASAAAAAQNsQWZ0O43FGKVwnNQb73Fb8k8DG+dEYKpzAL3nWeMVAAAACgAAAAAAAAAAAABa8uE2lhcAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAAB1N0ZWxsYXIAAAAAEgAAAAGnCtk4cqiUynNSeCOlU3R+8/p5AAKad9S9yEmsGodOEwAAAAoAAAAAAAAAAAAAABlwHrujAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAdTdGVsbGFyAAAAABIAAAABODwmUTfO+s3pyBD20FuiRQJnnfGevFcR0gExBA+cK+oAAAAKAAAAAAAAAAAAAAAKQaE8tQAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAHU3RlbGxhcgAAAAASAAAAAUERMTiMWywKwo7JTTyHAexwihJiFQRSQ7R2FXxBE/2tAAAACgAAAAAAAAAAAAAAEkc0FisAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAAB1N0ZWxsYXIAAAAAEgAAAAGChq+TFCpIN1DRne9GXBWoCKCCyRIPpriDtmqXizeOlgAAAAoAAAAAAAAAAAAAYLyUqAn+"
                      ]
                    ]
                  },
                  "ledger": 337272,
                  "createdAt": 1751955324
                },
                {
                  "status": "SUCCESS",
                  "txHash": "ad4e1293b32dfa1e9204892b64088d61465337abdf4c2eee2e9d0fa8095bf87a",
                  "applicationOrder": 5,
                  "feeBump": false,
                  "envelopeXdr": "AAAAAgAAAADuBg+afmvWN9+nlruudR93UO1rDpTe8i6yxgPgBKoBVwExLQAAAA2lAAAVwgAAAAEAAAAAAAAAAAAAAABobLeMAAAAAAAAAAEAAAABAAAAAO4GD5p+a9Y336eWu651H3dQ7WsOlN7yLrLGA+AEqgFXAAAAGAAAAAAAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAAJc2V0X3ByaWNlAAAAAAAAAgAAABAAAAABAAAACQAAAAoAAAAAAAAAAAAAar7vtc6AAAAACgAAAAAAAAAAAAB77nns4IAAAAAKAAAAAAAAAAAAAHIYVPMbgAAAAAoAAAAAAAAAAAAAQpzRyeGAAAAACgAAAAAAAAAAAAAE4WY2fkAAAAAKAAAAAAAAAAAAAAASduMCAAAAAAoAAAAAAAAAAAAAEKOEVuGAAAAACgAAAAAAAAAAAAACzMdm/4AAAAAKAAAAAAAAAAAEoCi1tZQ/gAAAAAUAAAGX6KxeoAAAAAEAAAAAAAAAAAAAAAGlJx5hXtZLUEEJA9akotOUWIv8dYiEoyuKQmACnKsp1gAAAAlzZXRfcHJpY2UAAAAAAAACAAAAEAAAAAEAAAAJAAAACgAAAAAAAAAAAABqvu+1zoAAAAAKAAAAAAAAAAAAAHvueezggAAAAAoAAAAAAAAAAAAAchhU8xuAAAAACgAAAAAAAAAAAABCnNHJ4YAAAAAKAAAAAAAAAAAAAAThZjZ+QAAAAAoAAAAAAAAAAAAAABJ24wIAAAAACgAAAAAAAAAAAAAQo4RW4YAAAAAKAAAAAAAAAAAAAALMx2b/gAAAAAoAAAAAAAAAAASgKLW1lD+AAAAABQAAAZforF6gAAAAAAAAAAEAAAAAAAAAAQAAAAfaZ5h4OOy0NoTgqFsSMHHBZ2BWo+ttPZwC2FftqORNwwAAAAoAAAAGAAAAAaUnHmFe1ktQQQkD1qSi05RYi/x1iISjK4pCYAKcqynWAAAACQAAAZforF6gAAAAAAAAAAAAAAAAAAAABgAAAAGlJx5hXtZLUEEJA9akotOUWIv8dYiEoyuKQmACnKsp1gAAAAkAAAGX6KxeoAAAAAAAAAABAAAAAAAAAAYAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAAJAAABl+isXqAAAAAAAAAAAgAAAAAAAAAGAAAAAaUnHmFe1ktQQQkD1qSi05RYi/x1iISjK4pCYAKcqynWAAAACQAAAZforF6gAAAAAAAAAAMAAAAAAAAABgAAAAGlJx5hXtZLUEEJA9akotOUWIv8dYiEoyuKQmACnKsp1gAAAAkAAAGX6KxeoAAAAAAAAAAEAAAAAAAAAAYAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAAJAAABl+isXqAAAAAAAAAABQAAAAAAAAAGAAAAAaUnHmFe1ktQQQkD1qSi05RYi/x1iISjK4pCYAKcqynWAAAACQAAAZforF6gAAAAAAAAAAYAAAAAAAAABgAAAAGlJx5hXtZLUEEJA9akotOUWIv8dYiEoyuKQmACnKsp1gAAAAkAAAGX6KxeoAAAAAAAAAAHAAAAAAAAAAYAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAAJAAABl+isXqAAAAAAAAAACAAAAAAAAAAGAAAAAaUnHmFe1ktQQQkD1qSi05RYi/x1iISjK4pCYAKcqynWAAAAFAAAAAEAmJaAAACcQAAAC7gAAAAAAJiWgAAAAAHMpdlgAAAAQEgm+1bCDSJvdFDSnyeZmEPiZMhmwZmivK2nygo7vIaoIcb88CZBs6VAKQweX0EGp54vhFUUTIK6z0cTSJtZMwo=",
                  "resultXdr": "AAAAAAAHMRAAAAAAAAAAAQAAAAAAAAAYAAAAABEOa41BV0w6YargAzlyRUm7wx575S/rr4HPaL54Gz8aAAAAAA==",
                  "resultMetaXdr": "",
                  "diagnosticEventsXdr": [
                    "AAAAAQAAAAAAAAAAAAAAAgAAAAAAAAADAAAADwAAAAdmbl9jYWxsAAAAAA0AAAAgpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAAPAAAACXNldF9wcmljZQAAAAAAABAAAAABAAAAAgAAABAAAAABAAAACQAAAAoAAAAAAAAAAAAAar7vtc6AAAAACgAAAAAAAAAAAAB77nns4IAAAAAKAAAAAAAAAAAAAHIYVPMbgAAAAAoAAAAAAAAAAAAAQpzRyeGAAAAACgAAAAAAAAAAAAAE4WY2fkAAAAAKAAAAAAAAAAAAAAASduMCAAAAAAoAAAAAAAAAAAAAEKOEVuGAAAAACgAAAAAAAAAAAAACzMdm/4AAAAAKAAAAAAAAAAAEoCi1tZQ/gAAAAAUAAAGX6KxeoA==",
                    "AAAAAQAAAAAAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAABAAAAAAAAAAMAAAAPAAAACXJlZmxlY3RvcgAAAAAAAA8AAAAGcHJpY2VzAAAAAAAPAAAABnVwZGF0ZQAAAAAAEAAAAAEAAAAJAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADRVVSAAAAAAoAAAAAAAAAAAAAar7vtc6AAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADR0JQAAAAAAoAAAAAAAAAAAAAe+557OCAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADQ0hGAAAAAAoAAAAAAAAAAAAAchhU8xuAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADQ0FEAAAAAAoAAAAAAAAAAAAAQpzRyeGAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADTVhOAAAAAAoAAAAAAAAAAAAABOFmNn5AAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADQVJTAAAAAAoAAAAAAAAAAAAAABJ24wIAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADQlJMAAAAAAoAAAAAAAAAAAAAEKOEVuGAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADVEhCAAAAAAoAAAAAAAAAAAAAAszHZv+AAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADWEFVAAAAAAoAAAAAAAAAAASgKLW1lD+A",
                    "AAAAAQAAAAAAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAACAAAAAAAAAAIAAAAPAAAACWZuX3JldHVybgAAAAAAAA8AAAAJc2V0X3ByaWNlAAAAAAAAAQ==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACnJlYWRfZW50cnkAAAAAAAUAAAAAAAAACw==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAC3dyaXRlX2VudHJ5AAAAAAUAAAAAAAAACg==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEGxlZGdlcl9yZWFkX2J5dGUAAAAFAAAAAAAAVzQ=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEWxlZGdlcl93cml0ZV9ieXRlAAAAAAAABQAAAAAAAAcQ",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADXJlYWRfa2V5X2J5dGUAAAAAAAAFAAAAAAAAApQ=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADndyaXRlX2tleV9ieXRlAAAAAAAFAAAAAAAAAAA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADnJlYWRfZGF0YV9ieXRlAAAAAAAFAAAAAAAAA7A=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD3dyaXRlX2RhdGFfYnl0ZQAAAAAFAAAAAAAABxA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADnJlYWRfY29kZV9ieXRlAAAAAAAFAAAAAAAAU4Q=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD3dyaXRlX2NvZGVfYnl0ZQAAAAAFAAAAAAAAAAA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACmVtaXRfZXZlbnQAAAAAAAUAAAAAAAAAAQ==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD2VtaXRfZXZlbnRfYnl0ZQAAAAAFAAAAAAAAAvw=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACGNwdV9pbnNuAAAABQAAAAAASJhK",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACG1lbV9ieXRlAAAABQAAAAAAIRky",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEWludm9rZV90aW1lX25zZWNzAAAAAAAABQAAAAAAFuYk",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD21heF9yd19rZXlfYnl0ZQAAAAAFAAAAAAAAAEA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEG1heF9yd19kYXRhX2J5dGUAAAAFAAAAAAAAA7A=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEG1heF9yd19jb2RlX2J5dGUAAAAFAAAAAAAAU4Q=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAE21heF9lbWl0X2V2ZW50X2J5dGUAAAAABQAAAAAAAAL8"
                  ],
                  "events": {
                    "transactionEventsXdr": [
                      "AAAAAAAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAADuBg+afmvWN9+nlruudR93UO1rDpTe8i6yxgPgBKoBVwAAAAoAAAAAAAAAAAAAAAAAmJbk",
                      "AAAAAQAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAADuBg+afmvWN9+nlruudR93UO1rDpTe8i6yxgPgBKoBVwAAAAr/////////////////bpos"
                    ],
                    "contractEventsXdr": [
                      [
                        "AAAAAAAAAAGlJx5hXtZLUEEJA9akotOUWIv8dYiEoyuKQmACnKsp1gAAAAEAAAAAAAAAAwAAAA8AAAAJcmVmbGVjdG9yAAAAAAAADwAAAAZwcmljZXMAAAAAAA8AAAAGdXBkYXRlAAAAAAAQAAAAAQAAAAkAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANFVVIAAAAACgAAAAAAAAAAAABqvu+1zoAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANHQlAAAAAACgAAAAAAAAAAAAB77nns4IAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANDSEYAAAAACgAAAAAAAAAAAAByGFTzG4AAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANDQUQAAAAACgAAAAAAAAAAAABCnNHJ4YAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANNWE4AAAAACgAAAAAAAAAAAAAE4WY2fkAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANBUlMAAAAACgAAAAAAAAAAAAAAEnbjAgAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANCUkwAAAAACgAAAAAAAAAAAAAQo4RW4YAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANUSEIAAAAACgAAAAAAAAAAAAACzMdm/4AAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANYQVUAAAAACgAAAAAAAAAABKAotbWUP4A="
                      ]
                    ]
                  },
                  "ledger": 337272,
                  "createdAt": 1751955324
                }
              ],
              "latestLedger": 353482,
              "latestLedgerCloseTimestamp": 1752036440,
              "oldestLedger": 337151,
              "oldestLedgerCloseTimestamp": 1751954719,
              "cursor": "1448572209876993"
            }
          }
        },
        {
          "name": "Successful getTransactions Request Using Cursor",
          "description": "Query a list of transactions starting from the given cursor.",
          "params": [
            {
              "name": "pagination",
              "value": {
                "cursor": "1448572209676993",
                "limit": 5
              }
            }
          ],
          "result": {
            "name": "getTransactionsResultUsingCursor",
            "value": {
              "transactions": [
                {
                  "status": "FAILED",
                  "txHash": "173d6022f8db9654f31c5aa53785385b913ed32baf8ee72f984b97a97bb0909b",
                  "applicationOrder": 1,
                  "feeBump": true,
                  "envelopeXdr": "AAAABQAAAAADKm0xr8jnLz7gKYk/CQg7DF6nkVnJNErPGZcXNDs4RwAAAAAB2j5AAAAAAgAAAAC/JkamGjlv1kc1tD/C4dJaB6vxgIfnQRZNEIndZH9mjAAAAAAAAEXVAAACNgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAABAAAAAAMqbTGvyOcvPuApiT8JCDsMXqeRWck0Ss8Zlxc0OzhHAAAAEAAAAACWzQF4RyG733Ul+cJlgJ6N6SBHVKLGfBpdDzTLMleEBQAAAAEAAAAAAyptMa/I5y8+4CmJPwkIOwxep5FZyTRKzxmXFzQ7OEcAAAAAAAAAAJbNAXhHIbvfdSX5wmWAno3pIEdUosZ8Gl0PNMsyV4QFAAAAAAAAAAAAAAABAAAAAJbNAXhHIbvfdSX5wmWAno3pIEdUosZ8Gl0PNMsyV4QFAAAABgAAAAFVU0RDAAAAAEI+fQXy7K+/7BkrIVo/G+lq7bjY5wJUq+NBPgIH3layf/////////8AAAABAAAAAJbNAXhHIbvfdSX5wmWAno3pIEdUosZ8Gl0PNMsyV4QFAAAAEQAAAAEAAAAAAyptMa/I5y8+4CmJPwkIOwxep5FZyTRKzxmXFzQ7OEcAAAABAAAAAJbNAXhHIbvfdSX5wmWAno3pIEdUosZ8Gl0PNMsyV4QFAAAAAVVTREMAAAAAQj59BfLsr7/sGSshWj8b6WrtuNjnAlSr40E+AgfeVrIAAAJMmJoCQAAAAAEAAAAAls0BeEchu991JfnCZYCejekgR1SixnwaXQ80yzJXhAUAAAABAAAAAAMqbTGvyOcvPuApiT8JCDsMXqeRWck0Ss8Zlxc0OzhHAAAAAVVTREMAAAAAQj59BfLsr7/sGSshWj8b6WrtuNjnAlSr40E+AgfeVrIAAAAAAJiWgAAAAAAAAAADNDs4RwAAAEBsY9JUoAwafnGojQcckXcOvght/skV5TLDkGYEZFgcoaofnRtEPJg1H9n6xI2rUPEldp6sTytYzSw+nAi/LbUMZH9mjAAAAEBVWIRriJF27OqY/hS5VOvO8Swbw4HjBiPzrffwZ5xq7RqYEpx4OOmbl94jj9Cdp93lyToIiH8jFJaSkQXPtGkPMleEBQAAAEB8ExSUA9xbTum5cKoarWfhgv3JX01GzddCsF/IhXgIb83AtTbIq6NrUjYHcgoID4JjiOMJcft0dUJa/EeEE7sEAAAAAAAAAAE0OzhHAAAAQPNXa7NgKAPG5/U0iJYvefDToAH9jgo8FYT7q3mYqAF0uZrlZaIYo/X18DSd36dHzRhvr1UuLYkstu2u9y3ScQY=",
                  "resultXdr": "AAAAAAAAArz////zu2AmCJI31SmmC6qXjcwfYgsaCyTb4enG267b6IADUC8AAAAAAAAAAP////8AAAAGAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAAAAAAAAAAABEAAAAAAAAAAAAAAAH////+AAAAAAAAAAH////+AAAAAAAAAAA=",
                  "resultMetaXdr": "AAAABAAAAAAAAAAEAAAAAwAFJXgAAAAAAAAAAAMqbTGvyOcvPuApiT8JCDsMXqeRWck0Ss8Zlxc0OzhHAAAALpDfahAAAAktAAAAAQAAAAEAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAABHAAAAAAAAAAMAAAAAAAAJLgAAAABoUyJqAAAAAAAAAAEABSV4AAAAAAAAAAADKm0xr8jnLz7gKYk/CQg7DF6nkVnJNErPGZcXNDs4RwAAAC6Q32oQAAAJLQAAAAEAAAABAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAARwAAAAAAAAADAAAAAAAACS4AAAAAaFMiagAAAAAAAAADAAUivAAAAAAAAAAAvyZGpho5b9ZHNbQ/wuHSWger8YCH50EWTRCJ3WR/ZowAAAAXSHbnnAAARdUAAAI1AAAAAQAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAwAAAAAABSK8AAAAAGhsqc4AAAAAAAAAAQAFJXgAAAAAAAAAAL8mRqYaOW/WRzW0P8Lh0loHq/GAh+dBFk0Qid1kf2aMAAAAF0h255wAAEXVAAACNgAAAAEAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAMAAAAAAAUleAAAAABobLd8AAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAHXkotywnA8z+r365/0701QSlWouXn8m0UOoshCtNHOYQAAAAEAAAAAAAAAAgAAAA8AAAADZmVlAAAAABIAAAAAAAAAAAMqbTGvyOcvPuApiT8JCDsMXqeRWck0Ss8Zlxc0OzhHAAAACgAAAAAAAAAAAAAAAAAAArwAAAAA",
                  "events": {
                    "transactionEventsXdr": [
                      "AAAAAAAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAAADKm0xr8jnLz7gKYk/CQg7DF6nkVnJNErPGZcXNDs4RwAAAAoAAAAAAAAAAAAAAAAAAAK8"
                    ]
                  },
                  "ledger": 337272,
                  "createdAt": 1751955324
                },
                {
                  "status": "SUCCESS",
                  "txHash": "973699dbd48afb3c81b796edce895aebe0023bbf250a6a2abd00086e5c94ab84",
                  "applicationOrder": 2,
                  "feeBump": false,
                  "envelopeXdr": "AAAAAgAAAACFivUlMyXwtcfYryl8RvpJ9Z5pRzP1+x7CbLyW3pnYDgAPQkAAAMdKAAABqAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAABB90WssODNIgi6BHveqzxTRmIpvAFRyVNM+Hm2GVuCcAAAAAAAAAADtlCZZ5vMl+JUtJJAOPYwB9hb3stEZIjMkJ2yf2ghFPAAAABdIdugAAAAAAAAAAALemdgOAAAAQE5e8FMYtuh/E8YR+eMTlnsJ3oj9Fr9KvhZnRW/bFXIeQybZwxYoQoVLjMAwHvAFqCGE/yFJOipMyPBVDvDxpA+GVuCcAAAAQLjToPzfn0kYZaepMnJbaFbMcG2f8OrD8NxOTK0peGXaIeuLsPTxRms6NuKedhzKqgCnpyMOwxm4u838aw2vdww=",
                  "resultXdr": "AAAAAAAAAGQAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA=",
                  "resultMetaXdr": "AAAABAAAAAAAAAACAAAAAwAFJXgAAAAAAAAAAIWK9SUzJfC1x9ivKXxG+kn1nmlHM/X7HsJsvJbemdgOAAAAACyz13AAAMdKAAABpwAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAMAAAAAAAUGFgAAAABobBpyAAAAAAAAAAEABSV4AAAAAAAAAACFivUlMyXwtcfYryl8RvpJ9Z5pRzP1+x7CbLyW3pnYDgAAAAAss9dwAADHSgAAAagAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAADAAAAAAAFJXgAAAAAaGy3fAAAAAAAAAABAAAAAAAAAAMAAAADAAUlbAAAAAAAAAAAEH3Rayw4M0iCLoEe96rPFNGYim8AVHJU0z4ebYZW4JwBol77S/sJ1AAAAF8AAADIAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAwAAAAAAAMdRAAAAAGhW2rkAAAAAAAAAAQAFJXgAAAAAAAAAABB90WssODNIgi6BHveqzxTRmIpvAFRyVNM+Hm2GVuCcAaJe5AOEIdQAAABfAAAAyAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAMAAAAAAADHUQAAAABoVtq5AAAAAAAAAAAABSV4AAAAAAAAAADtlCZZ5vMl+JUtJJAOPYwB9hb3stEZIjMkJ2yf2ghFPAAAABdIdugAAAUleAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAdeSi3LCcDzP6vfrn/TvTVBKVai5efybRQ6iyEK00c5hAAAAAQAAAAAAAAAEAAAADwAAAAh0cmFuc2ZlcgAAABIAAAAAAAAAABB90WssODNIgi6BHveqzxTRmIpvAFRyVNM+Hm2GVuCcAAAAEgAAAAAAAAAA7ZQmWebzJfiVLSSQDj2MAfYW97LRGSIzJCdsn9oIRTwAAAAOAAAABm5hdGl2ZQAAAAAACgAAAAAAAAAAAAAAF0h26AAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAHXkotywnA8z+r365/0701QSlWouXn8m0UOoshCtNHOYQAAAAEAAAAAAAAAAgAAAA8AAAADZmVlAAAAABIAAAAAAAAAAIWK9SUzJfC1x9ivKXxG+kn1nmlHM/X7HsJsvJbemdgOAAAACgAAAAAAAAAAAAAAAAAAAGQAAAAA",
                  "events": {
                    "transactionEventsXdr": [
                      "AAAAAAAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAACFivUlMyXwtcfYryl8RvpJ9Z5pRzP1+x7CbLyW3pnYDgAAAAoAAAAAAAAAAAAAAAAAAABk"
                    ],
                    "contractEventsXdr": [
                      [
                        "AAAAAAAAAAHXkotywnA8z+r365/0701QSlWouXn8m0UOoshCtNHOYQAAAAEAAAAAAAAABAAAAA8AAAAIdHJhbnNmZXIAAAASAAAAAAAAAAAQfdFrLDgzSIIugR73qs8U0ZiKbwBUclTTPh5thlbgnAAAABIAAAAAAAAAAO2UJlnm8yX4lS0kkA49jAH2Fvey0RkiMyQnbJ/aCEU8AAAADgAAAAZuYXRpdmUAAAAAAAoAAAAAAAAAAAAAABdIdugA"
                      ]
                    ]
                  },
                  "ledger": 337272,
                  "createdAt": 1751955324
                },
                {
                  "status": "SUCCESS",
                  "txHash": "755b48791d7b1b7c4f68675e78ba5167162133b0873949235e81006a21dd52cd",
                  "applicationOrder": 3,
                  "feeBump": false,
                  "envelopeXdr": "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",
                  "resultXdr": "AAAAAAALMtUAAAAAAAAAAQAAAAAAAAAYAAAAANnVLpUIC01nXOWYpLQG/4W2uDzPwAmGLu9KQjrgOClAAAAAAA==",
                  "resultMetaXdr": "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",
                  "diagnosticEventsXdr": [
                    "AAAAAQAAAAAAAAAAAAAAAgAAAAAAAAADAAAADwAAAAdmbl9jYWxsAAAAAA0AAAAgsOykTnm3xa4Q+3XMXCz61+1H7mszs3rZADDw9dhTmJgAAAAPAAAACXNldF9wcmljZQAAAAAAABAAAAABAAAAAgAAABAAAAABAAAAEAAAAAoAAAAAAAAAAJYxZhBWnlZ3AAAACgAAAAAAAAAAA4svb21d+NMAAAAKAAAAAAAAAAAAAFrzF8WOngAAAAoAAAAAAAAAAAAAzlZJvDSrAAAACgAAAAAAAAAAADUZdnd4hHsAAAAKAAAAAAAAAAAAAFryNi8g1QAAAAoAAAAAAAAAAAAANFak+TXaAAAACgAAAAAAAAAAAAZXAiMM0PQAAAAKAAAAAAAAAAAAATClyfjScwAAAAoAAAAAAAAAAAAAEPEKMAkQAAAACgAAAAAAAAAAAAS7lEpZRkoAAAAKAAAAAAAAAAAAAFrzEHpAAAAAAAoAAAAAAAAAAAABboY05/qTAAAACgAAAAAAAAAAAAAWjvy21H4AAAAKAAAAAAAAAAAAAqUWLpOXrgAAAAoAAAAAAAAAAAAAarh2TTl4AAAABQAAAZforF6g",
                    "AAAAAQAAAAAAAAABsOykTnm3xa4Q+3XMXCz61+1H7mszs3rZADDw9dhTmJgAAAABAAAAAAAAAAMAAAAPAAAACXJlZmxlY3RvcgAAAAAAAA8AAAAGcHJpY2VzAAAAAAAPAAAABnVwZGF0ZQAAAAAAEAAAAAEAAAAQAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADQlRDAAAAAAoAAAAAAAAAAJYxZhBWnlZ3AAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADRVRIAAAAAAoAAAAAAAAAAAOLL29tXfjTAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAAEVVNEVAAAAAoAAAAAAAAAAAAAWvMXxY6eAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADWFJQAAAAAAoAAAAAAAAAAAAAzlZJvDSrAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADU09MAAAAAAoAAAAAAAAAAAA1GXZ3eIR7AAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAAEVVNEQwAAAAoAAAAAAAAAAAAAWvI2LyDVAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADQURBAAAAAAoAAAAAAAAAAAAANFak+TXaAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAAEQVZBWAAAAAoAAAAAAAAAAAAGVwIjDND0AAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADRE9UAAAAAAoAAAAAAAAAAAABMKXJ+NJzAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAAFTUFUSUMAAAAAAAAKAAAAAAAAAAAAABDxCjAJEAAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAFT3RoZXIAAAAAAAAPAAAABExJTksAAAAKAAAAAAAAAAAABLuUSllGSgAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAFT3RoZXIAAAAAAAAPAAAAA0RBSQAAAAAKAAAAAAAAAAAAAFrzEHpAAAAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAFT3RoZXIAAAAAAAAPAAAABEFUT00AAAAKAAAAAAAAAAAAAW6GNOf6kwAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAFT3RoZXIAAAAAAAAPAAAAA1hMTQAAAAAKAAAAAAAAAAAAABaO/LbUfgAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAFT3RoZXIAAAAAAAAPAAAAA1VOSQAAAAAKAAAAAAAAAAAAAqUWLpOXrgAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAFT3RoZXIAAAAAAAAPAAAABEVVUkMAAAAKAAAAAAAAAAAAAGq4dk05eA==",
                    "AAAAAQAAAAAAAAABsOykTnm3xa4Q+3XMXCz61+1H7mszs3rZADDw9dhTmJgAAAACAAAAAAAAAAIAAAAPAAAACWZuX3JldHVybgAAAAAAAA8AAAAJc2V0X3ByaWNlAAAAAAAAAQ==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACnJlYWRfZW50cnkAAAAAAAUAAAAAAAAAEg==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAC3dyaXRlX2VudHJ5AAAAAAUAAAAAAAAAEQ==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEGxlZGdlcl9yZWFkX2J5dGUAAAAFAAAAAAAAWOA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEWxlZGdlcl93cml0ZV9ieXRlAAAAAAAABQAAAAAAAAtc",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADXJlYWRfa2V5X2J5dGUAAAAAAAAFAAAAAAAABFQ=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADndyaXRlX2tleV9ieXRlAAAAAAAFAAAAAAAAAAA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADnJlYWRfZGF0YV9ieXRlAAAAAAAFAAAAAAAABVw=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD3dyaXRlX2RhdGFfYnl0ZQAAAAAFAAAAAAAAC1w=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADnJlYWRfY29kZV9ieXRlAAAAAAAFAAAAAAAAU4Q=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD3dyaXRlX2NvZGVfYnl0ZQAAAAAFAAAAAAAAAAA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACmVtaXRfZXZlbnQAAAAAAAUAAAAAAAAAAQ==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD2VtaXRfZXZlbnRfYnl0ZQAAAAAFAAAAAAAABPg=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACGNwdV9pbnNuAAAABQAAAAAAUVs1",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACG1lbV9ieXRlAAAABQAAAAAAI+WH",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEWludm9rZV90aW1lX25zZWNzAAAAAAAABQAAAAAAJjL5",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD21heF9yd19rZXlfYnl0ZQAAAAAFAAAAAAAAAEA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEG1heF9yd19kYXRhX2J5dGUAAAAFAAAAAAAABVw=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEG1heF9yd19jb2RlX2J5dGUAAAAFAAAAAAAAU4Q=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAE21heF9lbWl0X2V2ZW50X2J5dGUAAAAABQAAAAAAAAT4"
                  ],
                  "events": {
                    "transactionEventsXdr": [
                      "AAAAAAAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAABpUTPXPvN3+8v2Cl+6qDXlDqQ6ktoudhowSiMNBqhZngAAAAoAAAAAAAAAAAAAAAAAmJbk",
                      "AAAAAQAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAABpUTPXPvN3+8v2Cl+6qDXlDqQ6ktoudhowSiMNBqhZngAAAAr/////////////////cpvx"
                    ],
                    "contractEventsXdr": [
                      [
                        "AAAAAAAAAAGw7KROebfFrhD7dcxcLPrX7UfuazOzetkAMPD12FOYmAAAAAEAAAAAAAAAAwAAAA8AAAAJcmVmbGVjdG9yAAAAAAAADwAAAAZwcmljZXMAAAAAAA8AAAAGdXBkYXRlAAAAAAAQAAAAAQAAABAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANCVEMAAAAACgAAAAAAAAAAljFmEFaeVncAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANFVEgAAAAACgAAAAAAAAAAA4svb21d+NMAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAARVU0RUAAAACgAAAAAAAAAAAABa8xfFjp4AAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANYUlAAAAAACgAAAAAAAAAAAADOVkm8NKsAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANTT0wAAAAACgAAAAAAAAAAADUZdnd4hHsAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAARVU0RDAAAACgAAAAAAAAAAAABa8jYvINUAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANBREEAAAAACgAAAAAAAAAAAAA0VqT5NdoAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAARBVkFYAAAACgAAAAAAAAAAAAZXAiMM0PQAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANET1QAAAAACgAAAAAAAAAAAAEwpcn40nMAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAAVNQVRJQwAAAAAAAAoAAAAAAAAAAAAAEPEKMAkQAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAAETElOSwAAAAoAAAAAAAAAAAAEu5RKWUZKAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADREFJAAAAAAoAAAAAAAAAAAAAWvMQekAAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAAEQVRPTQAAAAoAAAAAAAAAAAABboY05/qTAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADWExNAAAAAAoAAAAAAAAAAAAAFo78ttR+AAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADVU5JAAAAAAoAAAAAAAAAAAACpRYuk5euAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAAERVVSQwAAAAoAAAAAAAAAAAAAarh2TTl4"
                      ]
                    ]
                  },
                  "ledger": 337272,
                  "createdAt": 1751955324
                },
                {
                  "status": "SUCCESS",
                  "txHash": "5686dc3df8ef0b7af08edcf9cc2eecca90fdbab99626117770e46e0042efddcb",
                  "applicationOrder": 4,
                  "feeBump": false,
                  "envelopeXdr": "AAAAAgAAAACWDRNrgN4HpWfA2B7H3QSMtt7GSK/J3/cH+i/Waf406QExLQAAAA1qAAAVxAAAAAEAAAAAAAAAAAAAAABobLeMAAAAAAAAAAEAAAABAAAAAJYNE2uA3gelZ8DYHsfdBIy23sZIr8nf9wf6L9Zp/jTpAAAAGAAAAAAAAAABKrf0Z9GS/LKu+hOOCq4fWWIWaS1ePWMaLC7oHiY6uD8AAAAJc2V0X3ByaWNlAAAAAAAAAgAAABAAAAABAAAABwAAAAoAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAAAAAAAAAAAFAjvQXUAAAAKAAAAAAAAAAAAAFry4TaWFwAAAAoAAAAAAAAAAAAAABlwHrujAAAACgAAAAAAAAAAAAAACkGhPLUAAAAKAAAAAAAAAAAAAAASRzQWKwAAAAoAAAAAAAAAAAAAYLyUqAn+AAAABQAAAZforF6gAAAAAQAAAAAAAAAAAAAAASq39GfRkvyyrvoTjgquH1liFmktXj1jGiwu6B4mOrg/AAAACXNldF9wcmljZQAAAAAAAAIAAAAQAAAAAQAAAAcAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAAAAAAAAAAABQI70F1AAAACgAAAAAAAAAAAABa8uE2lhcAAAAKAAAAAAAAAAAAAAAZcB67owAAAAoAAAAAAAAAAAAAAApBoTy1AAAACgAAAAAAAAAAAAAAEkc0FisAAAAKAAAAAAAAAAAAAGC8lKgJ/gAAAAUAAAGX6KxeoAAAAAAAAAABAAAAAAAAAAEAAAAH2meYeDjstDaE4KhbEjBxwWdgVqPrbT2cAthX7ajkTcMAAAAHAAAABgAAAAEqt/Rn0ZL8sq76E44Krh9ZYhZpLV49YxosLugeJjq4PwAAAAkAAAGX6KxeoAAAAAAAAAABAAAAAAAAAAYAAAABKrf0Z9GS/LKu+hOOCq4fWWIWaS1ePWMaLC7oHiY6uD8AAAAJAAABl+isXqAAAAAAAAAAAgAAAAAAAAAGAAAAASq39GfRkvyyrvoTjgquH1liFmktXj1jGiwu6B4mOrg/AAAACQAAAZforF6gAAAAAAAAAAMAAAAAAAAABgAAAAEqt/Rn0ZL8sq76E44Krh9ZYhZpLV49YxosLugeJjq4PwAAAAkAAAGX6KxeoAAAAAAAAAAEAAAAAAAAAAYAAAABKrf0Z9GS/LKu+hOOCq4fWWIWaS1ePWMaLC7oHiY6uD8AAAAJAAABl+isXqAAAAAAAAAABQAAAAAAAAAGAAAAASq39GfRkvyyrvoTjgquH1liFmktXj1jGiwu6B4mOrg/AAAACQAAAZforF6gAAAAAAAAAAYAAAAAAAAABgAAAAEqt/Rn0ZL8sq76E44Krh9ZYhZpLV49YxosLugeJjq4PwAAABQAAAABAIlUQAAAnEAAAAu4AAAAAACYloAAAAABzKXZYAAAAEAiyeOyFuBoelRjU2uOG6W0J9jAVHsbNazj9Mu4AVSVGIQQGG1UhoGHvx2vNk2J+MYaK51j/FKuFa8tUgxZ3TsD",
                  "resultXdr": "AAAAAAAFp24AAAAAAAAAAQAAAAAAAAAYAAAAABZiId17tj6HU0cnDSIf44RCQvx4Ze+9PZivYVpJrS/TAAAAAA==",
                  "resultMetaXdr": "",
                  "diagnosticEventsXdr": [
                    "AAAAAQAAAAAAAAAAAAAAAgAAAAAAAAADAAAADwAAAAdmbl9jYWxsAAAAAA0AAAAgKrf0Z9GS/LKu+hOOCq4fWWIWaS1ePWMaLC7oHiY6uD8AAAAPAAAACXNldF9wcmljZQAAAAAAABAAAAABAAAAAgAAABAAAAABAAAABwAAAAoAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAAAAAAAAAAAFAjvQXUAAAAKAAAAAAAAAAAAAFry4TaWFwAAAAoAAAAAAAAAAAAAABlwHrujAAAACgAAAAAAAAAAAAAACkGhPLUAAAAKAAAAAAAAAAAAAAASRzQWKwAAAAoAAAAAAAAAAAAAYLyUqAn+AAAABQAAAZforF6g",
                    "AAAAAQAAAAAAAAABKrf0Z9GS/LKu+hOOCq4fWWIWaS1ePWMaLC7oHiY6uD8AAAABAAAAAAAAAAMAAAAPAAAACXJlZmxlY3RvcgAAAAAAAA8AAAAGcHJpY2VzAAAAAAAPAAAABnVwZGF0ZQAAAAAAEAAAAAEAAAAHAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAdTdGVsbGFyAAAAABIAAAABLH5dkYL+BORXImsTnZP2P5eUUBSUtBUr2CqINF2cq2UAAAAKAAAAAAAAAAAAAAAAAAAAAAAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAHU3RlbGxhcgAAAAASAAAAAdJdJghrv2iW4dAAdbmlG96OM3bVGdmc0IfSxI0ETgXBAAAACgAAAAAAAAAAAAAAFAjvQXUAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAAB1N0ZWxsYXIAAAAAEgAAAAEDbEFmdDuNxRilcJzUG+9xW/JPAxvnRGCqcwC951njFQAAAAoAAAAAAAAAAAAAWvLhNpYXAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAdTdGVsbGFyAAAAABIAAAABpwrZOHKolMpzUngjpVN0fvP6eQACmnfUvchJrBqHThMAAAAKAAAAAAAAAAAAAAAZcB67owAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAHU3RlbGxhcgAAAAASAAAAATg8JlE3zvrN6cgQ9tBbokUCZ53xnrxXEdIBMQQPnCvqAAAACgAAAAAAAAAAAAAACkGhPLUAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAAB1N0ZWxsYXIAAAAAEgAAAAFBETE4jFssCsKOyU08hwHscIoSYhUEUkO0dhV8QRP9rQAAAAoAAAAAAAAAAAAAABJHNBYrAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAdTdGVsbGFyAAAAABIAAAABgoavkxQqSDdQ0Z3vRlwVqAiggskSD6a4g7Zql4s3jpYAAAAKAAAAAAAAAAAAAGC8lKgJ/g==",
                    "AAAAAQAAAAAAAAABKrf0Z9GS/LKu+hOOCq4fWWIWaS1ePWMaLC7oHiY6uD8AAAACAAAAAAAAAAIAAAAPAAAACWZuX3JldHVybgAAAAAAAA8AAAAJc2V0X3ByaWNlAAAAAAAAAQ==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACnJlYWRfZW50cnkAAAAAAAUAAAAAAAAACA==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAC3dyaXRlX2VudHJ5AAAAAAUAAAAAAAAABw==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEGxlZGdlcl9yZWFkX2J5dGUAAAAFAAAAAAAAWGA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEWxlZGdlcl93cml0ZV9ieXRlAAAAAAAABQAAAAAAAAcc",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADXJlYWRfa2V5X2J5dGUAAAAAAAAFAAAAAAAAAdQ=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADndyaXRlX2tleV9ieXRlAAAAAAAFAAAAAAAAAAA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADnJlYWRfZGF0YV9ieXRlAAAAAAAFAAAAAAAABNw=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD3dyaXRlX2RhdGFfYnl0ZQAAAAAFAAAAAAAABxw=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADnJlYWRfY29kZV9ieXRlAAAAAAAFAAAAAAAAU4Q=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD3dyaXRlX2NvZGVfYnl0ZQAAAAAFAAAAAAAAAAA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACmVtaXRfZXZlbnQAAAAAAAUAAAAAAAAAAQ==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD2VtaXRfZXZlbnRfYnl0ZQAAAAAFAAAAAAAAAzA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACGNwdV9pbnNuAAAABQAAAAAARc1c",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACG1lbV9ieXRlAAAABQAAAAAAIBuI",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEWludm9rZV90aW1lX25zZWNzAAAAAAAABQAAAAAAGWpZ",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD21heF9yd19rZXlfYnl0ZQAAAAAFAAAAAAAAAEA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEG1heF9yd19kYXRhX2J5dGUAAAAFAAAAAAAABNw=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEG1heF9yd19jb2RlX2J5dGUAAAAFAAAAAAAAU4Q=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAE21heF9lbWl0X2V2ZW50X2J5dGUAAAAABQAAAAAAAAMw"
                  ],
                  "events": {
                    "transactionEventsXdr": [
                      "AAAAAAAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAACWDRNrgN4HpWfA2B7H3QSMtt7GSK/J3/cH+i/Waf406QAAAAoAAAAAAAAAAAAAAAAAmJbk",
                      "AAAAAQAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAACWDRNrgN4HpWfA2B7H3QSMtt7GSK/J3/cH+i/Waf406QAAAAr/////////////////bRCK"
                    ],
                    "contractEventsXdr": [
                      [
                        "AAAAAAAAAAEqt/Rn0ZL8sq76E44Krh9ZYhZpLV49YxosLugeJjq4PwAAAAEAAAAAAAAAAwAAAA8AAAAJcmVmbGVjdG9yAAAAAAAADwAAAAZwcmljZXMAAAAAAA8AAAAGdXBkYXRlAAAAAAAQAAAAAQAAAAcAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAAB1N0ZWxsYXIAAAAAEgAAAAEsfl2Rgv4E5FciaxOdk/Y/l5RQFJS0FSvYKog0XZyrZQAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAdTdGVsbGFyAAAAABIAAAAB0l0mCGu/aJbh0AB1uaUb3o4zdtUZ2ZzQh9LEjQROBcEAAAAKAAAAAAAAAAAAAAAUCO9BdQAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAHU3RlbGxhcgAAAAASAAAAAQNsQWZ0O43FGKVwnNQb73Fb8k8DG+dEYKpzAL3nWeMVAAAACgAAAAAAAAAAAABa8uE2lhcAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAAB1N0ZWxsYXIAAAAAEgAAAAGnCtk4cqiUynNSeCOlU3R+8/p5AAKad9S9yEmsGodOEwAAAAoAAAAAAAAAAAAAABlwHrujAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAdTdGVsbGFyAAAAABIAAAABODwmUTfO+s3pyBD20FuiRQJnnfGevFcR0gExBA+cK+oAAAAKAAAAAAAAAAAAAAAKQaE8tQAAABAAAAABAAAAAgAAABAAAAABAAAAAgAAAA8AAAAHU3RlbGxhcgAAAAASAAAAAUERMTiMWywKwo7JTTyHAexwihJiFQRSQ7R2FXxBE/2tAAAACgAAAAAAAAAAAAAAEkc0FisAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAAB1N0ZWxsYXIAAAAAEgAAAAGChq+TFCpIN1DRne9GXBWoCKCCyRIPpriDtmqXizeOlgAAAAoAAAAAAAAAAAAAYLyUqAn+"
                      ]
                    ]
                  },
                  "ledger": 337272,
                  "createdAt": 1751955324
                },
                {
                  "status": "SUCCESS",
                  "txHash": "ad4e1293b32dfa1e9204892b64088d61465337abdf4c2eee2e9d0fa8095bf87a",
                  "applicationOrder": 5,
                  "feeBump": false,
                  "envelopeXdr": "AAAAAgAAAADuBg+afmvWN9+nlruudR93UO1rDpTe8i6yxgPgBKoBVwExLQAAAA2lAAAVwgAAAAEAAAAAAAAAAAAAAABobLeMAAAAAAAAAAEAAAABAAAAAO4GD5p+a9Y336eWu651H3dQ7WsOlN7yLrLGA+AEqgFXAAAAGAAAAAAAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAAJc2V0X3ByaWNlAAAAAAAAAgAAABAAAAABAAAACQAAAAoAAAAAAAAAAAAAar7vtc6AAAAACgAAAAAAAAAAAAB77nns4IAAAAAKAAAAAAAAAAAAAHIYVPMbgAAAAAoAAAAAAAAAAAAAQpzRyeGAAAAACgAAAAAAAAAAAAAE4WY2fkAAAAAKAAAAAAAAAAAAAAASduMCAAAAAAoAAAAAAAAAAAAAEKOEVuGAAAAACgAAAAAAAAAAAAACzMdm/4AAAAAKAAAAAAAAAAAEoCi1tZQ/gAAAAAUAAAGX6KxeoAAAAAEAAAAAAAAAAAAAAAGlJx5hXtZLUEEJA9akotOUWIv8dYiEoyuKQmACnKsp1gAAAAlzZXRfcHJpY2UAAAAAAAACAAAAEAAAAAEAAAAJAAAACgAAAAAAAAAAAABqvu+1zoAAAAAKAAAAAAAAAAAAAHvueezggAAAAAoAAAAAAAAAAAAAchhU8xuAAAAACgAAAAAAAAAAAABCnNHJ4YAAAAAKAAAAAAAAAAAAAAThZjZ+QAAAAAoAAAAAAAAAAAAAABJ24wIAAAAACgAAAAAAAAAAAAAQo4RW4YAAAAAKAAAAAAAAAAAAAALMx2b/gAAAAAoAAAAAAAAAAASgKLW1lD+AAAAABQAAAZforF6gAAAAAAAAAAEAAAAAAAAAAQAAAAfaZ5h4OOy0NoTgqFsSMHHBZ2BWo+ttPZwC2FftqORNwwAAAAoAAAAGAAAAAaUnHmFe1ktQQQkD1qSi05RYi/x1iISjK4pCYAKcqynWAAAACQAAAZforF6gAAAAAAAAAAAAAAAAAAAABgAAAAGlJx5hXtZLUEEJA9akotOUWIv8dYiEoyuKQmACnKsp1gAAAAkAAAGX6KxeoAAAAAAAAAABAAAAAAAAAAYAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAAJAAABl+isXqAAAAAAAAAAAgAAAAAAAAAGAAAAAaUnHmFe1ktQQQkD1qSi05RYi/x1iISjK4pCYAKcqynWAAAACQAAAZforF6gAAAAAAAAAAMAAAAAAAAABgAAAAGlJx5hXtZLUEEJA9akotOUWIv8dYiEoyuKQmACnKsp1gAAAAkAAAGX6KxeoAAAAAAAAAAEAAAAAAAAAAYAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAAJAAABl+isXqAAAAAAAAAABQAAAAAAAAAGAAAAAaUnHmFe1ktQQQkD1qSi05RYi/x1iISjK4pCYAKcqynWAAAACQAAAZforF6gAAAAAAAAAAYAAAAAAAAABgAAAAGlJx5hXtZLUEEJA9akotOUWIv8dYiEoyuKQmACnKsp1gAAAAkAAAGX6KxeoAAAAAAAAAAHAAAAAAAAAAYAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAAJAAABl+isXqAAAAAAAAAACAAAAAAAAAAGAAAAAaUnHmFe1ktQQQkD1qSi05RYi/x1iISjK4pCYAKcqynWAAAAFAAAAAEAmJaAAACcQAAAC7gAAAAAAJiWgAAAAAHMpdlgAAAAQEgm+1bCDSJvdFDSnyeZmEPiZMhmwZmivK2nygo7vIaoIcb88CZBs6VAKQweX0EGp54vhFUUTIK6z0cTSJtZMwo=",
                  "resultXdr": "AAAAAAAHMRAAAAAAAAAAAQAAAAAAAAAYAAAAABEOa41BV0w6YargAzlyRUm7wx575S/rr4HPaL54Gz8aAAAAAA==",
                  "resultMetaXdr": "",
                  "diagnosticEventsXdr": [
                    "AAAAAQAAAAAAAAAAAAAAAgAAAAAAAAADAAAADwAAAAdmbl9jYWxsAAAAAA0AAAAgpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAAPAAAACXNldF9wcmljZQAAAAAAABAAAAABAAAAAgAAABAAAAABAAAACQAAAAoAAAAAAAAAAAAAar7vtc6AAAAACgAAAAAAAAAAAAB77nns4IAAAAAKAAAAAAAAAAAAAHIYVPMbgAAAAAoAAAAAAAAAAAAAQpzRyeGAAAAACgAAAAAAAAAAAAAE4WY2fkAAAAAKAAAAAAAAAAAAAAASduMCAAAAAAoAAAAAAAAAAAAAEKOEVuGAAAAACgAAAAAAAAAAAAACzMdm/4AAAAAKAAAAAAAAAAAEoCi1tZQ/gAAAAAUAAAGX6KxeoA==",
                    "AAAAAQAAAAAAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAABAAAAAAAAAAMAAAAPAAAACXJlZmxlY3RvcgAAAAAAAA8AAAAGcHJpY2VzAAAAAAAPAAAABnVwZGF0ZQAAAAAAEAAAAAEAAAAJAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADRVVSAAAAAAoAAAAAAAAAAAAAar7vtc6AAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADR0JQAAAAAAoAAAAAAAAAAAAAe+557OCAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADQ0hGAAAAAAoAAAAAAAAAAAAAchhU8xuAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADQ0FEAAAAAAoAAAAAAAAAAAAAQpzRyeGAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADTVhOAAAAAAoAAAAAAAAAAAAABOFmNn5AAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADQVJTAAAAAAoAAAAAAAAAAAAAABJ24wIAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADQlJMAAAAAAoAAAAAAAAAAAAAEKOEVuGAAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADVEhCAAAAAAoAAAAAAAAAAAAAAszHZv+AAAAAEAAAAAEAAAACAAAAEAAAAAEAAAACAAAADwAAAAVPdGhlcgAAAAAAAA8AAAADWEFVAAAAAAoAAAAAAAAAAASgKLW1lD+A",
                    "AAAAAQAAAAAAAAABpSceYV7WS1BBCQPWpKLTlFiL/HWIhKMrikJgApyrKdYAAAACAAAAAAAAAAIAAAAPAAAACWZuX3JldHVybgAAAAAAAA8AAAAJc2V0X3ByaWNlAAAAAAAAAQ==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACnJlYWRfZW50cnkAAAAAAAUAAAAAAAAACw==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAC3dyaXRlX2VudHJ5AAAAAAUAAAAAAAAACg==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEGxlZGdlcl9yZWFkX2J5dGUAAAAFAAAAAAAAVzQ=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEWxlZGdlcl93cml0ZV9ieXRlAAAAAAAABQAAAAAAAAcQ",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADXJlYWRfa2V5X2J5dGUAAAAAAAAFAAAAAAAAApQ=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADndyaXRlX2tleV9ieXRlAAAAAAAFAAAAAAAAAAA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADnJlYWRfZGF0YV9ieXRlAAAAAAAFAAAAAAAAA7A=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD3dyaXRlX2RhdGFfYnl0ZQAAAAAFAAAAAAAABxA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAADnJlYWRfY29kZV9ieXRlAAAAAAAFAAAAAAAAU4Q=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD3dyaXRlX2NvZGVfYnl0ZQAAAAAFAAAAAAAAAAA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACmVtaXRfZXZlbnQAAAAAAAUAAAAAAAAAAQ==",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD2VtaXRfZXZlbnRfYnl0ZQAAAAAFAAAAAAAAAvw=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACGNwdV9pbnNuAAAABQAAAAAASJhK",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAACG1lbV9ieXRlAAAABQAAAAAAIRky",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEWludm9rZV90aW1lX25zZWNzAAAAAAAABQAAAAAAFuYk",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAD21heF9yd19rZXlfYnl0ZQAAAAAFAAAAAAAAAEA=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEG1heF9yd19kYXRhX2J5dGUAAAAFAAAAAAAAA7A=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAEG1heF9yd19jb2RlX2J5dGUAAAAFAAAAAAAAU4Q=",
                    "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAADwAAAAxjb3JlX21ldHJpY3MAAAAPAAAAE21heF9lbWl0X2V2ZW50X2J5dGUAAAAABQAAAAAAAAL8"
                  ],
                  "events": {
                    "transactionEventsXdr": [
                      "AAAAAAAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAADuBg+afmvWN9+nlruudR93UO1rDpTe8i6yxgPgBKoBVwAAAAoAAAAAAAAAAAAAAAAAmJbk",
                      "AAAAAQAAAAAAAAAB15KLcsJwPM/q9+uf9O9NUEpVqLl5/JtFDqLIQrTRzmEAAAABAAAAAAAAAAIAAAAPAAAAA2ZlZQAAAAASAAAAAAAAAADuBg+afmvWN9+nlruudR93UO1rDpTe8i6yxgPgBKoBVwAAAAr/////////////////bpos"
                    ],
                    "contractEventsXdr": [
                      [
                        "AAAAAAAAAAGlJx5hXtZLUEEJA9akotOUWIv8dYiEoyuKQmACnKsp1gAAAAEAAAAAAAAAAwAAAA8AAAAJcmVmbGVjdG9yAAAAAAAADwAAAAZwcmljZXMAAAAAAA8AAAAGdXBkYXRlAAAAAAAQAAAAAQAAAAkAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANFVVIAAAAACgAAAAAAAAAAAABqvu+1zoAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANHQlAAAAAACgAAAAAAAAAAAAB77nns4IAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANDSEYAAAAACgAAAAAAAAAAAAByGFTzG4AAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANDQUQAAAAACgAAAAAAAAAAAABCnNHJ4YAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANNWE4AAAAACgAAAAAAAAAAAAAE4WY2fkAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANBUlMAAAAACgAAAAAAAAAAAAAAEnbjAgAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANCUkwAAAAACgAAAAAAAAAAAAAQo4RW4YAAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANUSEIAAAAACgAAAAAAAAAAAAACzMdm/4AAAAAQAAAAAQAAAAIAAAAQAAAAAQAAAAIAAAAPAAAABU90aGVyAAAAAAAADwAAAANYQVUAAAAACgAAAAAAAAAABKAotbWUP4A="
                      ]
                    ]
                  },
                  "ledger": 337272,
                  "createdAt": 1751955324
                }
              ],
              "latestLedger": 387257,
              "latestLedgerCloseTimestamp": 1752205462,
              "oldestLedger": 337151,
              "oldestLedgerCloseTimestamp": 1751954719,
              "cursor": "1448572209876993"
            }
          }
        }
      ]
    },
    {
      "name": "getVersionInfo",
      "summary": "returns version information of RPC and Captive Core",
      "description": "Version information about the RPC and Captive core. RPC manages its own, pared-down version of Stellar Core optimized for its own subset of needs. we'll refer to this as a \"Captive Core\" instance.",
      "externalDocs": {
        "url": "https://developers.stellar.org/docs/data/apis/rpc/api-reference/methods/getVersionInfo"
      },
      "paramStructure": "by-name",
      "params": [],
      "result": {
        "name": "getVersionInfoResult",
        "schema": {
          "type": "object",
          "required": [
            "version",
            "commit_hash",
            "build_time_stamp",
            "captive_core_version",
            "protocol_version"
          ],
          "properties": {
            "version": {
              "type": "string",
              "description": "The version of the RPC server.",
              "example": "21.1.0"
            },
            "commitHash": {
              "type": "string",
              "description": "The commit hash of the RPC server.",
              "example": "fcd2f0523f04279bae4502f3e3fa00ca627e6f6a"
            },
            "buildTimestamp": {
              "type": "string",
              "description": "The build timestamp of the RPC server.",
              "example": "2024-05-10T11:18:38"
            },
            "captiveCoreVersion": {
              "type": "string",
              "description": "The version of the Captive Core.",
              "example": "stellar-core 21.0.0.rc2 (c6f474133738ae5f6d11b07963ca841909210273)"
            },
            "protocolVersion": {
              "type": "integer",
              "description": "The protocol version.",
              "example": 21
            }
          }
        }
      },
      "examples": [
        {
          "name": "Version information of RPC",
          "description": "Example request to the `getVersionInfo` method",
          "params": [],
          "result": {
            "name": "getVersionInfoResult",
            "value": {
              "version": "21.1.0",
              "commit_hash": "fcd2f0523f04279bae4502f3e3fa00ca627e6f6a",
              "build_time_stamp": "2024-05-10T11:18:38",
              "captive_core_version": "stellar-core 21.0.0.rc2 (c6f474133738ae5f6d11b07963ca841909210273)",
              "protocol_version": 21
            }
          }
        }
      ]
    },
    {
      "name": "sendTransaction",
      "summary": "submits a transaction",
      "description": "Submit a real transaction to the Stellar network. This is the only way to make changes on-chain.\n\n Unlike Horizon, this does not wait for transaction completion. It simply validates and enqueues the transaction. Clients should call `getTransaction` to learn about transaction success/failure.\n\nThis supports all transactions, not only smart contract-related transactions.",
      "externalDocs": {
        "url": "https://developers.stellar.org/docs/data/apis/rpc/api-reference/methods/sendTransaction"
      },
      "paramStructure": "by-name",
      "params": [
        {
          "name": "transaction",
          "summary": "transaction to be submitted to the network",
          "description": "The signed transaction to broadcast for inclusion in a ledger.",
          "required": true,
          "schema": {
            "title": "transaction",
            "description": "A Stellar [TransactionEnvelope](https://github.com/stellar/stellar-xdr/blob/v22.0/Stellar-transaction.x#L1009) (as a base64-encoded string)",
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "sendTransactionResult",
        "summary": "Transaction status and network state.",
        "description": "Transaction status and network state. The result will include if the transaction was successfully enqueued, and information about the current ledger.",
        "schema": {
          "type": "object",
          "required": [
            "hash",
            "status",
            "latestLedger",
            "latestLedgerCloseTime"
          ],
          "properties": {
            "hash": {
              "title": "hash",
              "type": "string",
              "minLength": 64,
              "maxLength": 64,
              "pattern": "^[a-f\\d]{64}$",
              "description": "Transaction hash (as a hex-encoded string)"
            },
            "status": {
              "type": "string",
              "description": "The current status of the transaction by hash.",
              "enum": [
                "PENDING",
                "DUPLICATE",
                "TRY_AGAIN_LATER",
                "ERROR"
              ]
            },
            "latestLedger": {
              "title": "latestLedger",
              "description": "The sequence number of the latest ledger known to Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "latestLedgerCloseTime": {
              "title": "latestLedgerCloseTime",
              "description": "The unix timestamp of the close time of the latest ledger known to Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "errorResultXdr": {
              "type": "string",
              "description": "(optional) If the transaction status is `ERROR`, this will be a base64 encoded string of the raw TransactionResult XDR struct containing details on why stellar-core rejected the transaction.",
              "contentEncoding": "base64"
            },
            "diagnosticEventsXdr": {
              "type": "array",
              "description": "(optional) If the transaction status is `ERROR`, this field may be present with an array of base64 encoded strings. Each string will decode to a raw DiagnosticEvent XDR struct containing details on why stellar-core rejected the transaction.",
              "contentEncoding": "base64",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "examples": [
        {
          "name": "Pending Transaction",
          "description": "Submitting a valid transaction using the `sendTransaction` method, resulting in a `PENDING` status.",
          "params": [
            {
              "name": "transaction",
              "summary": "a valid transaction sent to the network",
              "description": "A valid Stellar transaction that was sent to the network successfully.",
              "value": "AAAAAgAAAAAg4dbAxsGAGICfBG3iT2cKGYQ6hK4sJWzZ6or1C5v6GAAAAGQAJsOiAAAADQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAACgAAAAVIZWxsbwAAAAAAAAEAAAAMU29yb2JhbiBEb2NzAAAAAAAAAAELm/oYAAAAQATr6Ghp/DNO7S6JjEFwcJ9a+dvI6NJr7I/2eQttvoovjQ8te4zKKaapC3mbmx6ld6YKL5T81mxs45TjzdG5zw0="
            }
          ],
          "result": {
            "name": "sendTransactionResult",
            "value": {
              "status": "PENDING",
              "hash": "d8ec9b68780314ffdfdfc2194b1b35dd27d7303c3bceaef6447e31631a1419dc",
              "latestLedger": 2553978,
              "latestLedgerCloseTime": "1700159337"
            }
          }
        },
        {
          "name": "Duplicate Transaction",
          "description": "Submitting a valid, yet duplicate transaction using the `sendTransaction` method, resulting in a `DUPLICATE` status.",
          "params": [
            {
              "name": "transaction",
              "summary": "a valid transaction sent to the network",
              "description": "A valid Stellar transaction that was sent to the network successfully.",
              "value": "AAAAAgAAAAAg4dbAxsGAGICfBG3iT2cKGYQ6hK4sJWzZ6or1C5v6GAAAAGQAJsOiAAAADQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAACgAAAAVIZWxsbwAAAAAAAAEAAAAMU29yb2JhbiBEb2NzAAAAAAAAAAELm/oYAAAAQATr6Ghp/DNO7S6JjEFwcJ9a+dvI6NJr7I/2eQttvoovjQ8te4zKKaapC3mbmx6ld6YKL5T81mxs45TjzdG5zw0="
            }
          ],
          "result": {
            "name": "sendTransactionResult",
            "value": {
              "status": "DUPLICATE",
              "hash": "d8ec9b68780314ffdfdfc2194b1b35dd27d7303c3bceaef6447e31631a1419dc",
              "latestLedger": 2553978,
              "latestLedgerCloseTime": "1700159337"
            }
          }
        },
        {
          "name": "Error Transaction",
          "description": "Submitting an invalid transaction using the `sendTransaction` method, resulting in an `ERROR` status.",
          "params": [
            {
              "name": "transaction",
              "summary": "an invalid transaction sent to the network",
              "description": "An invalid Stellar transaction that was sent to the network, built with an incorrect sequence number.",
              "value": "AAAAAgAAAAAg4dbAxsGAGICfBG3iT2cKGYQ6hK4sJWzZ6or1C5v6GAAAAGQAAAAAAAAACgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAACgAAAAVIZWxsbwAAAAAAAAEAAAAMU29yb2JhbiBEb2NzAAAAAAAAAAELm/oYAAAAQMQkfl8sdCYQIOdJB0TyazJ126y2TFRjL8yNHSb4TTsH5Ym6qM6gkTx1ENRZ0PFprVGusMTHISzdPHYJ4njBZAQ="
            }
          ],
          "result": {
            "name": "sendTransactionResult",
            "value": {
              "errorResultXdr": "AAAAAAAAAGT////7AAAAAA==",
              "status": "ERROR",
              "hash": "84a5f62bff422581dda019811daed0868a3db41833ad6e90a12f0d7db1be8167",
              "latestLedger": 2553978,
              "latestLedgerCloseTime": "1700159337"
            }
          }
        },
        {
          "name": "Try Again Later Transaction",
          "description": "Submitting a valid transaction before an account's previously submitted transaction has settled using the `sendTransaction` method, resulting in a `TRY_AGAIN_LATER` status.",
          "params": [
            {
              "name": "transaction",
              "summary": "a valid transaction sent to the network",
              "description": "A valid Stellar transaction that was sent to the network successfully.",
              "value": "AAAAAgAAAAAg4dbAxsGAGICfBG3iT2cKGYQ6hK4sJWzZ6or1C5v6GAAAAGQAJsOiAAAADQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAACgAAAAVIZWxsbwAAAAAAAAEAAAAMU29yb2JhbiBEb2NzAAAAAAAAAAELm/oYAAAAQATr6Ghp/DNO7S6JjEFwcJ9a+dvI6NJr7I/2eQttvoovjQ8te4zKKaapC3mbmx6ld6YKL5T81mxs45TjzdG5zw0="
            }
          ],
          "result": {
            "name": "sendTransactionResult",
            "value": {
              "status": "TRY_AGAIN_LATER",
              "hash": "d8ec9b68780314ffdfdfc2194b1b35dd27d7303c3bceaef6447e31631a1419dc",
              "latestLedger": 2553978,
              "latestLedgerCloseTime": "1700159337"
            }
          }
        }
      ]
    },
    {
      "name": "simulateTransaction",
      "summary": "submits a trial contract invocation transaction",
      "description": "Submit a trial contract invocation to simulate how it would be executed by the network. This endpoint calculates the effective transaction data, required authorizations, and minimal resource fee. It provides a way to test and analyze the potential outcomes of a transaction without actually submitting it to the network.",
      "externalDocs": {
        "url": "https://developers.stellar.org/docs/data/apis/rpc/api-reference/methods/simulateTransaction"
      },
      "paramStructure": "by-name",
      "params": [
        {
          "name": "transaction",
          "summary": "transaction to be simulated",
          "description": "In order for the RPC server to successfully simulate a Stellar transaction, the provided transaction must contain only a single operation of the type `invokeHostFunction`.",
          "required": true,
          "schema": {
            "title": "transaction",
            "description": "A Stellar [TransactionEnvelope](https://github.com/stellar/stellar-xdr/blob/v22.0/Stellar-transaction.x#L1009) (as a base64-encoded string)",
            "type": "string"
          }
        },
        {
          "name": "resourceConfig",
          "summary": "configuration for how resources will be calculated",
          "description": "Contains configuration for how resources will be calculated when simulating transactions.",
          "required": false,
          "schema": {
            "title": "resourceConfig",
            "description": "Configuration for how resources will be calculated.",
            "type": "object",
            "properties": {
              "instructionLeeway": {
                "title": "instructionLeeway",
                "description": "Allow this many extra instructions when budgeting resources.",
                "type": "number"
              }
            }
          }
        },
        {
          "name": "xdrFormat",
          "summary": "chooses a response format for XDR fields: 'json' or 'base64'",
          "required": false,
          "description": "Lets the user choose the format in which the response should be returned - either as unpacked JSON or as base64-encoded XDR strings. Note that you should not rely on any schema for the JSON, as it will change when the underlying XDR changes.",
          "schema": {
            "title": "xdrFormat",
            "type": "string",
            "description": "Specifies whether XDR should be encoded as Base64 (default or 'base64') or JSON ('json')."
          }
        }
      ],
      "result": {
        "name": "simulateTransactionResult",
        "summary": "anticipated affects of the transaction.",
        "description": "The response will include the anticipated affects the given transaction will have on the network. Additionally, information needed to build, sign, and actually submit the transaction will be provided.",
        "schema": {
          "type": "object",
          "required": [
            "latestLedger"
          ],
          "properties": {
            "latestLedger": {
              "title": "latestLedger",
              "description": "The sequence number of the latest ledger known to Stellar RPC at the time it handled the request.",
              "type": "number"
            },
            "minResourceFee": {
              "type": "string",
              "description": "(optional) Stringified number - Recommended minimum resource fee to add when submitting the transaction. This fee is to be added on top of the [Stellar network fee](https://developers.stellar.org/docs/learn/fundamentals/fees-resource-limits-metering#inclusion-fee). Not present in case of error."
            },
            "results": {
              "type": "array",
              "description": "(optional) - This array will only have one element: the result for the Host Function invocation. Only present on successful simulation (i.e. no error) of `InvokeHostFunction` operations.",
              "items": {
                "type": "object",
                "required": [
                  "xdr",
                  "auth"
                ],
                "properties": {
                  "xdr": {
                    "type": "string",
                    "description": "Serialized base64 string - return value of the Host Function call."
                  },
                  "auth": {
                    "type": "array",
                    "description": "Array of serialized base64 strings - Per-address authorizations recorded when simulating this Host Function call.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "transactionData": {
              "type": "string",
              "description": "(optional) Serialized base64 string - The recommended Soroban Transaction Data to use when submitting the simulated transaction. This data contains the refundable fee and resource usage information such as the ledger footprint and IO access data (serialized in a base64 string). Not present in case of error."
            },
            "events": {
              "type": "array",
              "description": "(optional) Array of serialized base64 strings - Array of the events emitted during the contract invocation. The events are ordered by their emission time. (an array of serialized base64 strings). Only present when simulating of `InvokeHostFunction` operations, note that it can be present on error, providing extra context about what failed.",
              "items": {
                "type": "string"
              }
            },
            "restorePreamble": {
              "type": "object",
              "description": "(optional) - It can only be present on successful simulation (i.e. no error) of `InvokeHostFunction` operations. If present, it indicates that the simulation detected archived ledger entries which need to be restored before the submission of the `InvokeHostFunction` operation. The `minResourceFee` and `transactionData` fields should be used to submit a transaction containing a `RestoreFootprint` operation.",
              "required": [
                "minResourceFee",
                "transactionData"
              ],
              "properties": {
                "minResourceFee": {
                  "type": "string",
                  "description": "Stringified number - Recommended minimum resource fee to add when submitting the `RestoreFootprint` operation. This fee is to be added on top of the [Stellar network fee](https://developers.stellar.org/docs/learn/fundamentals/fees-resource-limits-metering#inclusion-fee)."
                },
                "transactionData": {
                  "type": "string",
                  "description": "Serialized base64 string - The recommended Soroban Transaction Data to use when submitting the `RestoreFootprint` operation."
                }
              }
            },
            "stateChanges": {
              "type": "array",
              "description": "(optional) - On successful simulation of `InvokeHostFunction` operations, this field will be an array of `LedgerEntry`s before and after simulation occurred. Note that _at least_ one of `before` or `after` will be present: `before` and no `after` indicates a deletion event, the inverse is a creation event, and both present indicates an update event. Or just check the `type`.",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "key",
                  "before",
                  "after"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "created",
                      "updated",
                      "deleted"
                    ],
                    "description": "Indicates if the entry was created, updated, or deleted"
                  },
                  "key": {
                    "type": "string",
                    "description": "Base64 - the `LedgerKey` for this delta"
                  },
                  "before": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Base64, if present - `LedgerEntry` state prior to simulation"
                  },
                  "after": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Base64, if present - `LedgerEntry` state after simulation"
                  }
                }
              }
            },
            "error": {
              "type": "string",
              "description": "(optional) - This field will include details about why the invoke host function call failed. Only present if the transaction simulation failed."
            }
          }
        }
      },
      "examples": [
        {
          "name": "Successful Transaction Simulation",
          "description": "Transaction simulation that succeeds and returns the necessary information to prepare and submit the transaction.",
          "params": [
            {
              "name": "transaction",
              "summary": "a valid transaction",
              "description": "A transaction that will correctly invoke a contract function.",
              "value": "AAAAAgAAAAAg4dbAxsGAGICfBG3iT2cKGYQ6hK4sJWzZ6or1C5v6GAAAAGQAJsOiAAAAEQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAGAAAAAAAAAABzAP+dP0PsNzYvFF1pv7a8RQXwH5eg3uZBbbWjE9PwAsAAAAJaW5jcmVtZW50AAAAAAAAAgAAABIAAAAAAAAAACDh1sDGwYAYgJ8EbeJPZwoZhDqEriwlbNnqivULm/oYAAAAAwAAAAMAAAAAAAAAAAAAAAA="
            },
            {
              "name": "resourceConfig",
              "summary": "the default resource configuration",
              "description": "The default value for the (optional) resource configuration object for transaction simulation.",
              "value": {
                "instructionLeeway": 3000000
              }
            }
          ],
          "result": {
            "name": "simulateTransactionResult",
            "value": {
              "transactionData": "AAAAAAAAAAIAAAAGAAAAAcwD/nT9D7Dc2LxRdab+2vEUF8B+XoN7mQW21oxPT8ALAAAAFAAAAAEAAAAHy8vNUZ8vyZ2ybPHW0XbSrRtP7gEWsJ6zDzcfY9P8z88AAAABAAAABgAAAAHMA/50/Q+w3Ni8UXWm/trxFBfAfl6De5kFttaMT0/ACwAAABAAAAABAAAAAgAAAA8AAAAHQ291bnRlcgAAAAASAAAAAAAAAAAg4dbAxsGAGICfBG3iT2cKGYQ6hK4sJWzZ6or1C5v6GAAAAAEAHfKyAAAFiAAAAIgAAAAAAAAAAw==",
              "minResourceFee": "90353",
              "events": [
                "AAAAAQAAAAAAAAAAAAAAAgAAAAAAAAADAAAADwAAAAdmbl9jYWxsAAAAAA0AAAAgzAP+dP0PsNzYvFF1pv7a8RQXwH5eg3uZBbbWjE9PwAsAAAAPAAAACWluY3JlbWVudAAAAAAAABAAAAABAAAAAgAAABIAAAAAAAAAACDh1sDGwYAYgJ8EbeJPZwoZhDqEriwlbNnqivULm/oYAAAAAwAAAAM=",
                "AAAAAQAAAAAAAAABzAP+dP0PsNzYvFF1pv7a8RQXwH5eg3uZBbbWjE9PwAsAAAACAAAAAAAAAAIAAAAPAAAACWZuX3JldHVybgAAAAAAAA8AAAAJaW5jcmVtZW50AAAAAAAAAwAAAAw="
              ],
              "results": [
                {
                  "auth": [],
                  "xdr": "AAAAAwAAAAw="
                }
              ],
              "cost": {
                "cpuInsns": "1635562",
                "memBytes": "1295756"
              },
              "latestLedger": 2552139
            }
          }
        },
        {
          "name": "Failed Transaction Simulation",
          "description": "Transaction simulation that fails due to the contract invocation being constructed with an improper number of arguments.",
          "params": [
            {
              "name": "transaction",
              "summary": "an invalid transaction",
              "description": "A transaction that attempts to invoke a contract function with the wrong number of arguments.",
              "value": "AAAAAgAAAAAg4dbAxsGAGICfBG3iT2cKGYQ6hK4sJWzZ6or1C5v6GAAAAGQAJsOiAAAADwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAGAAAAAAAAAABzAP+dP0PsNzYvFF1pv7a8RQXwH5eg3uZBbbWjE9PwAsAAAAJaW5jcmVtZW50AAAAAAAAAQAAAAMAAAADAAAAAAAAAAAAAAAA"
            },
            {
              "name": "resourceConfig",
              "summary": "the default resource configuration",
              "description": "The default value for the (optional) resource configuration object for transaction simulation.",
              "value": {
                "instructionLeeway": 3000000
              }
            }
          ],
          "result": {
            "name": "simulateTransactionResult",
            "value": {
              "error": "host invocation failed\n\nCaused by:\n    HostError: Error(WasmVm, InternalError)\n    \n    Event log (newest first):\n       0: [Diagnostic Event] contract:cc03fe74fd0fb0dcd8bc5175a6fedaf11417c07e5e837b9905b6d68c4f4fc00b, topics:[error, Error(WasmVm, InternalError)], data:[\"VM call failed: Func(MismatchingParameterLen)\", increment]\n       1: [Diagnostic Event] topics:[fn_call, Bytes(cc03fe74fd0fb0dcd8bc5175a6fedaf11417c07e5e837b9905b6d68c4f4fc00b), increment], data:3\n    \n    Backtrace (newest first):\n       0: soroban_env_host::vm::Vm::invoke_function_raw\n       1: soroban_env_host::host::frame::<impl soroban_env_host::host::Host>::with_frame\n       2: soroban_env_host::host::frame::<impl soroban_env_host::host::Host>::call_n_internal\n       3: soroban_env_host::host::frame::<impl soroban_env_host::host::Host>::invoke_function\n       4: preflight::preflight::preflight_invoke_hf_op\n       5: preflight::preflight_invoke_hf_op::{{closure}}\n       6: core::ops::function::FnOnce::call_once{{vtable.shim}}\n       7: preflight::catch_preflight_panic\n       8: _cgo_0b49d6ed4a0b_Cfunc_preflight_invoke_hf_op\n                 at tmp/go-build/cgo-gcc-prolog:103:11\n       9: runtime.asmcgocall\n                 at ./runtime/asm_amd64.s:848\n    \n    ",
              "events": [
                "AAAAAAAAAAAAAAAAAAAAAgAAAAAAAAADAAAADwAAAAdmbl9jYWxsAAAAAA0AAAAgzAP+dP0PsNzYvFF1pv7a8RQXwH5eg3uZBbbWjE9PwAsAAAAPAAAACWluY3JlbWVudAAAAAAAAAMAAAAD",
                "AAAAAAAAAAAAAAABzAP+dP0PsNzYvFF1pv7a8RQXwH5eg3uZBbbWjE9PwAsAAAACAAAAAAAAAAIAAAAPAAAABWVycm9yAAAAAAAAAgAAAAEAAAAHAAAAEAAAAAEAAAACAAAADgAAAC1WTSBjYWxsIGZhaWxlZDogRnVuYyhNaXNtYXRjaGluZ1BhcmFtZXRlckxlbikAAAAAAAAPAAAACWluY3JlbWVudAAAAA=="
              ],
              "cost": {
                "cpuInsns": "0",
                "memBytes": "0"
              },
              "latestLedger": 2552013
            }
          }
        }
      ]
    }
  ],
  "components": {}
}